import { c as create_ssr_component, a as subscribe, d as escape, e as each, v as validate_component, f as add_attribute } from "../../../chunks/ssr.js";
import "../../../chunks/api.js";
import "@sveltejs/kit/internal";
import "../../../chunks/exports.js";
import "../../../chunks/utils.js";
import "../../../chunks/state.svelte.js";
import { u as user } from "../../../chunks/user.js";
const css$2 = {
  code: ".top-nav.svelte-1epg30x.svelte-1epg30x{padding:16px 16px 16px 40px;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between;background-color:rgb(255, 255, 255);border-bottom:1px solid rgb(231, 232, 234);border-top-color:rgb(231, 232, 234);border-right-color:rgb(231, 232, 234);border-left-color:rgb(231, 232, 234)}.top-nav.svelte-1epg30x .head.svelte-1epg30x{height:48px;display:flex;-webkit-box-align:center;align-items:center;font-weight:700;font-size:1.5rem;line-height:1.4;font-family:'Avenir Next', sans-serif;margin-right:16px;cursor:pointer}.hori-divider.svelte-1epg30x.svelte-1epg30x{padding-left:16px;margin-top:-16px;margin-bottom:-16px;height:74px;border-right:1px solid rgb(231, 232, 234);border-top-color:rgb(231, 232, 234);border-bottom-color:rgb(231, 232, 234);border-left-color:rgb(231, 232, 234)}",
  map: `{"version":3,"file":"Index.svelte","sources":["Index.svelte"],"sourcesContent":["<script>\\n<\/script>\\n\\n<div class=\\"top-nav\\">\\n\\t<div class=\\"head\\">\\n\\t\\t<span>Chapters</span>\\n\\t</div>\\n\\n\\t<div class=\\"hori-divider\\" />\\n</div>\\n\\n<style>\\n\\t.top-nav {\\n\\t\\tpadding: 16px 16px 16px 40px;\\n\\t\\tdisplay: flex;\\n\\t\\t-webkit-box-align: center;\\n\\t\\talign-items: center;\\n\\t\\t-webkit-box-pack: justify;\\n\\t\\tjustify-content: space-between;\\n\\t\\tbackground-color: rgb(255, 255, 255);\\n\\t\\tborder-bottom: 1px solid rgb(231, 232, 234);\\n\\t\\tborder-top-color: rgb(231, 232, 234);\\n\\t\\tborder-right-color: rgb(231, 232, 234);\\n\\t\\tborder-left-color: rgb(231, 232, 234);\\n\\t}\\n\\n\\t.top-nav .head {\\n\\t\\theight: 48px;\\n\\t\\tdisplay: flex;\\n\\t\\t-webkit-box-align: center;\\n\\t\\talign-items: center;\\n\\t\\tfont-weight: 700;\\n\\t\\tfont-size: 1.5rem;\\n\\t\\tline-height: 1.4;\\n\\t\\tfont-family: 'Avenir Next', sans-serif;\\n\\t\\tmargin-right: 16px;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\n\\t.left-arrow {\\n\\t\\tcursor: pointer;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tborder: 1px solid transparent;\\n\\t\\tborder-radius: 4px;\\n\\t\\tpadding: 4px;\\n\\t}\\n\\n\\t.left-arrow > div {\\n\\t\\tline-height: 0;\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t}\\n\\n\\t.arrow-space {\\n\\t\\tpadding-left: 4px;\\n\\t\\tpadding-right: 4px;\\n\\t}\\n\\n\\t.right-arrow {\\n\\t\\tcursor: pointer;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tborder: 1px solid transparent;\\n\\t\\tborder-radius: 4px;\\n\\t\\tpadding: 4px;\\n\\t}\\n\\n\\t.right-arrow > div {\\n\\t\\tline-height: 0;\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t}\\n\\n\\t.hori-divider {\\n\\t\\tpadding-left: 16px;\\n\\t\\tmargin-top: -16px;\\n\\t\\tmargin-bottom: -16px;\\n\\t\\theight: 74px;\\n\\t\\tborder-right: 1px solid rgb(231, 232, 234);\\n\\t\\tborder-top-color: rgb(231, 232, 234);\\n\\t\\tborder-bottom-color: rgb(231, 232, 234);\\n\\t\\tborder-left-color: rgb(231, 232, 234);\\n\\t}\\n\\n\\t.arrow:hover {\\n\\t\\tbackground-color: rgb(250, 250, 250);\\n\\t\\tborder-color: rgb(231, 232, 234);\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAYC,sCAAS,CACR,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC5B,OAAO,CAAE,IAAI,CACb,iBAAiB,CAAE,MAAM,CACzB,WAAW,CAAE,MAAM,CACnB,gBAAgB,CAAE,OAAO,CACzB,eAAe,CAAE,aAAa,CAC9B,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC3C,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,kBAAkB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACtC,iBAAiB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACrC,CAEA,uBAAQ,CAAC,oBAAM,CACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,iBAAiB,CAAE,MAAM,CACzB,WAAW,CAAE,MAAM,CACnB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,aAAa,CAAC,CAAC,UAAU,CACtC,YAAY,CAAE,IAAI,CAClB,MAAM,CAAE,OACT,CAmCA,2CAAc,CACb,YAAY,CAAE,IAAI,CAClB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,KAAK,CACpB,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,mBAAmB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACvC,iBAAiB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACrC"}`
};
const Index$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$2);
  return `<div class="top-nav svelte-1epg30x" data-svelte-h="svelte-72hea5"><div class="head svelte-1epg30x"><span>Chapters</span></div> <div class="hori-divider svelte-1epg30x"></div> </div>`;
});
const Edit = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { selectedChapter } = $$props;
  let { goBack } = $$props;
  if ($$props.selectedChapter === void 0 && $$bindings.selectedChapter && selectedChapter !== void 0) $$bindings.selectedChapter(selectedChapter);
  if ($$props.goBack === void 0 && $$bindings.goBack && goBack !== void 0) $$bindings.goBack(goBack);
  return ``;
});
const css$1 = {
  code: ".selected.svelte-1dlvoiu>.head.svelte-1dlvoiu{background-color:#b8eeff !important}.chapter.svelte-1dlvoiu.svelte-1dlvoiu{padding-left:10px}.chapter.selected.svelte-1dlvoiu.svelte-1dlvoiu{padding-left:6px;border-left:4px solid #b8eeff}.head.svelte-1dlvoiu.svelte-1dlvoiu{padding:8px;font-size:24px;background:rgb(255 248 222);margin:4px;border-radius:8px}.children.svelte-1dlvoiu.svelte-1dlvoiu{margin-left:32px}",
  map: '{"version":3,"file":"ListItem.svelte","sources":["ListItem.svelte"],"sourcesContent":["<script>\\n\\timport { goto } from \'$app/navigation\';\\n\\timport { user } from \'$lib/stores/user\';\\n\\timport ListItem from \'./ListItem.svelte\';\\n\\n\\texport let chapter;\\n\\texport let selectedChapter;\\n\\texport let selectChapter;\\n\\texport let visitChapter;\\n<\/script>\\n\\n<li class=\\"chapter\\" class:selected={selectedChapter ? selectedChapter.id === chapter.id : false}>\\n\\t<div class=\\"head\\" on:click={() => selectChapter(chapter)}>\\n\\t\\t{chapter.title}\\n\\n\\t\\t{#if $user && $user.admin}\\n\\t\\t\\t<div\\n\\t\\t\\t\\tclass=\\"btn btn-warning\\"\\n\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\tgoto(`/chapters/${chapter.id}/edit`);\\n\\t\\t\\t\\t}}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<i class=\\"fa fa-link\\" />\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\n\\t\\t<div\\n\\t\\t\\tclass=\\"btn btn-outline-primary\\"\\n\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\tgoto(`/chapters/${chapter.id}`);\\n\\t\\t\\t}}\\n\\t\\t>\\n\\t\\t\\t<i class=\\"fa fa-eye\\" />\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\"children\\">\\n\\t\\t{#each chapter.children || [] as child}\\n\\t\\t\\t<ListItem {selectedChapter} chapter={child} {selectChapter} {visitChapter} />\\n\\t\\t{/each}\\n\\t</div>\\n</li>\\n\\n<style>\\n\\t.selected > .head {\\n\\t\\tbackground-color: #b8eeff !important;\\n\\t}\\n\\n\\t.wrapper {\\n\\t\\tpadding: 20px;\\n\\t}\\n\\n\\t.chapter {\\n\\t\\tpadding-left: 10px;\\n\\t}\\n\\t.chapter.selected {\\n\\t\\tpadding-left: 6px;\\n\\t\\tborder-left: 4px solid #b8eeff;\\n\\t}\\n\\n\\t.head {\\n\\t\\tpadding: 8px;\\n\\t\\tfont-size: 24px;\\n\\t\\tbackground: rgb(255 248 222);\\n\\t\\tmargin: 4px;\\n\\t\\tborder-radius: 8px;\\n\\t}\\n\\n\\t.children {\\n\\t\\tmargin-left: 32px;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AA4CC,wBAAS,CAAG,oBAAM,CACjB,gBAAgB,CAAE,OAAO,CAAC,UAC3B,CAMA,sCAAS,CACR,YAAY,CAAE,IACf,CACA,QAAQ,uCAAU,CACjB,YAAY,CAAE,GAAG,CACjB,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,OACxB,CAEA,mCAAM,CACL,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAC5B,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,GAChB,CAEA,uCAAU,CACT,WAAW,CAAE,IACd"}'
};
const ListItem_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $user, $$unsubscribe_user;
  $$unsubscribe_user = subscribe(user, (value) => $user = value);
  let { chapter } = $$props;
  let { selectedChapter } = $$props;
  let { selectChapter } = $$props;
  let { visitChapter } = $$props;
  if ($$props.chapter === void 0 && $$bindings.chapter && chapter !== void 0) $$bindings.chapter(chapter);
  if ($$props.selectedChapter === void 0 && $$bindings.selectedChapter && selectedChapter !== void 0) $$bindings.selectedChapter(selectedChapter);
  if ($$props.selectChapter === void 0 && $$bindings.selectChapter && selectChapter !== void 0) $$bindings.selectChapter(selectChapter);
  if ($$props.visitChapter === void 0 && $$bindings.visitChapter && visitChapter !== void 0) $$bindings.visitChapter(visitChapter);
  $$result.css.add(css$1);
  $$unsubscribe_user();
  return `<li class="${[
    "chapter svelte-1dlvoiu",
    (selectedChapter ? selectedChapter.id === chapter.id : false) ? "selected" : ""
  ].join(" ").trim()}"><div class="head svelte-1dlvoiu">${escape(chapter.title)} ${$user && $user.admin ? `<div class="btn btn-warning" data-svelte-h="svelte-ecnmjt"><i class="fa fa-link"></i></div>` : ``} <div class="btn btn-outline-primary" data-svelte-h="svelte-18v9znn"><i class="fa fa-eye"></i></div></div> <div class="children svelte-1dlvoiu">${each(chapter.children || [], (child) => {
    return `${validate_component(ListItem_1, "ListItem").$$render(
      $$result,
      {
        selectedChapter,
        chapter: child,
        selectChapter,
        visitChapter
      },
      {},
      {}
    )}`;
  })}</div> </li>`;
});
const css = {
  code: ".saveProgress.svelte-nqxsi{position:fixed;bottom:10px;right:10px}.wrapper.svelte-nqxsi{padding:20px}",
  map: `{"version":3,"file":"Index.svelte","sources":["Index.svelte"],"sourcesContent":["<script>\\n\\timport { onMount, afterUpdate } from 'svelte';\\n\\timport Nav from './Nav/Index.svelte';\\n\\timport API from '$lib/api/api';\\n\\timport SelectedChapter from './Chapter/Edit.svelte';\\n\\timport ListItem from './ListItem.svelte';\\n\\timport debounceSave from '$lib/functions/debounce';\\n\\timport { user } from '$lib/stores/user';\\n\\n\\tlet chapters = [];\\n\\tlet selectedChapter = null;\\n\\tlet visitingChapter = null;\\n\\tlet organizedChapters = [];\\n\\n\\tlet unsaved = false;\\n\\tlet saving = false;\\n\\n\\tonMount(async () => {\\n\\t\\tconst res = await API.get('/chapters.json');\\n\\t\\tchapters = res;\\n\\t\\tconsole.log('first chapter fetch', chapters);\\n\\t\\torganizedChapters = organizeChapters(chapters);\\n\\t\\tconsole.log('organized chapters', organizedChapters);\\n\\t});\\n\\n\\tafterUpdate(() => {\\n\\t\\t// Add event listeners for arrow key navigation\\n\\t\\twindow.addEventListener('keydown', handleKeyDown);\\n\\n\\t\\treturn () => {\\n\\t\\t\\t// Remove event listeners on component destruction\\n\\t\\t\\twindow.removeEventListener('keydown', handleKeyDown);\\n\\t\\t};\\n\\t});\\n\\n\\tafterUpdate(() => {\\n\\t\\t// Add event listeners for arrow key navigation\\n\\t\\twindow.addEventListener('keydown', handleKeyDown);\\n\\n\\t\\treturn () => {\\n\\t\\t\\t// Remove event listeners on component destruction\\n\\t\\t\\twindow.removeEventListener('keydown', handleKeyDown);\\n\\t\\t};\\n\\t});\\n\\n\\tfunction handleKeyDown(event) {\\n\\t\\tif (!selectedChapter || !organizedChapters) return;\\n\\n\\t\\tlet index = -1;\\n\\t\\tlet siblings = findSiblings(organizedChapters, selectedChapter.id);\\n\\n\\t\\tif (selectedChapter.chapter_id) {\\n\\t\\t\\tindex = siblings.findIndex((chapter) => chapter.id === selectedChapter.id);\\n\\t\\t} else {\\n\\t\\t\\tsiblings = organizedChapters;\\n\\t\\t\\tindex = organizedChapters.findIndex((chapter) => chapter.id === selectedChapter.id);\\n\\t\\t}\\n\\n\\t\\tif (event.key === 's' || event.key === 'w') {\\n\\t\\t\\thandleUpDownKey(event, siblings, index);\\n\\t\\t} else if (event.key === 'd') {\\n\\t\\t\\thandleRightKey(siblings, index);\\n\\t\\t} else if (event.key === 'a') {\\n\\t\\t\\thandleLeftKey(siblings, index);\\n\\t\\t}\\n\\n\\t\\torganizedChapters = organizedChapters.map((chapter) => {\\n\\t\\t\\tif (chapter.id === selectedChapter.id && selectedChapter.chapter_id) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t...chapter,\\n\\t\\t\\t\\t\\tchildren: [...siblings]\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\treturn chapter;\\n\\t\\t});\\n\\n\\t\\tunsaved = true;\\n\\n\\t\\t// saveOrder(organizedChapters);\\n\\t\\t// saveOrder(updatePositions(organizedChapters));\\n\\t}\\n\\n\\tasync function saveOrder() {\\n\\t\\t// console.log({ array });\\n\\t\\tsaving = true;\\n\\t\\tconst array = updatePositions(organizedChapters);\\n\\t\\tawait debounceSave('/chapters/reorder', {\\n\\t\\t\\tlist: flattenTree(array).map((g) => {\\n\\t\\t\\t\\treturn { id: g.id, chapter_id: g.chapter_id, position: g.position };\\n\\t\\t\\t})\\n\\t\\t});\\n\\t\\tsaving = false;\\n\\t\\tunsaved = false;\\n\\t}\\n\\n\\tfunction updatePositions(array) {\\n\\t\\t// console.log('GOTTEN', array);\\n\\t\\tif (!array) return;\\n\\t\\tfor (let i = 0; i < array.length; i++) {\\n\\t\\t\\tarray[i].position = i + 1;\\n\\t\\t\\tarray[i].children = updatePositions(array[i].children);\\n\\t\\t}\\n\\n\\t\\treturn array;\\n\\t}\\n\\n\\tfunction handleUpDownKey(event, container, index) {\\n\\t\\tif (selectedChapter) {\\n\\t\\t\\tif (!container) {\\n\\t\\t\\t\\tconsole.log('no parent');\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tconsole.log({ container });\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (event.key === 's' && index < container.length - 1) {\\n\\t\\t\\t\\t// Move the chapter down\\n\\t\\t\\t\\tswapPositions(container, index, index + 1);\\n\\t\\t\\t} else if (event.key === 'w' && index > 0) {\\n\\t\\t\\t\\t// Move the chapter up\\n\\t\\t\\t\\tswapPositions(container, index, index - 1);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction handleRightKey(siblings, index) {\\n\\t\\tconst currentIndex = siblings.indexOf(selectedChapter);\\n\\t\\tconst futureParentIndex = currentIndex - 1;\\n\\n\\t\\tconsole.log({ futureParentIndex });\\n\\n\\t\\tif (futureParentIndex >= 0 && futureParentIndex < siblings.length - 1) {\\n\\t\\t\\t// Save the removed element\\n\\t\\t\\tconst removedElement = siblings.splice(currentIndex, 1)[0];\\n\\n\\t\\t\\tselectedChapter.chapter_id = siblings[futureParentIndex].id;\\n\\t\\t\\tif (!siblings[futureParentIndex].children) {\\n\\t\\t\\t\\tsiblings[futureParentIndex].children = [];\\n\\t\\t\\t}\\n\\t\\t\\tsiblings[futureParentIndex].children = [\\n\\t\\t\\t\\t...siblings[futureParentIndex].children,\\n\\t\\t\\t\\tremovedElement\\n\\t\\t\\t];\\n\\t\\t}\\n\\t}\\n\\n\\tfunction handleLeftKey(siblings, index) {\\n\\t\\tif (!selectedChapter || !selectedChapter.chapter_id) {\\n\\t\\t\\treturn;\\n\\t\\t} else {\\n\\t\\t\\tconst grandparentId = findGrandparentId(organizedChapters, selectedChapter.chapter_id);\\n\\t\\t\\tlet newParent;\\n\\t\\t\\tlet currentParent;\\n\\t\\t\\tlet currentParentIndex;\\n\\t\\t\\tif (grandparentId !== null) {\\n\\t\\t\\t\\tnewParent = findChapter(organizedChapters, grandparentId);\\n\\t\\t\\t\\tcurrentParent = findChapter(organizedChapters, selectedChapter.chapter_id);\\n\\t\\t\\t\\tcurrentParentIndex = newParent.children.findIndex(\\n\\t\\t\\t\\t\\t(chapter) => chapter.id === currentParent.id\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\tconsole.log({ newParent });\\n\\t\\t\\t\\tconsole.log({ currentParent });\\n\\t\\t\\t\\tconsole.log({ currentParentIndex });\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tnewParent = organizedChapters;\\n\\t\\t\\t\\tcurrentParent = findChapter(organizedChapters, selectedChapter.chapter_id);\\n\\t\\t\\t\\tcurrentParentIndex = newParent.findIndex((chapter) => chapter.id === currentParent.id);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (currentParentIndex >= 0) {\\n\\t\\t\\t\\t// Remove the selected chapter from its parent\\n\\t\\t\\t\\tconst removedElement = currentParent.children.splice(index, 1)[0];\\n\\t\\t\\t\\tconsole.log(currentParent.children);\\n\\t\\t\\t\\tremovedElement.chapter_id = newParent.id;\\n\\t\\t\\t\\tif (Array.isArray(newParent)) {\\n\\t\\t\\t\\t\\tnewParent.splice(currentParentIndex + 1, 0, removedElement);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tnewParent.children.splice(currentParentIndex + 1, 0, removedElement);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction swapPositions(array, indexA, indexB) {\\n\\t\\tconst temp = array[indexA];\\n\\t\\tarray[indexA] = array[indexB];\\n\\t\\tarray[indexB] = temp;\\n\\t}\\n\\n\\tfunction flattenTree(tree) {\\n\\t\\treturn tree.reduce((acc, node) => {\\n\\t\\t\\tacc.push(node);\\n\\t\\t\\tif (node.children) {\\n\\t\\t\\t\\tacc.push(...flattenTree(node.children));\\n\\t\\t\\t}\\n\\t\\t\\treturn acc;\\n\\t\\t}, []);\\n\\t}\\n\\tfunction findGrandparentId(arr, chapterId) {\\n\\t\\tfor (let chapter of arr) {\\n\\t\\t\\tif (chapter.children && chapter.children.some((child) => child.id === chapterId)) {\\n\\t\\t\\t\\treturn chapter.id;\\n\\t\\t\\t}\\n\\t\\t\\tif (chapter.children) {\\n\\t\\t\\t\\tconst result = findGrandparentId(chapter.children, chapterId);\\n\\t\\t\\t\\tif (result !== null) {\\n\\t\\t\\t\\t\\treturn result; // Return if found in children\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn null;\\n\\t}\\n\\n\\tfunction findChapter(arr, chapterId) {\\n\\t\\t// console.log({ chapterId });\\n\\t\\tfor (let chapter of arr) {\\n\\t\\t\\tif (chapter.id === chapterId) {\\n\\t\\t\\t\\treturn chapter;\\n\\t\\t\\t}\\n\\t\\t\\tif (chapter.children) {\\n\\t\\t\\t\\tconst result = findChapter(chapter.children, chapterId);\\n\\t\\t\\t\\tif (result !== null) {\\n\\t\\t\\t\\t\\treturn result; // Return if found in children\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn null;\\n\\t}\\n\\t// function findChapterIndex(arr, chapterId) {\\n\\t// \\tfor (let chapter of arr) {\\n\\t// \\t\\t// console.log({ chapter }, chapterId);\\n\\t// \\t\\tif (chapter.id === chapterId) {\\n\\t// \\t\\t\\treturn chapter;\\n\\t// \\t\\t}\\n\\t// \\t\\tconst result = findParent(chapter.children || [], chapterId);\\n\\t// \\t}\\n\\t// \\treturn chapter;\\n\\t// }\\n\\n\\tfunction findSiblings(arr, chapterId) {\\n\\t\\tfor (let chapter of arr) {\\n\\t\\t\\tif (chapter.children && chapter.children.some((child) => child.id === chapterId)) {\\n\\t\\t\\t\\treturn chapter.children;\\n\\t\\t\\t}\\n\\t\\t\\tif (chapter.children) {\\n\\t\\t\\t\\tconst result = findSiblings(chapter.children, chapterId);\\n\\t\\t\\t\\tif (result.length > 0) {\\n\\t\\t\\t\\t\\tconsole.log('FOUND IN CHILDREN');\\n\\t\\t\\t\\t\\treturn result; // Return if found in children\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn [];\\n\\t}\\n\\n\\t// $: organizedChapters = organizeChapters(chapters);\\n\\t// $: console.log({ organizedChapters });\\n\\n\\tfunction organizeChapters(chapters, parentId = null) {\\n\\t\\t// Filter chapters based on the current parent ID\\n\\t\\tconst filteredChapters = chapters.filter((chapter) => chapter.chapter_id === parentId);\\n\\n\\t\\t// Recursively organize children for each filtered chapter\\n\\t\\tconst organizedChildren = filteredChapters.map((parentChapter) => {\\n\\t\\t\\tconst children = organizeChapters(chapters, parentChapter.id);\\n\\t\\t\\treturn { ...parentChapter, children };\\n\\t\\t});\\n\\n\\t\\treturn chapters;\\n\\t}\\n\\n\\tfunction selectChapter(chapter) {\\n\\t\\tselectedChapter = chapter;\\n\\t\\tconsole.log({ selectedChapter });\\n\\t}\\n\\n\\tfunction visitChapter(chapter) {\\n\\t\\tvisitingChapter = chapter;\\n\\t\\tconsole.log({ visitingChapter });\\n\\t}\\n\\tlet newChapterTitle;\\n\\tasync function createChapter() {\\n\\t\\tif (newChapterTitle.length < 2) return;\\n\\t\\tconst res = await API.post('/chapters', {\\n\\t\\t\\ttitle: newChapterTitle,\\n\\t\\t\\tpositon: organizedChapters.length + 1\\n\\t\\t});\\n\\t\\tconsole.log({ res });\\n\\t\\tchapters = [...chapters, res];\\n\\t\\torganizedChapters = organizeChapters(chapters);\\n\\t\\tnewChapterTitle = '';\\n\\t}\\n<\/script>\\n\\n<div class=\\"content\\">\\n\\t<Nav />\\n\\n\\t{#if $user && $user.admin}\\n\\t\\t<div class=\\"createChapter inline-form\\">\\n\\t\\t\\t<input\\n\\t\\t\\t\\ttype=\\"text\\"\\n\\t\\t\\t\\tclass=\\"form-control\\"\\n\\t\\t\\t\\tplaceholder=\\"Create Chapter\\"\\n\\t\\t\\t\\tbind:value={newChapterTitle}\\n\\t\\t\\t/>\\n\\t\\t\\t<div class=\\"btn btn-info\\" on:click={createChapter}><i class=\\"fa fa-plus\\" /></div>\\n\\t\\t</div>\\n\\t{/if}\\n\\n\\t<div class=\\"wrapper\\">\\n\\t\\t{#if !visitingChapter}\\n\\t\\t\\t<ul class=\\"clean-list chapters\\">\\n\\t\\t\\t\\t{#each organizedChapters || [] as chapter}\\n\\t\\t\\t\\t\\t<ListItem {selectedChapter} {chapter} {selectChapter} {visitChapter} />\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</ul>\\n\\t\\t{:else}\\n\\t\\t\\t<SelectedChapter selectedChapter={visitingChapter} goBack={() => (visitingChapter = null)} />\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<div class=\\"saveProgress\\">\\n\\t\\t{#if unsaved && !saving}\\n\\t\\t\\t<div class=\\"btn btn-warning\\" on:click={saveOrder}>Unsaved Progress</div>\\n\\t\\t{:else}\\n\\t\\t\\t<div class=\\"btn btn-success\\"><i class=\\"fa fa-check\\" /></div>\\n\\t\\t{/if}\\n\\n\\t\\t{#if saving}\\n\\t\\t\\t<div class=\\"btn btn-info\\">Saving</div>\\n\\t\\t{/if}\\n\\t</div>\\n</div>\\n\\n<style>\\n\\t.saveProgress {\\n\\t\\tposition: fixed;\\n\\t\\tbottom: 10px;\\n\\t\\tright: 10px;\\n\\t}\\n\\t/* ... (your existing styles) */\\n\\t.selected {\\n\\t\\tbackground-color: #b8eeff !important;\\n\\t}\\n\\n\\t.wrapper {\\n\\t\\tpadding: 20px;\\n\\t}\\n\\n\\t.chapter {\\n\\t\\tpadding: 8px;\\n\\t\\tfont-size: 24px;\\n\\t\\tbackground: rgb(255 248 222);\\n\\t\\tmargin: 4px;\\n\\t\\tborder-radius: 8px;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAiVC,0BAAc,CACb,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IACR,CAMA,qBAAS,CACR,OAAO,CAAE,IACV"}`
};
const Index = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $user, $$unsubscribe_user;
  $$unsubscribe_user = subscribe(user, (value) => $user = value);
  let selectedChapter = null;
  let visitingChapter = null;
  let organizedChapters = [];
  function selectChapter(chapter) {
    selectedChapter = chapter;
    console.log({ selectedChapter });
  }
  function visitChapter(chapter) {
    visitingChapter = chapter;
    console.log({ visitingChapter });
  }
  let newChapterTitle;
  $$result.css.add(css);
  $$unsubscribe_user();
  return `<div class="content">${validate_component(Index$1, "Nav").$$render($$result, {}, {}, {})} ${$user && $user.admin ? `<div class="createChapter inline-form"><input type="text" class="form-control" placeholder="Create Chapter"${add_attribute("value", newChapterTitle, 0)}> <div class="btn btn-info" data-svelte-h="svelte-s2brqn"><i class="fa fa-plus"></i></div></div>` : ``} <div class="wrapper svelte-nqxsi">${!visitingChapter ? `<ul class="clean-list chapters">${each(organizedChapters || [], (chapter) => {
    return `${validate_component(ListItem_1, "ListItem").$$render(
      $$result,
      {
        selectedChapter,
        chapter,
        selectChapter,
        visitChapter
      },
      {},
      {}
    )}`;
  })}</ul>` : `${validate_component(Edit, "SelectedChapter").$$render(
    $$result,
    {
      selectedChapter: visitingChapter,
      goBack: () => visitingChapter = null
    },
    {},
    {}
  )}`}</div> <div class="saveProgress svelte-nqxsi">${`<div class="btn btn-success" data-svelte-h="svelte-1i6i9n1"><i class="fa fa-check"></i></div>`} ${``}</div> </div>`;
});
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Index, "Chapters").$$render($$result, {}, {}, {})}`;
});
export {
  Page as default
};
