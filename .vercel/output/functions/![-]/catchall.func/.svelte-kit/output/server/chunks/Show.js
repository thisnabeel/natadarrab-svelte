import { c as create_ssr_component, d as escape, a as subscribe, v as validate_component, e as each } from "./ssr.js";
import { S as Spinner } from "./Spinner.js";
import "./api.js";
import "sweetalert2";
/* empty css                                      */
import { u as user } from "./user.js";
import "@sveltejs/kit/internal";
import "./exports.js";
import "./utils.js";
import "./state.svelte.js";
const css$1 = {
  code: ".top-nav.svelte-1epg30x.svelte-1epg30x{padding:16px 16px 16px 40px;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between;background-color:rgb(255, 255, 255);border-bottom:1px solid rgb(231, 232, 234);border-top-color:rgb(231, 232, 234);border-right-color:rgb(231, 232, 234);border-left-color:rgb(231, 232, 234)}.top-nav.svelte-1epg30x .head.svelte-1epg30x{height:48px;display:flex;-webkit-box-align:center;align-items:center;font-weight:700;font-size:1.5rem;line-height:1.4;font-family:'Avenir Next', sans-serif;margin-right:16px;cursor:pointer}.arrow-space.svelte-1epg30x.svelte-1epg30x{padding-left:4px;padding-right:4px}.hori-divider.svelte-1epg30x.svelte-1epg30x{padding-left:16px;margin-top:-16px;margin-bottom:-16px;height:74px;border-right:1px solid rgb(231, 232, 234);border-top-color:rgb(231, 232, 234);border-bottom-color:rgb(231, 232, 234);border-left-color:rgb(231, 232, 234)}",
  map: `{"version":3,"file":"Nav.svelte","sources":["Nav.svelte"],"sourcesContent":["<script>\\n\\texport let toggleView;\\n\\timport { user } from '$lib/stores/user';\\n\\texport let title;\\n<\/script>\\n\\n<div class=\\"top-nav\\">\\n\\t<div class=\\"head\\">\\n\\t\\t<span>{title}</span>\\n\\t\\t<!-- <div class=\\"arrow-space\\"></div>\\n            <div class=\\"left-arrow arrow\\"><div class=\\"\\"><svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"20px\\" height=\\"20px\\" fill=\\"#626872\\" viewBox=\\"0 0 256 256\\"><path d=\\"M165.66,202.34a8,8,0,0,1-11.32,11.32l-80-80a8,8,0,0,1,0-11.32l80-80a8,8,0,0,1,11.32,11.32L91.31,128Z\\"></path></svg></div></div>\\n            <div class=\\"right-arrow arrow\\"><div class=\\"\\"><svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"20px\\" height=\\"20px\\" fill=\\"#626872\\" viewBox=\\"0 0 256 256\\"><path d=\\"M181.66,133.66l-80,80a8,8,0,0,1-11.32-11.32L164.69,128,90.34,53.66a8,8,0,0,1,11.32-11.32l80,80A8,8,0,0,1,181.66,133.66Z\\"></path></svg></div></div> -->\\n\\t\\t<div class=\\"arrow-space\\" />\\n\\t</div>\\n\\n\\t<div class=\\"hori-divider\\" />\\n</div>\\n\\n<style>\\n\\t.top-nav {\\n\\t\\tpadding: 16px 16px 16px 40px;\\n\\t\\tdisplay: flex;\\n\\t\\t-webkit-box-align: center;\\n\\t\\talign-items: center;\\n\\t\\t-webkit-box-pack: justify;\\n\\t\\tjustify-content: space-between;\\n\\t\\tbackground-color: rgb(255, 255, 255);\\n\\t\\tborder-bottom: 1px solid rgb(231, 232, 234);\\n\\t\\tborder-top-color: rgb(231, 232, 234);\\n\\t\\tborder-right-color: rgb(231, 232, 234);\\n\\t\\tborder-left-color: rgb(231, 232, 234);\\n\\t}\\n\\n\\t.top-nav .head {\\n\\t\\theight: 48px;\\n\\t\\tdisplay: flex;\\n\\t\\t-webkit-box-align: center;\\n\\t\\talign-items: center;\\n\\t\\tfont-weight: 700;\\n\\t\\tfont-size: 1.5rem;\\n\\t\\tline-height: 1.4;\\n\\t\\tfont-family: 'Avenir Next', sans-serif;\\n\\t\\tmargin-right: 16px;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\n\\t.left-arrow {\\n\\t\\tcursor: pointer;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tborder: 1px solid transparent;\\n\\t\\tborder-radius: 4px;\\n\\t\\tpadding: 4px;\\n\\t}\\n\\n\\t.left-arrow > div {\\n\\t\\tline-height: 0;\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t}\\n\\n\\t.arrow-space {\\n\\t\\tpadding-left: 4px;\\n\\t\\tpadding-right: 4px;\\n\\t}\\n\\n\\t.right-arrow {\\n\\t\\tcursor: pointer;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tborder: 1px solid transparent;\\n\\t\\tborder-radius: 4px;\\n\\t\\tpadding: 4px;\\n\\t}\\n\\n\\t.right-arrow > div {\\n\\t\\tline-height: 0;\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t}\\n\\n\\t.hori-divider {\\n\\t\\tpadding-left: 16px;\\n\\t\\tmargin-top: -16px;\\n\\t\\tmargin-bottom: -16px;\\n\\t\\theight: 74px;\\n\\t\\tborder-right: 1px solid rgb(231, 232, 234);\\n\\t\\tborder-top-color: rgb(231, 232, 234);\\n\\t\\tborder-bottom-color: rgb(231, 232, 234);\\n\\t\\tborder-left-color: rgb(231, 232, 234);\\n\\t}\\n\\n\\t.arrow:hover {\\n\\t\\tbackground-color: rgb(250, 250, 250);\\n\\t\\tborder-color: rgb(231, 232, 234);\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAmBC,sCAAS,CACR,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC5B,OAAO,CAAE,IAAI,CACb,iBAAiB,CAAE,MAAM,CACzB,WAAW,CAAE,MAAM,CACnB,gBAAgB,CAAE,OAAO,CACzB,eAAe,CAAE,aAAa,CAC9B,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC3C,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,kBAAkB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACtC,iBAAiB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACrC,CAEA,uBAAQ,CAAC,oBAAM,CACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,iBAAiB,CAAE,MAAM,CACzB,WAAW,CAAE,MAAM,CACnB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,aAAa,CAAC,CAAC,UAAU,CACtC,YAAY,CAAE,IAAI,CAClB,MAAM,CAAE,OACT,CAgBA,0CAAa,CACZ,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,GAChB,CAgBA,2CAAc,CACb,YAAY,CAAE,IAAI,CAClB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,KAAK,CACpB,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,mBAAmB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACvC,iBAAiB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACrC"}`
};
const Nav = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { toggleView } = $$props;
  let { title } = $$props;
  if ($$props.toggleView === void 0 && $$bindings.toggleView && toggleView !== void 0) $$bindings.toggleView(toggleView);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0) $$bindings.title(title);
  $$result.css.add(css$1);
  return `<div class="top-nav svelte-1epg30x"><div class="head svelte-1epg30x"><span>${escape(title)}</span>  <div class="arrow-space svelte-1epg30x"></div></div> <div class="hori-divider svelte-1epg30x"></div> </div>`;
});
const Index = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_user;
  $$unsubscribe_user = subscribe(user, (value) => value);
  let { override = false } = $$props;
  if ($$props.override === void 0 && $$bindings.override && override !== void 0) $$bindings.override(override);
  $$unsubscribe_user();
  return `${``}`;
});
const css = {
  code: ".post.svelte-1iwti6w.svelte-1iwti6w{padding:20px}.post.svelte-1iwti6w iframe{width:100% !important}.post.svelte-1iwti6w.svelte-1iwti6w{max-width:680px;margin:0 auto;display:block}.post.svelte-1iwti6w > p > img{text-align:center;margin:0 auto;display:block}.quizzes.svelte-1iwti6w h1.svelte-1iwti6w{font-size:34px}.quizzes.svelte-1iwti6w.svelte-1iwti6w{margin:10px}.quizzes.svelte-1iwti6w li.svelte-1iwti6w{font-size:24px;padding:14px;background:#f0f8ff;margin:10px}",
  map: `{"version":3,"file":"Show.svelte","sources":["Show.svelte"],"sourcesContent":["<script>\\n\\timport { onMount } from 'svelte';\\n\\timport Nav from './Nav.svelte';\\n\\timport Spinner from '../Spinner/Spinner.svelte';\\n\\timport API from '$lib/api/api';\\n\\timport Swal from 'sweetalert2';\\n\\timport { user } from '$lib/stores/user';\\n\\timport AccessGate from '$lib/components/AccessGate/Index.svelte';\\n\\timport { goto } from '$app/navigation';\\n\\n\\tlet skill = null;\\n\\texport let id;\\n\\texport let chapter;\\n\\texport let overrideGate = false;\\n\\n\\tonMount(() => {\\n\\t\\tfetchChapter();\\n\\t});\\n\\n\\tasync function fetchChapter() {\\n\\t\\t// if (chapter) return;\\n\\t\\tchapter = await API.get(\`/chapters/\${id}.json\`);\\n\\t}\\n<\/script>\\n\\n{#if chapter}\\n\\t<Nav title={chapter.title} />\\n\\n\\t<AccessGate override={overrideGate}>\\n\\t\\t<div class=\\"post\\">\\n\\t\\t\\t{@html chapter.post}\\n\\t\\t</div>\\n\\n\\t\\t{#if chapter.games}\\n\\t\\t\\t<div class=\\"quizzes\\">\\n\\t\\t\\t\\t<h1>Practice:</h1>\\n\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t{#each chapter.games as game}\\n\\t\\t\\t\\t\\t\\t<li on:click={() => goto(\`/games/\${game.id}\`)}>\\n\\t\\t\\t\\t\\t\\t\\t{game.title}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"btn btn-outline-primary\\">Begin Test</div>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t</AccessGate>\\n{:else}\\n\\t<Spinner />\\n{/if}\\n\\n<style>\\n\\t.post {\\n\\t\\tpadding: 20px;\\n\\t}\\n\\n\\t.post :global(iframe) {\\n\\t\\twidth: 100% !important;\\n\\t}\\n\\n\\t.post {\\n\\t\\tmax-width: 680px;\\n\\t\\tmargin: 0 auto;\\n\\t\\tdisplay: block;\\n\\t}\\n\\n\\t.post :global(> p > img) {\\n\\t\\ttext-align: center;\\n\\t\\tmargin: 0 auto;\\n\\t\\tdisplay: block;\\n\\t}\\n\\n\\t.quizzes h1 {\\n\\t\\tfont-size: 34px;\\n\\t}\\n\\n\\t.quizzes {\\n\\t\\tmargin: 10px;\\n\\t}\\n\\t.quizzes li {\\n\\t\\tfont-size: 24px;\\n\\t\\tpadding: 14px;\\n\\t\\tbackground: #f0f8ff;\\n\\t\\tmargin: 10px;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAoDC,mCAAM,CACL,OAAO,CAAE,IACV,CAEA,oBAAK,CAAS,MAAQ,CACrB,KAAK,CAAE,IAAI,CAAC,UACb,CAEA,mCAAM,CACL,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,KACV,CAEA,oBAAK,CAAS,SAAW,CACxB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,KACV,CAEA,uBAAQ,CAAC,iBAAG,CACX,SAAS,CAAE,IACZ,CAEA,sCAAS,CACR,MAAM,CAAE,IACT,CACA,uBAAQ,CAAC,iBAAG,CACX,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,IACT"}`
};
const Show = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { id } = $$props;
  let { chapter } = $$props;
  let { overrideGate = false } = $$props;
  if ($$props.id === void 0 && $$bindings.id && id !== void 0) $$bindings.id(id);
  if ($$props.chapter === void 0 && $$bindings.chapter && chapter !== void 0) $$bindings.chapter(chapter);
  if ($$props.overrideGate === void 0 && $$bindings.overrideGate && overrideGate !== void 0) $$bindings.overrideGate(overrideGate);
  $$result.css.add(css);
  return `${chapter ? `${validate_component(Nav, "Nav").$$render($$result, { title: chapter.title }, {}, {})} ${validate_component(Index, "AccessGate").$$render($$result, { override: overrideGate }, {}, {
    default: () => {
      return `<div class="post svelte-1iwti6w"><!-- HTML_TAG_START -->${chapter.post}<!-- HTML_TAG_END --></div> ${chapter.games ? `<div class="quizzes svelte-1iwti6w"><h1 class="svelte-1iwti6w" data-svelte-h="svelte-1s40r1h">Practice:</h1> <ul>${each(chapter.games, (game) => {
        return `<li class="svelte-1iwti6w">${escape(game.title)} <div class="btn btn-outline-primary" data-svelte-h="svelte-1nni8bc">Begin Test</div> </li>`;
      })}</ul></div>` : ``}`;
    }
  })}` : `${validate_component(Spinner, "Spinner").$$render($$result, {}, {}, {})}`}`;
});
export {
  Show as S
};
