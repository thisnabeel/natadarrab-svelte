import { c as create_ssr_component, a as subscribe, v as validate_component, f as add_attribute, d as escape, e as each, j as null_to_empty, o as onDestroy } from "./ssr.js";
import { A as API } from "./api.js";
import "@sveltejs/kit/internal";
import "./exports.js";
import "./utils.js";
import "./state.svelte.js";
/* empty css                                          */
import { f as flow, e as editMode, s as selectedSurah, a as selectedSegment, b as selectedNote, p as playlists, c as selectedSegmentContentPlaylists, g as grid, d as segments, h as gopher, r as rightNavTab, t as translation } from "./store.js";
import { d as device } from "./device.js";
/* empty css                                     */
/* empty css                                    */
import "./index5.js";
/* empty css                                      */
import "@tiptap/starter-kit";
import { p as page } from "./stores.js";
import { S as Search, V as Verse } from "./Search.js";
import { u as user } from "./user.js";
import { S as Spinner } from "./Spinner.js";
function goto(url, opts = {}) {
  {
    throw new Error("Cannot call goto(...) on the server");
  }
}
const css$b = {
  code: ".select-holder.svelte-3q48pn.svelte-3q48pn{display:flex;margin:0 auto;max-width:740px;font-size:34px;padding-left:20px;border-left:2px solid #eee;margin-left:20px}.select-holder.svelte-3q48pn hr.svelte-3q48pn{margin-top:20px;margin-bottom:20px;border:0;border-top:1px solid #eeeeee;box-sizing:content-box;height:0}.top-nav.svelte-3q48pn.svelte-3q48pn{padding:16px 16px 16px 40px;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between;background-color:rgb(255, 255, 255);border-bottom:1px solid rgb(231, 232, 234);border-top-color:rgb(231, 232, 234);border-right-color:rgb(231, 232, 234);border-left-color:rgb(231, 232, 234)}.top-nav.svelte-3q48pn .head.svelte-3q48pn{height:48px;display:flex;-webkit-box-align:center;align-items:center;font-weight:700;font-size:1.5rem;line-height:1.4;font-family:'Avenir Next', sans-serif;margin-right:16px;cursor:pointer}.hori-divider.svelte-3q48pn.svelte-3q48pn{padding-left:16px;margin-top:-16px;margin-bottom:-16px;height:74px;border-right:1px solid rgb(231, 232, 234);border-top-color:rgb(231, 232, 234);border-bottom-color:rgb(231, 232, 234);border-left-color:rgb(231, 232, 234)}.select-holder.svelte-3q48pn.svelte-3q48pn{display:inline-flex;height:100%;margin:0 auto;max-width:740px;font-size:34px;padding-left:20px;border-left:2px solid #eee;margin-left:20px;z-index:999999}.gray.svelte-3q48pn.svelte-3q48pn{color:#ccc}.gray.flow.svelte-3q48pn.svelte-3q48pn{color:#5213ff}",
  map: `{"version":3,"file":"Nav.svelte","sources":["Nav.svelte"],"sourcesContent":["<script>\\n\\timport { goto } from '$app/navigation';\\n\\texport let listMode = false;\\n\\n\\texport let surah;\\n\\texport let fetchSurah;\\n\\timport { page } from '$app/stores';\\n\\timport { onMount } from 'svelte';\\n\\timport Search from '../Main/Search/Search.svelte';\\n\\timport { segments, editMode, flow, selectedSurah } from '$lib/components/QuranFlow/store';\\n\\timport { user } from '$lib/stores/user';\\n\\n\\tlet searchInput = '';\\n\\n\\tlet searchQuery = '';\\n\\n\\tonMount(() => {\\n\\t\\tif ($page.params.verses) {\\n\\t\\t\\tconst ref_verses = $page.params.verses;\\n\\t\\t\\tconst ref_surah = ref_verses.split(':')[0];\\n\\t\\t\\tsurah = ref_surah;\\n\\t\\t\\tfetchSurah(surah);\\n\\t\\t\\tselectedSurah.set(surah);\\n\\t\\t} else {\\n\\t\\t\\tfetchSurah('1');\\n\\t\\t\\tselectedSurah.set(surah);\\n\\t\\t}\\n\\t});\\n\\n\\tfunction visitSurah(s) {\\n\\t\\tlet path = '/';\\n\\t\\tlet ladder = ['quranflow', s];\\n\\t\\tif ($page.params.language) ladder.push($page.params.language);\\n\\t\\tpath += ladder.join('/');\\n\\t\\tgoto(path);\\n\\t\\tfetchSurah(s);\\n\\t\\tselectedSurah.set(s);\\n\\t}\\n\\n\\tfunction expandRange(rangeString) {\\n\\t\\tconst [start, end] = rangeString.split('-').map(Number);\\n\\t\\tconst [startLine, startColumn] = start.split(':').map(Number);\\n\\t\\tconst [endLine, endColumn] = end.split(':').map(Number);\\n\\n\\t\\tconst result = [];\\n\\n\\t\\tfor (let line = startLine; line <= endLine; line++) {\\n\\t\\t\\tfor (\\n\\t\\t\\t\\tlet column = line === startLine ? startColumn : 1;\\n\\t\\t\\t\\tcolumn <= (line === endLine ? endColumn : Infinity);\\n\\t\\t\\t\\tcolumn++\\n\\t\\t\\t) {\\n\\t\\t\\t\\tresult.push(\`\${line}:\${column}\`);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\n\\tasync function deliver(payload) {\\n\\t\\tswitch (payload.action) {\\n\\t\\t\\tcase 'verse':\\n\\t\\t\\t\\t// If pressed up\\n\\t\\t\\t\\tconst verse = payload.query;\\n\\t\\t\\t\\tconst s = verse.split(':')[0];\\n\\t\\t\\t\\tsurah = s;\\n\\t\\t\\t\\tawait visitSurah(verse);\\n\\n\\t\\t\\t\\treturn;\\n\\t\\t\\tcase 40:\\n\\t\\t\\t\\t// If pressed down\\n\\n\\t\\t\\t\\treturn;\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\treturn;\\n\\t\\t}\\n\\t}\\n<\/script>\\n\\n<div class=\\"top-nav\\">\\n\\t<div class=\\"head\\">\\n\\t\\t{#if $flow}\\n\\t\\t\\t<div\\n\\t\\t\\t\\tclass=\\"fa fa-edit btn\\"\\n\\t\\t\\t\\tstyle=\\"\\"\\n\\t\\t\\t\\ton:click={() => editMode.set(!$editMode)}\\n\\t\\t\\t\\tclass:btn-outline-warning={!$editMode}\\n\\t\\t\\t\\tclass:btn-warning={$editMode}\\n\\t\\t\\t/>\\n\\t\\t{/if}\\n\\t\\t<span on:click={() => flow.set(!$flow)}\\n\\t\\t\\t>Qur'an<span class=\\"gray\\" class:flow={$flow}>Flow</span></span\\n\\t\\t>\\n\\t\\t<!-- <img class=\\"mini-header\\" src=\\"/quranflow.png\\"> -->\\n\\t\\t<div class=\\"select-holder\\">\\n\\t\\t\\t<select\\n\\t\\t\\t\\tclass=\\"surah-select\\"\\n\\t\\t\\t\\tbind:value={surah}\\n\\t\\t\\t\\ton:change={() => {\\n\\t\\t\\t\\t\\tvisitSurah(surah);\\n\\t\\t\\t\\t}}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<option value=\\"1\\">1. الفاتحة</option>\\n\\t\\t\\t\\t<option value=\\"2\\">2. البقرة</option>\\n\\t\\t\\t\\t<option value=\\"3\\">3. آل عمران</option>\\n\\t\\t\\t\\t<option value=\\"4\\">4. النساء</option>\\n\\t\\t\\t\\t<option value=\\"5\\">5. المائدة</option>\\n\\t\\t\\t\\t<option value=\\"6\\">6. الأنعام</option>\\n\\t\\t\\t\\t<option value=\\"7\\">7. الأعراف</option>\\n\\t\\t\\t\\t<option value=\\"8\\">8. الأنفال</option>\\n\\t\\t\\t\\t<option value=\\"9\\">9. التوبة</option>\\n\\t\\t\\t\\t<option value=\\"10\\">10. يونس</option>\\n\\t\\t\\t\\t<option value=\\"11\\">11. هود</option>\\n\\t\\t\\t\\t<option value=\\"12\\">12. يوسف</option>\\n\\t\\t\\t\\t<option value=\\"13\\">13. الرّعد</option>\\n\\t\\t\\t\\t<option value=\\"14\\">14. إبراهيم</option>\\n\\t\\t\\t\\t<option value=\\"15\\">15. الحجر</option>\\n\\t\\t\\t\\t<option value=\\"16\\">16. النحل</option>\\n\\t\\t\\t\\t<option value=\\"17\\">17. الإسراء</option>\\n\\t\\t\\t\\t<option value=\\"18\\">18. الكهف</option>\\n\\t\\t\\t\\t<option value=\\"19\\">19. مريم</option>\\n\\t\\t\\t\\t<option value=\\"20\\">20. طه</option>\\n\\t\\t\\t\\t<option value=\\"21\\">21. الأنبياء</option>\\n\\t\\t\\t\\t<option value=\\"22\\">22. الحج</option>\\n\\t\\t\\t\\t<option value=\\"23\\">23. المؤمنون</option>\\n\\t\\t\\t\\t<option value=\\"24\\">24. النّور</option>\\n\\t\\t\\t\\t<option value=\\"25\\">25. الفرقان</option>\\n\\t\\t\\t\\t<option value=\\"26\\">26. الشعراء</option>\\n\\t\\t\\t\\t<option value=\\"27\\">27. النمل</option>\\n\\t\\t\\t\\t<option value=\\"28\\">28. القصص</option>\\n\\t\\t\\t\\t<option value=\\"29\\">29. العنكبوت</option>\\n\\t\\t\\t\\t<option value=\\"30\\">30. الروم</option>\\n\\t\\t\\t\\t<option value=\\"31\\">31. لقمان</option>\\n\\t\\t\\t\\t<option value=\\"32\\">32. السجدة</option>\\n\\t\\t\\t\\t<option value=\\"33\\">33. الأحزاب</option>\\n\\t\\t\\t\\t<option value=\\"34\\">34. سبإ</option>\\n\\t\\t\\t\\t<option value=\\"35\\">35. فاطر</option>\\n\\t\\t\\t\\t<option value=\\"36\\">36. يس</option>\\n\\t\\t\\t\\t<option value=\\"37\\">37. الصّافّات</option>\\n\\t\\t\\t\\t<option value=\\"38\\">38. ص</option>\\n\\t\\t\\t\\t<option value=\\"39\\">39. الزمر</option>\\n\\t\\t\\t\\t<option value=\\"40\\">40. غافر</option>\\n\\t\\t\\t\\t<option value=\\"41\\">41. فصّلت</option>\\n\\t\\t\\t\\t<option value=\\"42\\">42. الشورى</option>\\n\\t\\t\\t\\t<option value=\\"43\\">43. الزخرف</option>\\n\\t\\t\\t\\t<option value=\\"44\\">44. الدخان</option>\\n\\t\\t\\t\\t<option value=\\"45\\">45. الجاثية</option>\\n\\t\\t\\t\\t<option value=\\"46\\">46. الأحقاف</option>\\n\\t\\t\\t\\t<option value=\\"47\\">47. محمد</option>\\n\\t\\t\\t\\t<option value=\\"48\\">48. الفتح</option>\\n\\t\\t\\t\\t<option value=\\"49\\">49. الحجرات</option>\\n\\t\\t\\t\\t<option value=\\"50\\">50. ق</option>\\n\\t\\t\\t\\t<option value=\\"51\\">51. الذاريات</option>\\n\\t\\t\\t\\t<option value=\\"52\\">52. الطور</option>\\n\\t\\t\\t\\t<option value=\\"53\\">53. النجم</option>\\n\\t\\t\\t\\t<option value=\\"54\\">54. القمر</option>\\n\\t\\t\\t\\t<option value=\\"55\\">55. الرحمن</option>\\n\\t\\t\\t\\t<option value=\\"56\\">56. الواقعة</option>\\n\\t\\t\\t\\t<option value=\\"57\\">57. الحديد</option>\\n\\t\\t\\t\\t<option value=\\"58\\">58. المجادلة</option>\\n\\t\\t\\t\\t<option value=\\"59\\">59. الحشر</option>\\n\\t\\t\\t\\t<option value=\\"60\\">60. الممتحنة</option>\\n\\t\\t\\t\\t<option value=\\"61\\">61. الصف</option>\\n\\t\\t\\t\\t<option value=\\"62\\">62. الجمعة</option>\\n\\t\\t\\t\\t<option value=\\"63\\">63. المنافقون</option>\\n\\t\\t\\t\\t<option value=\\"64\\">64. التغابن</option>\\n\\t\\t\\t\\t<option value=\\"65\\">65. الطلاق</option>\\n\\t\\t\\t\\t<option value=\\"66\\">66. التحريم</option>\\n\\t\\t\\t\\t<option value=\\"67\\">67. الملك</option>\\n\\t\\t\\t\\t<option value=\\"68\\">68. القلم</option>\\n\\t\\t\\t\\t<option value=\\"69\\">69. الحاقة</option>\\n\\t\\t\\t\\t<option value=\\"70\\">70. المعارج</option>\\n\\t\\t\\t\\t<option value=\\"71\\">71. نوح</option>\\n\\t\\t\\t\\t<option value=\\"72\\">72. الجن</option>\\n\\t\\t\\t\\t<option value=\\"73\\">73. المزمل</option>\\n\\t\\t\\t\\t<option value=\\"74\\">74. المدثر</option>\\n\\t\\t\\t\\t<option value=\\"75\\">75. القيامة</option>\\n\\t\\t\\t\\t<option value=\\"76\\">76. الإنسان</option>\\n\\t\\t\\t\\t<option value=\\"77\\">77. المرسلات</option>\\n\\t\\t\\t\\t<option value=\\"78\\">78. النبأ</option>\\n\\t\\t\\t\\t<option value=\\"79\\">79. النازعات</option>\\n\\t\\t\\t\\t<option value=\\"80\\">80. عبس</option>\\n\\t\\t\\t\\t<option value=\\"81\\">81. التكوير</option>\\n\\t\\t\\t\\t<option value=\\"82\\">82. الانفطار</option>\\n\\t\\t\\t\\t<option value=\\"83\\">83. المطففين</option>\\n\\t\\t\\t\\t<option value=\\"84\\">84. الانشقاق</option>\\n\\t\\t\\t\\t<option value=\\"85\\">85. البروج</option>\\n\\t\\t\\t\\t<option value=\\"86\\">86. الطارق</option>\\n\\t\\t\\t\\t<option value=\\"87\\">87. الأعلى</option>\\n\\t\\t\\t\\t<option value=\\"88\\">88. الغاشية</option>\\n\\t\\t\\t\\t<option value=\\"89\\">89. الفجر</option>\\n\\t\\t\\t\\t<option value=\\"90\\">90. البلد</option>\\n\\t\\t\\t\\t<option value=\\"91\\">91. الشمس</option>\\n\\t\\t\\t\\t<option value=\\"92\\">92. الليل</option>\\n\\t\\t\\t\\t<option value=\\"93\\">93. الضحى</option>\\n\\t\\t\\t\\t<option value=\\"94\\">94. الإنشراح</option>\\n\\t\\t\\t\\t<option value=\\"95\\">95. التين</option>\\n\\t\\t\\t\\t<option value=\\"96\\">96. العلق</option>\\n\\t\\t\\t\\t<option value=\\"97\\">97. القدر</option>\\n\\t\\t\\t\\t<option value=\\"98\\">98. البينة</option>\\n\\t\\t\\t\\t<option value=\\"99\\">99. الزلزلة</option>\\n\\t\\t\\t\\t<option value=\\"100\\">100. العاديات</option>\\n\\t\\t\\t\\t<option value=\\"101\\">101. القارعة</option>\\n\\t\\t\\t\\t<option value=\\"102\\">102. التكاثر</option>\\n\\t\\t\\t\\t<option value=\\"103\\">103. العصر</option>\\n\\t\\t\\t\\t<option value=\\"104\\">104. الهمزة</option>\\n\\t\\t\\t\\t<option value=\\"105\\">105. الفيل</option>\\n\\t\\t\\t\\t<option value=\\"106\\">106. قريش</option>\\n\\t\\t\\t\\t<option value=\\"107\\">107. الماعون</option>\\n\\t\\t\\t\\t<option value=\\"108\\">108. الكوثر</option>\\n\\t\\t\\t\\t<option value=\\"109\\">109. الكافرون</option>\\n\\t\\t\\t\\t<option value=\\"110\\">110. النصر</option>\\n\\t\\t\\t\\t<option value=\\"111\\">111. المسد</option>\\n\\t\\t\\t\\t<option value=\\"112\\">112. الإخلاص</option>\\n\\t\\t\\t\\t<option value=\\"113\\">113. الفلق</option>\\n\\t\\t\\t\\t<option value=\\"114\\">114. الناس</option>\\n\\t\\t\\t</select>\\n\\n\\t\\t\\t{#if $user && $user.admin}\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\tclass=\\"btn\\"\\n\\t\\t\\t\\t\\tclass:btn-info={$editMode}\\n\\t\\t\\t\\t\\tclass:btn-outline-info={!$editMode}\\n\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\teditMode.set(!$editMode);\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<i class=\\"fa fa-pen\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\tclass=\\"btn\\"\\n\\t\\t\\t\\t\\tclass:btn-warning={listMode}\\n\\t\\t\\t\\t\\tclass:btn-outline-warning={!listMode}\\n\\t\\t\\t\\t\\ton:click={() => {}}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<i class=\\"fa fa-list\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t\\t<hr />\\n\\t\\t\\t<div class=\\"search\\">\\n\\t\\t\\t\\t<!-- <input type=\\"text\\" class=\\"form-control\\" bind:value={searchQuery} />\\n\\t\\t\\t\\t{#if searchQuery.length > 0}\\n\\t\\t\\t\\t\\t<div class=\\"btn btn-outline-info\\" on:change={search}><i class=\\"fa fa-search\\" /></div>\\n\\t\\t\\t\\t{/if} -->\\n\\t\\t\\t\\t<Search {deliver} {searchInput} padding={10} />\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<!-- <div class=\\"arrow-space\\"></div>\\n            <div class=\\"left-arrow arrow\\"><div class=\\"\\"><svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"20px\\" height=\\"20px\\" fill=\\"#626872\\" viewBox=\\"0 0 256 256\\"><path d=\\"M165.66,202.34a8,8,0,0,1-11.32,11.32l-80-80a8,8,0,0,1,0-11.32l80-80a8,8,0,0,1,11.32,11.32L91.31,128Z\\"></path></svg></div></div>\\n            <div class=\\"arrow-space\\"></div>\\n            <div class=\\"right-arrow arrow\\"><div class=\\"\\"><svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"20px\\" height=\\"20px\\" fill=\\"#626872\\" viewBox=\\"0 0 256 256\\"><path d=\\"M181.66,133.66l-80,80a8,8,0,0,1-11.32-11.32L164.69,128,90.34,53.66a8,8,0,0,1,11.32-11.32l80,80A8,8,0,0,1,181.66,133.66Z\\"></path></svg></div></div> -->\\n\\t</div>\\n\\n\\t<div class=\\"hori-divider\\" />\\n</div>\\n\\n<style>\\n\\t.select-holder {\\n\\t\\tdisplay: flex;\\n\\t\\tmargin: 0 auto;\\n\\t\\tmax-width: 740px;\\n\\t\\tfont-size: 34px;\\n\\t\\tpadding-left: 20px;\\n\\t\\tborder-left: 2px solid #eee;\\n\\t\\tmargin-left: 20px;\\n\\t}\\n\\n\\t.select-holder hr {\\n\\t\\tmargin-top: 20px;\\n\\t\\tmargin-bottom: 20px;\\n\\t\\tborder: 0;\\n\\t\\tborder-top: 1px solid #eeeeee;\\n\\t\\tbox-sizing: content-box;\\n\\t\\theight: 0;\\n\\t}\\n\\t.mini-header {\\n\\t\\tmax-width: 180px;\\n\\t}\\n\\t.top-nav {\\n\\t\\tpadding: 16px 16px 16px 40px;\\n\\t\\tdisplay: flex;\\n\\t\\t-webkit-box-align: center;\\n\\t\\talign-items: center;\\n\\t\\t-webkit-box-pack: justify;\\n\\t\\tjustify-content: space-between;\\n\\t\\tbackground-color: rgb(255, 255, 255);\\n\\t\\tborder-bottom: 1px solid rgb(231, 232, 234);\\n\\t\\tborder-top-color: rgb(231, 232, 234);\\n\\t\\tborder-right-color: rgb(231, 232, 234);\\n\\t\\tborder-left-color: rgb(231, 232, 234);\\n\\t}\\n\\n\\t.top-nav .head {\\n\\t\\theight: 48px;\\n\\t\\tdisplay: flex;\\n\\t\\t-webkit-box-align: center;\\n\\t\\talign-items: center;\\n\\t\\tfont-weight: 700;\\n\\t\\tfont-size: 1.5rem;\\n\\t\\tline-height: 1.4;\\n\\t\\tfont-family: 'Avenir Next', sans-serif;\\n\\t\\tmargin-right: 16px;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\n\\t.left-arrow {\\n\\t\\tcursor: pointer;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tborder: 1px solid transparent;\\n\\t\\tborder-radius: 4px;\\n\\t\\tpadding: 4px;\\n\\t}\\n\\n\\t.left-arrow > div {\\n\\t\\tline-height: 0;\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t}\\n\\n\\t.arrow-space {\\n\\t\\tpadding-left: 4px;\\n\\t\\tpadding-right: 4px;\\n\\t}\\n\\n\\t.right-arrow {\\n\\t\\tcursor: pointer;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tborder: 1px solid transparent;\\n\\t\\tborder-radius: 4px;\\n\\t\\tpadding: 4px;\\n\\t}\\n\\n\\t.right-arrow > div {\\n\\t\\tline-height: 0;\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t}\\n\\n\\t.hori-divider {\\n\\t\\tpadding-left: 16px;\\n\\t\\tmargin-top: -16px;\\n\\t\\tmargin-bottom: -16px;\\n\\t\\theight: 74px;\\n\\t\\tborder-right: 1px solid rgb(231, 232, 234);\\n\\t\\tborder-top-color: rgb(231, 232, 234);\\n\\t\\tborder-bottom-color: rgb(231, 232, 234);\\n\\t\\tborder-left-color: rgb(231, 232, 234);\\n\\t}\\n\\n\\t.arrow:hover {\\n\\t\\tbackground-color: rgb(250, 250, 250);\\n\\t\\tborder-color: rgb(231, 232, 234);\\n\\t}\\n\\n\\t.select-holder {\\n\\t\\tdisplay: inline-flex;\\n\\t\\theight: 100%;\\n\\t\\tmargin: 0 auto;\\n\\t\\tmax-width: 740px;\\n\\t\\tfont-size: 34px;\\n\\t\\tpadding-left: 20px;\\n\\t\\tborder-left: 2px solid #eee;\\n\\t\\tmargin-left: 20px;\\n\\t\\tz-index: 999999;\\n\\t}\\n\\n\\t.gray {\\n\\t\\tcolor: #ccc;\\n\\t}\\n\\n\\t.gray.flow {\\n\\t\\tcolor: #5213ff;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAkQC,0CAAe,CACd,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,IAAI,CACf,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC3B,WAAW,CAAE,IACd,CAEA,4BAAc,CAAC,gBAAG,CACjB,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,UAAU,CAAE,WAAW,CACvB,MAAM,CAAE,CACT,CAIA,oCAAS,CACR,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC5B,OAAO,CAAE,IAAI,CACb,iBAAiB,CAAE,MAAM,CACzB,WAAW,CAAE,MAAM,CACnB,gBAAgB,CAAE,OAAO,CACzB,eAAe,CAAE,aAAa,CAC9B,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC3C,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,kBAAkB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACtC,iBAAiB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACrC,CAEA,sBAAQ,CAAC,mBAAM,CACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,iBAAiB,CAAE,MAAM,CACzB,WAAW,CAAE,MAAM,CACnB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,aAAa,CAAC,CAAC,UAAU,CACtC,YAAY,CAAE,IAAI,CAClB,MAAM,CAAE,OACT,CAmCA,yCAAc,CACb,YAAY,CAAE,IAAI,CAClB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,KAAK,CACpB,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,mBAAmB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACvC,iBAAiB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACrC,CAOA,0CAAe,CACd,OAAO,CAAE,WAAW,CACpB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,IAAI,CACf,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC3B,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,MACV,CAEA,iCAAM,CACL,KAAK,CAAE,IACR,CAEA,KAAK,iCAAM,CACV,KAAK,CAAE,OACR"}`
};
let searchInput$1 = "";
const Nav$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  let $flow, $$unsubscribe_flow;
  let $editMode, $$unsubscribe_editMode;
  let $user, $$unsubscribe_user;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  $$unsubscribe_flow = subscribe(flow, (value) => $flow = value);
  $$unsubscribe_editMode = subscribe(editMode, (value) => $editMode = value);
  $$unsubscribe_user = subscribe(user, (value) => $user = value);
  let { listMode = false } = $$props;
  let { surah } = $$props;
  let { fetchSurah } = $$props;
  function visitSurah(s) {
    let ladder = ["quranflow", s];
    if ($page.params.language) ladder.push($page.params.language);
    goto();
    fetchSurah(s);
    selectedSurah.set(s);
  }
  async function deliver(payload) {
    switch (payload.action) {
      case "verse":
        const verse = payload.query;
        const s = verse.split(":")[0];
        surah = s;
        await visitSurah(verse);
        return;
      case 40:
        return;
      default:
        return;
    }
  }
  if ($$props.listMode === void 0 && $$bindings.listMode && listMode !== void 0) $$bindings.listMode(listMode);
  if ($$props.surah === void 0 && $$bindings.surah && surah !== void 0) $$bindings.surah(surah);
  if ($$props.fetchSurah === void 0 && $$bindings.fetchSurah && fetchSurah !== void 0) $$bindings.fetchSurah(fetchSurah);
  $$result.css.add(css$b);
  $$unsubscribe_page();
  $$unsubscribe_flow();
  $$unsubscribe_editMode();
  $$unsubscribe_user();
  return `<div class="top-nav svelte-3q48pn"><div class="head svelte-3q48pn">${$flow ? `<div class="${[
    "fa fa-edit btn",
    (!$editMode ? "btn-outline-warning" : "") + " " + ($editMode ? "btn-warning" : "")
  ].join(" ").trim()}" style=""></div>` : ``} <span>Qur&#39;an<span class="${["gray svelte-3q48pn", $flow ? "flow" : ""].join(" ").trim()}" data-svelte-h="svelte-1f4gu37">Flow</span></span>  <div class="select-holder svelte-3q48pn"><select class="surah-select"><option value="1" data-svelte-h="svelte-2xzsep">1. الفاتحة</option><option value="2" data-svelte-h="svelte-1mnizvh">2. البقرة</option><option value="3" data-svelte-h="svelte-4bfb94">3. آل عمران</option><option value="4" data-svelte-h="svelte-1d4pte8">4. النساء</option><option value="5" data-svelte-h="svelte-128elr7">5. المائدة</option><option value="6" data-svelte-h="svelte-2x10ur">6. الأنعام</option><option value="7" data-svelte-h="svelte-14txkv2">7. الأعراف</option><option value="8" data-svelte-h="svelte-63sqj8">8. الأنفال</option><option value="9" data-svelte-h="svelte-1lho3ig">9. التوبة</option><option value="10" data-svelte-h="svelte-1e6zdsf">10. يونس</option><option value="11" data-svelte-h="svelte-vkxttm">11. هود</option><option value="12" data-svelte-h="svelte-a7e8a">12. يوسف</option><option value="13" data-svelte-h="svelte-m8fqhv">13. الرّعد</option><option value="14" data-svelte-h="svelte-lui0f9">14. إبراهيم</option><option value="15" data-svelte-h="svelte-wd5gmb">15. الحجر</option><option value="16" data-svelte-h="svelte-mw8nao">16. النحل</option><option value="17" data-svelte-h="svelte-1nnwrt4">17. الإسراء</option><option value="18" data-svelte-h="svelte-18ucj2">18. الكهف</option><option value="19" data-svelte-h="svelte-7zjuqh">19. مريم</option><option value="20" data-svelte-h="svelte-1rec3q">20. طه</option><option value="21" data-svelte-h="svelte-1a304ks">21. الأنبياء</option><option value="22" data-svelte-h="svelte-jrz8hm">22. الحج</option><option value="23" data-svelte-h="svelte-13kut31">23. المؤمنون</option><option value="24" data-svelte-h="svelte-14a92zz">24. النّور</option><option value="25" data-svelte-h="svelte-1rox3aq">25. الفرقان</option><option value="26" data-svelte-h="svelte-1jnfw25">26. الشعراء</option><option value="27" data-svelte-h="svelte-1036xoo">27. النمل</option><option value="28" data-svelte-h="svelte-xn5xfj">28. القصص</option><option value="29" data-svelte-h="svelte-pclh4z">29. العنكبوت</option><option value="30" data-svelte-h="svelte-1psxa6v">30. الروم</option><option value="31" data-svelte-h="svelte-wezize">31. لقمان</option><option value="32" data-svelte-h="svelte-19o61j0">32. السجدة</option><option value="33" data-svelte-h="svelte-4y508m">33. الأحزاب</option><option value="34" data-svelte-h="svelte-1e23220">34. سبإ</option><option value="35" data-svelte-h="svelte-vmhh9s">35. فاطر</option><option value="36" data-svelte-h="svelte-1v7aap9">36. يس</option><option value="37" data-svelte-h="svelte-1wr94gj">37. الصّافّات</option><option value="38" data-svelte-h="svelte-1o7afjp">38. ص</option><option value="39" data-svelte-h="svelte-1jskejv">39. الزمر</option><option value="40" data-svelte-h="svelte-1g8xepj">40. غافر</option><option value="41" data-svelte-h="svelte-1dmgb3h">41. فصّلت</option><option value="42" data-svelte-h="svelte-1qjnhyn">42. الشورى</option><option value="43" data-svelte-h="svelte-55rkxv">43. الزخرف</option><option value="44" data-svelte-h="svelte-f5sphp">44. الدخان</option><option value="45" data-svelte-h="svelte-qw0hhc">45. الجاثية</option><option value="46" data-svelte-h="svelte-2m3rh">46. الأحقاف</option><option value="47" data-svelte-h="svelte-l2kpg2">47. محمد</option><option value="48" data-svelte-h="svelte-1np4vtx">48. الفتح</option><option value="49" data-svelte-h="svelte-iv77m2">49. الحجرات</option><option value="50" data-svelte-h="svelte-1e7bmbg">50. ق</option><option value="51" data-svelte-h="svelte-y2hc8c">51. الذاريات</option><option value="52" data-svelte-h="svelte-1gpdiih">52. الطور</option><option value="53" data-svelte-h="svelte-1jovfle">53. النجم</option><option value="54" data-svelte-h="svelte-1dc48y7">54. القمر</option><option value="55" data-svelte-h="svelte-1kjgvbu">55. الرحمن</option><option value="56" data-svelte-h="svelte-znu3qk">56. الواقعة</option><option value="57" data-svelte-h="svelte-ek310s">57. الحديد</option><option value="58" data-svelte-h="svelte-c9un1d">58. المجادلة</option><option value="59" data-svelte-h="svelte-1ibf35n">59. الحشر</option><option value="60" data-svelte-h="svelte-hp8bpr">60. الممتحنة</option><option value="61" data-svelte-h="svelte-y2cii7">61. الصف</option><option value="62" data-svelte-h="svelte-q7rtva">62. الجمعة</option><option value="63" data-svelte-h="svelte-ea9ud6">63. المنافقون</option><option value="64" data-svelte-h="svelte-1n7sq18">64. التغابن</option><option value="65" data-svelte-h="svelte-1l0c07b">65. الطلاق</option><option value="66" data-svelte-h="svelte-4i9i5e">66. التحريم</option><option value="67" data-svelte-h="svelte-1dwiuzx">67. الملك</option><option value="68" data-svelte-h="svelte-j4cfo6">68. القلم</option><option value="69" data-svelte-h="svelte-1isg9la">69. الحاقة</option><option value="70" data-svelte-h="svelte-46555h">70. المعارج</option><option value="71" data-svelte-h="svelte-8pudvr">71. نوح</option><option value="72" data-svelte-h="svelte-ysf7z7">72. الجن</option><option value="73" data-svelte-h="svelte-mw65lz">73. المزمل</option><option value="74" data-svelte-h="svelte-1g37iy1">74. المدثر</option><option value="75" data-svelte-h="svelte-3o6x5g">75. القيامة</option><option value="76" data-svelte-h="svelte-1bg1bjm">76. الإنسان</option><option value="77" data-svelte-h="svelte-20oe31">77. المرسلات</option><option value="78" data-svelte-h="svelte-18pwaao">78. النبأ</option><option value="79" data-svelte-h="svelte-1k8wwj4">79. النازعات</option><option value="80" data-svelte-h="svelte-8djvnc">80. عبس</option><option value="81" data-svelte-h="svelte-19r97mz">81. التكوير</option><option value="82" data-svelte-h="svelte-7d8hli">82. الانفطار</option><option value="83" data-svelte-h="svelte-18ftnhv">83. المطففين</option><option value="84" data-svelte-h="svelte-1r816bf">84. الانشقاق</option><option value="85" data-svelte-h="svelte-156ed4k">85. البروج</option><option value="86" data-svelte-h="svelte-93u5oa">86. الطارق</option><option value="87" data-svelte-h="svelte-w6i2r8">87. الأعلى</option><option value="88" data-svelte-h="svelte-r18u33">88. الغاشية</option><option value="89" data-svelte-h="svelte-3iamgn">89. الفجر</option><option value="90" data-svelte-h="svelte-1vpzlsa">90. البلد</option><option value="91" data-svelte-h="svelte-jnruk7">91. الشمس</option><option value="92" data-svelte-h="svelte-1nqu6pp">92. الليل</option><option value="93" data-svelte-h="svelte-euk833">93. الضحى</option><option value="94" data-svelte-h="svelte-5dv1p1">94. الإنشراح</option><option value="95" data-svelte-h="svelte-iev6r9">95. التين</option><option value="96" data-svelte-h="svelte-2hnba2">96. العلق</option><option value="97" data-svelte-h="svelte-1f3o6bt">97. القدر</option><option value="98" data-svelte-h="svelte-1vefvq0">98. البينة</option><option value="99" data-svelte-h="svelte-178hdd8">99. الزلزلة</option><option value="100" data-svelte-h="svelte-1usdyxz">100. العاديات</option><option value="101" data-svelte-h="svelte-1q6bf7z">101. القارعة</option><option value="102" data-svelte-h="svelte-1oq60u1">102. التكاثر</option><option value="103" data-svelte-h="svelte-19p9ray">103. العصر</option><option value="104" data-svelte-h="svelte-1cfw27g">104. الهمزة</option><option value="105" data-svelte-h="svelte-1g8w79m">105. الفيل</option><option value="106" data-svelte-h="svelte-1qlnsob">106. قريش</option><option value="107" data-svelte-h="svelte-1upczvq">107. الماعون</option><option value="108" data-svelte-h="svelte-k2g6gy">108. الكوثر</option><option value="109" data-svelte-h="svelte-1byxgwj">109. الكافرون</option><option value="110" data-svelte-h="svelte-1bmysqf">110. النصر</option><option value="111" data-svelte-h="svelte-njt644">111. المسد</option><option value="112" data-svelte-h="svelte-14ug29y">112. الإخلاص</option><option value="113" data-svelte-h="svelte-9gyowk">113. الفلق</option><option value="114" data-svelte-h="svelte-j02rq3">114. الناس</option></select> ${$user && $user.admin ? `<div class="${[
    "btn",
    ($editMode ? "btn-info" : "") + " " + (!$editMode ? "btn-outline-info" : "")
  ].join(" ").trim()}" data-svelte-h="svelte-1185u2b"><i class="fa fa-pen"></i></div> <div class="${[
    "btn",
    (listMode ? "btn-warning" : "") + " " + (!listMode ? "btn-outline-warning" : "")
  ].join(" ").trim()}" data-svelte-h="svelte-wo77cy"><i class="fa fa-list"></i></div>` : ``} <hr class="svelte-3q48pn"> <div class="search"> ${validate_component(Search, "Search").$$render($$result, { deliver, searchInput: searchInput$1, padding: 10 }, {}, {})}</div></div> </div> <div class="hori-divider svelte-3q48pn"></div> </div>`;
});
const Gif = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { gif } = $$props;
  let { remove } = $$props;
  let { update } = $$props;
  if ($$props.gif === void 0 && $$bindings.gif && gif !== void 0) $$bindings.gif(gif);
  if ($$props.remove === void 0 && $$bindings.remove && remove !== void 0) $$bindings.remove(remove);
  if ($$props.update === void 0 && $$bindings.update && update !== void 0) $$bindings.update(update);
  return `<li class="gif"><div class="row"><div class="col-lg-4"><img${add_attribute("src", gif, 0)}></div> <div class="col-lg-8"><input class="form-control"${add_attribute("value", gif, 0)}> <div class="btn btn-outline-danger" data-svelte-h="svelte-l56d85"><span class="fa fa-trash"></span></div></div></div> </li>`;
});
const css$a = {
  code: ".ref.svelte-b4zwi7.svelte-b4zwi7{padding:10px;background-color:rgb(170, 238, 215);display:block;width:max-content;margin-bottom:10px;border-radius:10px}.verses.selected.svelte-b4zwi7.svelte-b4zwi7{background-color:#b5ffea;display:block;border:6px dashed #93e0ca;padding:13px}.panel.svelte-b4zwi7.svelte-b4zwi7{background-color:#ccc;padding:1em;border-radius:0.3em;margin-bottom:10px}.panel.svelte-b4zwi7 .ref.svelte-b4zwi7{background-color:rgb(240, 255, 218)}.panel.unsaved.svelte-b4zwi7.svelte-b4zwi7{background-color:rgb(249, 55, 55)}.springs.svelte-b4zwi7 .spring.svelte-b4zwi7{display:inline-block;padding:10px;border:1px solid;margin:3px;border-radius:6px;background:#c5f0ff}.gifs.svelte-b4zwi7.svelte-b4zwi7{background:#d08300;padding:10px}.urdu.svelte-b4zwi7.svelte-b4zwi7{direction:rtl;display:block;font-size:18px;font-family:'Noto Nastaliq Urdu', serif;font-optical-sizing:auto;font-weight:lighter;font-style:normal;line-height:40px;border-bottom:1px solid #eee;padding:10px 0}",
  map: `{"version":3,"file":"Segment.svelte","sources":["Segment.svelte"],"sourcesContent":["<script>\\n\\timport { page } from '$app/stores';\\n\\timport API from '$lib/api/api';\\n\\timport { selectedSegment, editMode } from '$lib/components/QuranFlow/store';\\n\\timport Gif from './Gif.svelte';\\n\\n\\texport let segment;\\n\\texport let select;\\n\\n\\timport { inview } from 'svelte-inview';\\n\\n\\tlet isInView;\\n\\tconst options = {};\\n\\n\\tlet unsaved = false;\\n\\tlet springs = null;\\n\\n\\t$: {\\n\\t\\tsegment;\\n\\t\\tunsaved = false;\\n\\t}\\n\\n\\t$: {\\n\\t\\tif (isInView && !springs) {\\n\\t\\t\\tgetSprings();\\n\\t\\t}\\n\\t}\\n\\n\\tlet generating = false;\\n\\n\\tasync function cleanUp() {\\n\\t\\tconst body = $page.params.language ? segment.translations[lang] : segment.summary;\\n\\t\\tif (!generating) {\\n\\t\\t\\tgenerating = true;\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tconst res = await API.post('/smart_wizard/generate.json', {\\n\\t\\t\\t\\t\\tmessage: \`fix this, and make it a bit smaller (regarding \${segment.verses}): \${body}\`\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tconsole.log({ res });\\n\\t\\t\\t\\tconst response = res.response;\\n\\t\\t\\t\\tif ($page.params.language) {\\n\\t\\t\\t\\t\\tsegment.translations[lang] = response;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tsegment.summary = response;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tgenerating = false;\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tgenerating = false;\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t}\\n\\n\\tasync function getSprings() {\\n\\t\\tsprings = await API.get(\`/segments/\${segment.id}/springs.json\`);\\n\\t\\tconsole.log({ springs });\\n\\t}\\n\\n\\tfunction changed() {\\n\\t\\tunsaved = true;\\n\\t}\\n\\n\\tasync function saveSegment() {\\n\\t\\tawait API.put(\`/segments/\${segment.id}.json\`, segment);\\n\\t\\tgetSprings();\\n\\t\\tunsaved = false;\\n\\t}\\n\\t$: lang = $page.params.language;\\n\\t$: langd = lang ? segment.translations[lang] : segment.summary;\\n\\n\\t$: selected = $selectedSegment && $selectedSegment.id === segment.id;\\n<\/script>\\n\\n<div class=\\"segment\\">\\n\\t{#if $editMode}\\n\\t\\t<div\\n\\t\\t\\tuse:inview={options}\\n\\t\\t\\ton:inview_change={(event) => {\\n\\t\\t\\t\\tconst { inView, entry, scrollDirection, observer, node } = event.detail;\\n\\t\\t\\t\\tisInView = inView;\\n\\t\\t\\t}}\\n\\t\\t>\\n\\t\\t\\t<div class=\\"panel\\" class:unsaved>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\ttype=\\"text\\"\\n\\t\\t\\t\\t\\tclass=\\"ref form-control\\"\\n\\t\\t\\t\\t\\tbind:value={segment.verses}\\n\\t\\t\\t\\t\\ton:keyup={changed}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\tclass=\\"btn btn-outline-info\\"\\n\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\tselectedSegment.set(segment);\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<i class=\\"fa fa-book\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\"btn btn-outline-warning\\" on:click={() => cleanUp()}>\\n\\t\\t\\t\\t\\t<i class=\\"fa fa-wrench\\" />\\n\\t\\t\\t\\t\\t<i class=\\"fa fa-bolt\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{#if lang}\\n\\t\\t\\t\\t\\t<textarea\\n\\t\\t\\t\\t\\t\\tname=\\"\\"\\n\\t\\t\\t\\t\\t\\tclass=\\"form-control\\"\\n\\t\\t\\t\\t\\t\\tid=\\"\\"\\n\\t\\t\\t\\t\\t\\tcols=\\"30\\"\\n\\t\\t\\t\\t\\t\\trows=\\"5\\"\\n\\t\\t\\t\\t\\t\\tdisabled={generating}\\n\\t\\t\\t\\t\\t\\tbind:value={segment.translations[lang]}\\n\\t\\t\\t\\t\\t\\ton:keyup={changed}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t<textarea\\n\\t\\t\\t\\t\\t\\tname=\\"\\"\\n\\t\\t\\t\\t\\t\\tclass=\\"form-control\\"\\n\\t\\t\\t\\t\\t\\tid=\\"\\"\\n\\t\\t\\t\\t\\t\\tcols=\\"30\\"\\n\\t\\t\\t\\t\\t\\trows=\\"5\\"\\n\\t\\t\\t\\t\\t\\tbind:value={segment.summary}\\n\\t\\t\\t\\t\\t\\ton:keyup={changed}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t<div class=\\"gifs\\">\\n\\t\\t\\t\\t\\t<ul class=\\"clean-list\\">\\n\\t\\t\\t\\t\\t\\t{#each segment.gifs as gif, index}\\n\\t\\t\\t\\t\\t\\t\\t<Gif\\n\\t\\t\\t\\t\\t\\t\\t\\t{gif}\\n\\t\\t\\t\\t\\t\\t\\t\\tupdate={(payload) => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsegment.gifs[index] = payload;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tunsaved = true;\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t\\tremove={() => (segment.gifs = segment.gifs.filter((g) => g !== gif))}\\n\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t<div class=\\"btn btn-info\\" on:click={() => (segment.gifs = [...segment.gifs, 'gif'])}>\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\"fa fa-plus\\" />\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\"btn btn-warning\\" on:click={() => saveSegment()}>\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\"fa fa-save\\" />\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{#if springs}\\n\\t\\t\\t\\t\\t<div class=\\"springs\\">\\n\\t\\t\\t\\t\\t\\t<ul class=\\"clean-list\\">\\n\\t\\t\\t\\t\\t\\t\\t{#each springs || [] as item}\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\"spring\\">{item.spring.title}</li>\\n\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"btn btn-outline-info\\"><i class=\\"fa fa-plus\\" /></div>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t{:else}\\n\\t\\t<span class={\`verses \${lang}\`} on:click={select} class:selected>\\n\\t\\t\\t{#if selected}\\n\\t\\t\\t\\t<div class=\\"ref\\">{segment.verses}</div>\\n\\t\\t\\t{/if}\\n\\t\\t\\t{#if langd.indexOf('-') === 0}\\n\\t\\t\\t\\t{@html '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'}{langd.substring(1)}\\n\\t\\t\\t{:else}\\n\\t\\t\\t\\t{langd}\\n\\t\\t\\t{/if}\\n\\t\\t</span>\\n\\t{/if}\\n</div>\\n\\n<style>\\n\\t.ref {\\n\\t\\tpadding: 10px;\\n\\t\\tbackground-color: rgb(170, 238, 215);\\n\\t\\tdisplay: block;\\n\\t\\twidth: max-content;\\n\\t\\tmargin-bottom: 10px;\\n\\t\\tborder-radius: 10px;\\n\\t}\\n\\t.verses.selected {\\n\\t\\tbackground-color: #b5ffea;\\n\\t\\tdisplay: block;\\n\\t\\tborder: 6px dashed #93e0ca;\\n\\t\\tpadding: 13px;\\n\\t}\\n\\n\\t.panel {\\n\\t\\tbackground-color: #ccc;\\n\\t\\tpadding: 1em;\\n\\t\\tborder-radius: 0.3em;\\n\\t\\tmargin-bottom: 10px;\\n\\t}\\n\\n\\t.panel .ref {\\n\\t\\tbackground-color: rgb(240, 255, 218);\\n\\t}\\n\\n\\t.panel.unsaved {\\n\\t\\tbackground-color: rgb(249, 55, 55);\\n\\t}\\n\\n\\t.springs .spring {\\n\\t\\tdisplay: inline-block;\\n\\t\\tpadding: 10px;\\n\\t\\tborder: 1px solid;\\n\\t\\tmargin: 3px;\\n\\t\\tborder-radius: 6px;\\n\\t\\tbackground: #c5f0ff;\\n\\t}\\n\\n\\t.gifs {\\n\\t\\tbackground: #d08300;\\n\\t\\tpadding: 10px;\\n\\t}\\n\\n\\t.gif img {\\n\\t\\tmax-width: 100%;\\n\\t}\\n\\n\\t.urdu {\\n\\t\\tdirection: rtl;\\n\\t\\tdisplay: block;\\n\\t\\tfont-size: 18px;\\n\\t\\tfont-family: 'Noto Nastaliq Urdu', serif;\\n\\t\\tfont-optical-sizing: auto;\\n\\t\\tfont-weight: lighter;\\n\\t\\tfont-style: normal;\\n\\t\\tline-height: 40px;\\n\\t\\tborder-bottom: 1px solid #eee;\\n\\t\\tpadding: 10px 0;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AA2KC,gCAAK,CACJ,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,WAAW,CAClB,aAAa,CAAE,IAAI,CACnB,aAAa,CAAE,IAChB,CACA,OAAO,qCAAU,CAChB,gBAAgB,CAAE,OAAO,CACzB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAC1B,OAAO,CAAE,IACV,CAEA,kCAAO,CACN,gBAAgB,CAAE,IAAI,CACtB,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,KAAK,CACpB,aAAa,CAAE,IAChB,CAEA,oBAAM,CAAC,kBAAK,CACX,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACpC,CAEA,MAAM,oCAAS,CACd,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAClC,CAEA,sBAAQ,CAAC,qBAAQ,CAChB,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CACjB,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,OACb,CAEA,iCAAM,CACL,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IACV,CAMA,iCAAM,CACL,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,oBAAoB,CAAC,CAAC,KAAK,CACxC,mBAAmB,CAAE,IAAI,CACzB,WAAW,CAAE,OAAO,CACpB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,OAAO,CAAE,IAAI,CAAC,CACf"}`
};
const Segment$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let lang;
  let langd;
  let selected;
  let $selectedSegment, $$unsubscribe_selectedSegment;
  let $page, $$unsubscribe_page;
  let $editMode, $$unsubscribe_editMode;
  $$unsubscribe_selectedSegment = subscribe(selectedSegment, (value) => $selectedSegment = value);
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  $$unsubscribe_editMode = subscribe(editMode, (value) => $editMode = value);
  let { segment } = $$props;
  let { select } = $$props;
  let unsaved = false;
  if ($$props.segment === void 0 && $$bindings.segment && segment !== void 0) $$bindings.segment(segment);
  if ($$props.select === void 0 && $$bindings.select && select !== void 0) $$bindings.select(select);
  $$result.css.add(css$a);
  {
    {
      unsaved = false;
    }
  }
  lang = $page.params.language;
  langd = lang ? segment.translations[lang] : segment.summary;
  selected = $selectedSegment && $selectedSegment.id === segment.id;
  $$unsubscribe_selectedSegment();
  $$unsubscribe_page();
  $$unsubscribe_editMode();
  return `<div class="segment">${$editMode ? `<div><div class="${["panel svelte-b4zwi7", unsaved ? "unsaved" : ""].join(" ").trim()}"><input type="text" class="ref form-control svelte-b4zwi7"${add_attribute("value", segment.verses, 0)}> <div class="btn btn-outline-info" data-svelte-h="svelte-7rqr1"><i class="fa fa-book"></i></div> <div class="btn btn-outline-warning" data-svelte-h="svelte-34kg3e"><i class="fa fa-wrench"></i> <i class="fa fa-bolt"></i></div> ${lang ? `<textarea name="" class="form-control" id="" cols="30" rows="5" ${""}>${escape(segment.translations[lang] || "")}</textarea>` : `<textarea name="" class="form-control" id="" cols="30" rows="5">${escape(segment.summary || "")}</textarea>`} <div class="gifs svelte-b4zwi7"><ul class="clean-list">${each(segment.gifs, (gif, index) => {
    return `${validate_component(Gif, "Gif").$$render(
      $$result,
      {
        gif,
        update: (payload) => {
          segment.gifs[index] = payload;
          unsaved = true;
        },
        remove: () => segment.gifs = segment.gifs.filter((g) => g !== gif)
      },
      {},
      {}
    )}`;
  })} <div class="btn btn-info" data-svelte-h="svelte-kda315"><i class="fa fa-plus"></i></div> <div class="btn btn-warning" data-svelte-h="svelte-1rhut1d"><i class="fa fa-save"></i></div></ul></div> ${``}</div></div>` : `<span class="${[
    escape(null_to_empty(`verses ${lang}`), true) + " svelte-b4zwi7",
    selected ? "selected" : ""
  ].join(" ").trim()}">${selected ? `<div class="ref svelte-b4zwi7">${escape(segment.verses)}</div>` : ``} ${langd.indexOf("-") === 0 ? `<!-- HTML_TAG_START -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!-- HTML_TAG_END -->${escape(langd.substring(1))}` : `${escape(langd)}`}</span>`} </div>`;
});
const css$9 = {
  code: ".wrapper.svelte-1qx1z0e{padding:0.5em;height:87vh}",
  map: `{"version":3,"file":"Wrapper.svelte","sources":["Wrapper.svelte"],"sourcesContent":["<script>\\n\\timport { grid, rightNavTab, selectedNote } from '$lib/components/QuranFlow/store';\\n\\n\\texport let bg;\\n\\texport let title;\\n\\n\\tfunction goBack() {\\n\\t\\tif ($selectedNote) {\\n\\t\\t\\tselectedNote.set(null);\\n\\t\\t} else {\\n\\t\\t\\trightNavTab.set(0);\\n\\t\\t\\tgrid.set('tri-view');\\n\\t\\t}\\n\\t}\\n<\/script>\\n\\n<div class=\\"wrapper\\" style=\\"background-color:{bg}\\">\\n\\t<div style=\\"display:flex;\\">\\n\\t\\t<div style=\\"flex: 1 1 10%;\\" class=\\"btn\\" on:click={goBack}>\\n\\t\\t\\t<i class=\\"fa fa-arrow-circle-left\\" />\\n\\t\\t</div>\\n\\t\\t<span style=\\"flex: 1 1 80%; text-align: center;\\"> {title} </span>\\n\\t\\t<slot name=\\"settings\\" />\\n\\t</div>\\n\\n\\t<slot name=\\"main\\" />\\n</div>\\n\\n<style>\\n\\t.wrapper {\\n\\t\\tpadding: 0.5em;\\n\\t\\theight: 87vh;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AA6BC,uBAAS,CACR,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IACT"}`
};
const Wrapper = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_selectedNote;
  $$unsubscribe_selectedNote = subscribe(selectedNote, (value) => value);
  let { bg } = $$props;
  let { title } = $$props;
  if ($$props.bg === void 0 && $$bindings.bg && bg !== void 0) $$bindings.bg(bg);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0) $$bindings.title(title);
  $$result.css.add(css$9);
  $$unsubscribe_selectedNote();
  return `<div class="wrapper svelte-1qx1z0e" style="${"background-color:" + escape(bg, true)}"><div style="display:flex;"><div style="flex: 1 1 10%;" class="btn" data-svelte-h="svelte-8gj6o7"><i class="fa fa-arrow-circle-left"></i></div> <span style="flex: 1 1 80%; text-align: center;">${escape(title)}</span> ${slots.settings ? slots.settings({}) : ``}</div> ${slots.main ? slots.main({}) : ``} </div>`;
});
const css$8 = {
  code: ".config.svelte-135yh6l{background-color:#eee !important}.playlist.svelte-135yh6l{padding:8px;border:1px solid #eee;background:#fff;margin:4px;border-radius:8px}.active.svelte-135yh6l{background:rgb(0, 35, 190);color:#fff}",
  map: `{"version":3,"file":"Playlist.svelte","sources":["Playlist.svelte"],"sourcesContent":["<script>\\n\\timport API from '$lib/api/api';\\n\\n\\timport {\\n\\t\\tplaylists,\\n\\t\\tselectedSegmentContentPlaylists,\\n\\t\\tselectedSegment\\n\\t} from '$lib/components/QuranFlow/store';\\n\\timport Wrapper from './Wrapper.svelte';\\n\\n\\texport let bg = 'fff';\\n\\n\\tlet showPlaylistSettings = false;\\n\\tlet newContentPlaylistTitle = '';\\n\\tlet touching = false;\\n\\n\\tasync function createPlaylist() {\\n\\t\\tconst res = await API.post('/content_playlists.json', {\\n\\t\\t\\ttitle: newContentPlaylistTitle\\n\\t\\t});\\n\\n\\t\\tplaylists.set([...$playlists, res]);\\n\\t}\\n\\t$: console.log('playlists', $playlists);\\n\\t$: $selectedSegment && getPlaylists();\\n\\n\\tasync function getPlaylists() {\\n\\t\\tconst res = await API.get(\`/segments/\${$selectedSegment.id}/content_playlist_segments.json\`);\\n\\t\\tselectedSegmentContentPlaylists.set(res);\\n\\t\\tconsole.log('segment pl', $selectedSegmentContentPlaylists);\\n\\t}\\n\\n\\tasync function togglePlaylist(playlist) {\\n\\t\\tif (touching) return;\\n\\t\\ttouching = true;\\n\\t\\tif (\\n\\t\\t\\t$selectedSegmentContentPlaylists.filter((p) => p.content_playlist_id === playlist.id).length\\n\\t\\t) {\\n\\t\\t\\tconst id = $selectedSegmentContentPlaylists.find(\\n\\t\\t\\t\\t(p) => p.content_playlist_id === playlist.id\\n\\t\\t\\t).id;\\n\\t\\t\\tawait API.delete(\`/content_playlist_segments/\${id}.json\`);\\n\\t\\t\\tselectedSegmentContentPlaylists.set(\\n\\t\\t\\t\\t$selectedSegmentContentPlaylists.filter((pl) => pl.content_playlist_id !== playlist.id)\\n\\t\\t\\t);\\n\\t\\t} else {\\n\\t\\t\\tconst res = await API.post('/content_playlist_segments.json', {\\n\\t\\t\\t\\tcontent_playlist_id: playlist.id,\\n\\t\\t\\t\\tsegment_id: $selectedSegment.id\\n\\t\\t\\t});\\n\\t\\t\\tconsole.log({ res });\\n\\t\\t\\tselectedSegmentContentPlaylists.set([...$selectedSegmentContentPlaylists, res]);\\n\\t\\t}\\n\\t\\ttouching = false;\\n\\t}\\n\\n\\tasync function removePlaylist(playlist) {\\n\\t\\tawait API.delete(\`/content_playlists/\${playlist.id}.json\`);\\n\\t\\tplaylists.set($playlists.filter((pl) => pl.id !== playlist.id));\\n\\t}\\n<\/script>\\n\\n<Wrapper {bg} title={'Playlist'}>\\n\\t<div slot=\\"settings\\">\\n\\t\\t<div class=\\"btn btn-outline-info\\">\\n\\t\\t\\t<i class=\\"fa fa-wrench\\" />\\n\\t\\t</div>\\n\\t</div>\\n\\t<div slot=\\"main\\">\\n\\t\\t{#if showPlaylistSettings}\\n\\t\\t\\t<input\\n\\t\\t\\t\\ttype=\\"text\\"\\n\\t\\t\\t\\tclass=\\"form-control\\"\\n\\t\\t\\t\\tbind:value={newContentPlaylistTitle}\\n\\t\\t\\t\\tplaceholder=\\"New Playlist Title\\"\\n\\t\\t\\t/>\\n\\t\\t\\t{#if newContentPlaylistTitle.length > 2}\\n\\t\\t\\t\\t<div class=\\"btn btn-outline-info\\" on:click={() => createPlaylist()}>\\n\\t\\t\\t\\t\\t<i class=\\"fa fa-plus\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t{/if}\\n\\t\\t<ul class=\\"clean-list\\">\\n\\t\\t\\t{#each $playlists as playlist}\\n\\t\\t\\t\\t<!-- svelte-ignore a11y-click-events-have-key-events -->\\n\\t\\t\\t\\t<li\\n\\t\\t\\t\\t\\tclass=\\"playlist\\"\\n\\t\\t\\t\\t\\tclass:active={$selectedSegmentContentPlaylists.find(\\n\\t\\t\\t\\t\\t\\t(p) => p.content_playlist_id === playlist.id\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\tclass:config={showPlaylistSettings}\\n\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\tif (showPlaylistSettings) return;\\n\\t\\t\\t\\t\\t\\ttogglePlaylist(playlist);\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t{#if showPlaylistSettings}\\n\\t\\t\\t\\t\\t\\t<div style=\\"display: flex;\\">\\n\\t\\t\\t\\t\\t\\t\\t<div style=\\"flex: 1 1 90%;\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{playlist.title}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div style=\\"flex: 1 1 10%;\\" on:click={() => removePlaylist(playlist)}>\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\"fa fa-times\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t{playlist.title}\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t{/each}\\n\\t\\t</ul>\\n\\t</div>\\n</Wrapper>\\n\\n<style>\\n\\t.config {\\n\\t\\tbackground-color: #eee !important;\\n\\t}\\n\\t.playlist {\\n\\t\\tpadding: 8px;\\n\\t\\tborder: 1px solid #eee;\\n\\t\\tbackground: #fff;\\n\\t\\tmargin: 4px;\\n\\t\\tborder-radius: 8px;\\n\\t}\\n\\n\\t.active {\\n\\t\\tbackground: rgb(0, 35, 190);\\n\\t\\tcolor: #fff;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAmHC,sBAAQ,CACP,gBAAgB,CAAE,IAAI,CAAC,UACxB,CACA,wBAAU,CACT,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,GAChB,CAEA,sBAAQ,CACP,UAAU,CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAC3B,KAAK,CAAE,IACR"}`
};
const Playlist = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $playlists, $$unsubscribe_playlists;
  let $selectedSegmentContentPlaylists, $$unsubscribe_selectedSegmentContentPlaylists;
  let $selectedSegment, $$unsubscribe_selectedSegment;
  $$unsubscribe_playlists = subscribe(playlists, (value) => $playlists = value);
  $$unsubscribe_selectedSegmentContentPlaylists = subscribe(selectedSegmentContentPlaylists, (value) => $selectedSegmentContentPlaylists = value);
  $$unsubscribe_selectedSegment = subscribe(selectedSegment, (value) => $selectedSegment = value);
  let { bg = "fff" } = $$props;
  async function getPlaylists() {
    const res = await API.get(`/segments/${$selectedSegment.id}/content_playlist_segments.json`);
    selectedSegmentContentPlaylists.set(res);
    console.log("segment pl", $selectedSegmentContentPlaylists);
  }
  if ($$props.bg === void 0 && $$bindings.bg && bg !== void 0) $$bindings.bg(bg);
  $$result.css.add(css$8);
  {
    console.log("playlists", $playlists);
  }
  $selectedSegment && getPlaylists();
  $$unsubscribe_playlists();
  $$unsubscribe_selectedSegmentContentPlaylists();
  $$unsubscribe_selectedSegment();
  return `${validate_component(Wrapper, "Wrapper").$$render($$result, { bg, title: "Playlist" }, {}, {
    main: () => {
      return `<div slot="main">${``} <ul class="clean-list">${each($playlists, (playlist) => {
        return ` <li class="${[
          "playlist svelte-135yh6l",
          ($selectedSegmentContentPlaylists.find((p) => p.content_playlist_id === playlist.id) ? "active" : "") + " "
        ].join(" ").trim()}">${`${escape(playlist.title)}`} </li>`;
      })}</ul></div>`;
    },
    settings: () => {
      return `<div slot="settings" data-svelte-h="svelte-1hqphs3"><div class="btn btn-outline-info"><i class="fa fa-wrench"></i></div></div>`;
    }
  })}`;
});
const css$7 = {
  code: "button.active.svelte-4vr9y6{background:#d6edff}button.svelte-4vr9y6{padding:6px;border-radius:10px}.doc.svelte-4vr9y6{padding:10px;background:#fff;border-radius:10px}.doc.svelte-4vr9y6 .ProseMirror:focus{outline:none}.doc.svelte-4vr9y6 h1{font-size:34px}",
  map: `{"version":3,"file":"Writer.svelte","sources":["Writer.svelte"],"sourcesContent":["<script>\\n\\timport { onMount, onDestroy } from 'svelte';\\n\\timport { Editor } from '@tiptap/core';\\n\\timport StarterKit from '@tiptap/starter-kit';\\n\\n\\tlet element;\\n\\tlet editor;\\n\\n\\tonMount(() => {\\n\\t\\teditor = new Editor({\\n\\t\\t\\telement: element,\\n\\t\\t\\textensions: [StarterKit],\\n\\t\\t\\tcontent: '<p>Hello World! 🌍️ </p>',\\n\\t\\t\\tonTransaction: () => {\\n\\t\\t\\t\\t// force re-render so \`editor.isActive\` works as expected\\n\\t\\t\\t\\teditor = editor;\\n\\t\\t\\t\\tconsole.log('changed');\\n\\t\\t\\t}\\n\\t\\t});\\n\\t});\\n\\n\\tonDestroy(() => {\\n\\t\\tif (editor) {\\n\\t\\t\\teditor.destroy();\\n\\t\\t}\\n\\t});\\n<\/script>\\n\\n{#if editor}\\n\\t<button\\n\\t\\ton:click={() => editor.chain().focus().toggleHeading({ level: 1 }).run()}\\n\\t\\tclass:active={editor.isActive('heading', { level: 1 })}\\n\\t>\\n\\t\\tH1\\n\\t</button>\\n\\t<button\\n\\t\\ton:click={() => editor.chain().focus().toggleHeading({ level: 2 }).run()}\\n\\t\\tclass:active={editor.isActive('heading', { level: 2 })}\\n\\t>\\n\\t\\tH2\\n\\t</button>\\n\\t<button\\n\\t\\ton:click={() => editor.chain().focus().setParagraph().run()}\\n\\t\\tclass:active={editor.isActive('paragraph')}\\n\\t>\\n\\t\\tP\\n\\t</button>\\n{/if}\\n\\n<br /><br />\\n<div class=\\"doc\\" bind:this={element} />\\n\\n<style>\\n\\tbutton.active {\\n\\t\\tbackground: #d6edff;\\n\\t}\\n\\tbutton {\\n\\t\\tpadding: 6px;\\n\\t\\tborder-radius: 10px;\\n\\t}\\n\\n\\t.doc {\\n\\t\\tpadding: 10px;\\n\\t\\tbackground: #fff;\\n\\t\\tborder-radius: 10px;\\n\\t}\\n\\t.doc :global(.ProseMirror:focus) {\\n\\t\\toutline: none;\\n\\t}\\n\\n\\t.doc :global(h1) {\\n\\t\\tfont-size: 34px;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAqDC,MAAM,qBAAQ,CACb,UAAU,CAAE,OACb,CACA,oBAAO,CACN,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,IAChB,CAEA,kBAAK,CACJ,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAChB,CACA,kBAAI,CAAS,kBAAoB,CAChC,OAAO,CAAE,IACV,CAEA,kBAAI,CAAS,EAAI,CAChB,SAAS,CAAE,IACZ"}`
};
const Writer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let element;
  onDestroy(() => {
  });
  $$result.css.add(css$7);
  return `${``} <br><br> <div class="doc svelte-4vr9y6"${add_attribute("this", element, 0)}></div>`;
});
const css$6 = {
  code: ".flex.svelte-bb25kn{display:flex}.title.svelte-bb25kn{flex:1 1 95%}.settings.svelte-bb25kn{flex:1 1 5%}.note.svelte-bb25kn{margin:10px 0;padding:20px;border:1px solid #eee}",
  map: `{"version":3,"file":"Note.svelte","sources":["Note.svelte"],"sourcesContent":["<script>\\n\\timport { onMount } from 'svelte';\\n\\timport Writer from './Writer.svelte';\\n\\timport { selectedNote } from '$lib/components/QuranFlow/store';\\n\\timport API from '$lib/api/api';\\n\\timport Spinner from '$lib/components/Spinner/Spinner.svelte';\\n\\n\\texport let note;\\n\\n\\tlet editing = false;\\n\\tfunction selectNote() {\\n\\t\\tselectedNote.set(note);\\n\\t}\\n\\n\\tasync function save() {\\n\\t\\tconst res = await API.put(\`/notes/\${note.id}.json\`, {\\n\\t\\t\\ttitle: note.title\\n\\t\\t});\\n\\t\\tediting = false;\\n\\t}\\n<\/script>\\n\\n<div class=\\"note\\">\\n\\t{#if editing}\\n\\t\\t<input type=\\"text\\" class=\\"form-control\\" placeholder=\\"Enter Title...\\" bind:value={note.title} />\\n\\t\\t<div class=\\"bottom\\">\\n\\t\\t\\t<div\\n\\t\\t\\t\\tclass=\\"btn btn-outline-warning\\"\\n\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\tsave();\\n\\t\\t\\t\\t}}\\n\\t\\t\\t>\\n\\t\\t\\t\\tSave\\n\\t\\t\\t</div>\\n\\t\\t\\t<div\\n\\t\\t\\t\\tclass=\\"btn btn-outline-danger\\"\\n\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\tediting = false;\\n\\t\\t\\t\\t}}\\n\\t\\t\\t>\\n\\t\\t\\t\\tDelete\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t{:else}\\n\\t\\t<div class=\\"flex\\">\\n\\t\\t\\t<div class=\\"title\\" on:click={selectNote}>\\n\\t\\t\\t\\t{note.title}\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"settings\\">\\n\\t\\t\\t\\t<span on:click={() => (editing = true)} class=\\"fa fa-cog\\" />\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t{/if}\\n</div>\\n\\n<style>\\n\\t.flex {\\n\\t\\tdisplay: flex;\\n\\t}\\n\\n\\t.title {\\n\\t\\tflex: 1 1 95%;\\n\\t}\\n\\n\\t.settings {\\n\\t\\tflex: 1 1 5%;\\n\\t}\\n\\n\\t.note {\\n\\t\\tmargin: 10px 0;\\n\\t\\tpadding: 20px;\\n\\t\\tborder: 1px solid #eee;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAwDC,mBAAM,CACL,OAAO,CAAE,IACV,CAEA,oBAAO,CACN,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GACX,CAEA,uBAAU,CACT,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,EACX,CAEA,mBAAM,CACL,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IACnB"}`
};
const Note = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { note } = $$props;
  if ($$props.note === void 0 && $$bindings.note && note !== void 0) $$bindings.note(note);
  $$result.css.add(css$6);
  return `<div class="note svelte-bb25kn">${`<div class="flex svelte-bb25kn"><div class="title svelte-bb25kn">${escape(note.title)}</div> <div class="settings svelte-bb25kn"><span class="fa fa-cog"></span></div></div>`} </div>`;
});
const Notes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_user;
  let $$unsubscribe_selectedSegment;
  let $selectedNote, $$unsubscribe_selectedNote;
  $$unsubscribe_user = subscribe(user, (value) => value);
  $$unsubscribe_selectedSegment = subscribe(selectedSegment, (value) => value);
  $$unsubscribe_selectedNote = subscribe(selectedNote, (value) => $selectedNote = value);
  let { bg = "fff" } = $$props;
  let notes = [];
  if ($$props.bg === void 0 && $$bindings.bg && bg !== void 0) $$bindings.bg(bg);
  $$unsubscribe_user();
  $$unsubscribe_selectedSegment();
  $$unsubscribe_selectedNote();
  return `${validate_component(Wrapper, "Wrapper").$$render($$result, { bg, title: "Notes" }, {}, {
    main: () => {
      return `<div slot="main"><br> <hr> <br> ${$selectedNote ? `${validate_component(Writer, "Writer").$$render($$result, {}, {}, {})}` : `<div class="btn btn-outline-info btn-block" data-svelte-h="svelte-1j13ddb"><i class="fa fa-plus"></i> Add a Note</div> ${each(notes, (note) => {
        return `${validate_component(Note, "Note").$$render($$result, { note }, {}, {})}`;
      })}`} ${``}</div>`;
    },
    settings: () => {
      return `<div slot="settings" data-svelte-h="svelte-1hqphs3"><div class="btn btn-outline-info"><i class="fa fa-wrench"></i></div></div>`;
    }
  })}`;
});
const css$5 = {
  code: ".verses.svelte-7jut2h.svelte-7jut2h{display:block;max-width:600px;margin:0 auto;text-align:right}.wrapper.svelte-7jut2h.svelte-7jut2h{display:flex}.left-col.svelte-7jut2h.svelte-7jut2h{flex:1 1 66%;max-width:66%;padding:3em;height:90vh;overflow-y:scroll}.uno.svelte-7jut2h.svelte-7jut2h{display:block}.uno.svelte-7jut2h .left-col.svelte-7jut2h{max-width:100%}.right-col.svelte-7jut2h.svelte-7jut2h{flex:1 1 33%;max-width:33%;padding:0.5em;background-color:rgb(241, 255, 241)}.tri-view.svelte-7jut2h .left-col.svelte-7jut2h{flex:1 1 40%;max-width:40%}.tri-view.svelte-7jut2h .right-col.svelte-7jut2h{flex:1 1 40%;max-width:40%}.large-right.svelte-7jut2h .left-col.svelte-7jut2h{flex:1 1 20%;max-width:30%}.large-right.svelte-7jut2h .right-col.svelte-7jut2h{flex:1 1 40%;max-width:40%}",
  map: `{"version":3,"file":"NonFlow.svelte","sources":["NonFlow.svelte"],"sourcesContent":["<script>\\n\\timport API from '$lib/api/api';\\n\\timport { onMount } from 'svelte';\\n\\timport Verse from '../Verse/Verse.svelte';\\n\\n\\timport { selectedSurah, grid } from '$lib/components/QuranFlow/store';\\n\\tlet verses;\\n\\n\\tlet trans;\\n\\n\\t$: $selectedSurah && fetchVerses();\\n\\n\\tasync function fetchVerses() {\\n\\t\\tverses = await API.get(\`quranflow/surah/\${$selectedSurah}/verses\`);\\n\\t\\tconsole.log(verses);\\n\\t}\\n\\n\\tonMount(() => {\\n\\t\\tgrid.set('uno');\\n\\t});\\n<\/script>\\n\\n{#if verses}\\n\\t<div class={'wrapper ' + $grid}>\\n\\t\\t<div class=\\"left-col\\">\\n\\t\\t\\t<ul class=\\"verses\\">\\n\\t\\t\\t\\t{#each verses as verse}\\n\\t\\t\\t\\t\\t<Verse {verse} inline={true} expandable={true} />\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t\\t<div class=\\"right-col\\" />\\n\\t</div>\\n{/if}\\n\\n<style>\\n\\t.verses {\\n\\t\\tdisplay: block;\\n\\t\\tmax-width: 600px;\\n\\t\\tmargin: 0 auto;\\n\\t\\ttext-align: right;\\n\\t}\\n\\n\\t.wrapper {\\n\\t\\tdisplay: flex;\\n\\t}\\n\\n\\t.left-col {\\n\\t\\tflex: 1 1 66%;\\n\\t\\tmax-width: 66%;\\n\\t\\tpadding: 3em;\\n\\t\\theight: 90vh;\\n\\t\\toverflow-y: scroll;\\n\\t}\\n\\t/* \\n\\t\\n\\t*/\\n\\t.uno {\\n\\t\\tdisplay: block;\\n\\t}\\n\\t.uno .left-col {\\n\\t\\tmax-width: 100%;\\n\\t}\\n\\n\\t.right-col {\\n\\t\\tflex: 1 1 33%;\\n\\t\\tmax-width: 33%;\\n\\t\\tpadding: 0.5em;\\n\\t\\tbackground-color: rgb(241, 255, 241);\\n\\t}\\n\\n\\t.extra-right-col {\\n\\t\\t/* padding: 0.5em; */\\n\\t}\\n\\n\\t.tri-view .left-col {\\n\\t\\tflex: 1 1 40%;\\n\\t\\tmax-width: 40%;\\n\\t}\\n\\n\\t.tri-view .right-col {\\n\\t\\tflex: 1 1 40%;\\n\\t\\tmax-width: 40%;\\n\\t}\\n\\n\\t.tri-view .extra-right-col {\\n\\t\\tflex: 1 1 20%;\\n\\t\\tmax-width: 20%;\\n\\t}\\n\\n\\t/*  */\\n\\t.large-right .left-col {\\n\\t\\tflex: 1 1 20%;\\n\\t\\tmax-width: 30%;\\n\\t}\\n\\n\\t.large-right .right-col {\\n\\t\\tflex: 1 1 40%;\\n\\t\\tmax-width: 40%;\\n\\t}\\n\\n\\t.large-right .extra-right-col {\\n\\t\\tflex: 1 1 40%;\\n\\t\\tmax-width: 40%;\\n\\t}\\n\\n\\t.extra-right-col .menu li {\\n\\t\\tpadding: 1em;\\n\\t\\tmargin: 1em;\\n\\t\\ttext-align: center;\\n\\t\\tborder: 1px solid #eee;\\n\\t\\tborder-radius: 6px;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAoCC,mCAAQ,CACP,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,KACb,CAEA,oCAAS,CACR,OAAO,CAAE,IACV,CAEA,qCAAU,CACT,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MACb,CAIA,gCAAK,CACJ,OAAO,CAAE,KACV,CACA,kBAAI,CAAC,uBAAU,CACd,SAAS,CAAE,IACZ,CAEA,sCAAW,CACV,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,KAAK,CACd,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACpC,CAMA,uBAAS,CAAC,uBAAU,CACnB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GACZ,CAEA,uBAAS,CAAC,wBAAW,CACpB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GACZ,CAQA,0BAAY,CAAC,uBAAU,CACtB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GACZ,CAEA,0BAAY,CAAC,wBAAW,CACvB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GACZ"}`
};
const NonFlow$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $selectedSurah, $$unsubscribe_selectedSurah;
  let $grid, $$unsubscribe_grid;
  $$unsubscribe_selectedSurah = subscribe(selectedSurah, (value) => $selectedSurah = value);
  $$unsubscribe_grid = subscribe(grid, (value) => $grid = value);
  let verses;
  async function fetchVerses() {
    verses = await API.get(`quranflow/surah/${$selectedSurah}/verses`);
    console.log(verses);
  }
  $$result.css.add(css$5);
  $selectedSurah && fetchVerses();
  $$unsubscribe_selectedSurah();
  $$unsubscribe_grid();
  return `${verses ? `<div class="${escape(null_to_empty("wrapper " + $grid), true) + " svelte-7jut2h"}"><div class="left-col svelte-7jut2h"><ul class="verses svelte-7jut2h">${each(verses, (verse) => {
    return `${validate_component(Verse, "Verse").$$render($$result, { verse, inline: true, expandable: true }, {}, {})}`;
  })}</ul></div> <div class="right-col svelte-7jut2h"></div></div>` : ``}`;
});
const css$4 = {
  code: ".rootWords.svelte-13tvqyk li.svelte-13tvqyk{display:inline-block;font-size:26px;padding:10px;background-color:#eee;border:1px solid #ccc;margin:10px;border-radius:8px;text-align:center}.rootWords.svelte-13tvqyk ul.svelte-13tvqyk{overflow-x:scroll;margin:20px;margin-top:-22px;height:-moz-max-content;height:max-content;padding:20px 0;text-wrap:nowrap}.close.svelte-13tvqyk.svelte-13tvqyk{position:absolute;top:2px;left:2px;font-size:24px;color:#ccc}article.svelte-13tvqyk.svelte-13tvqyk{background-color:#fff1de;display:flex;flex-direction:column;height:100%;z-index:999999999}.top-row.svelte-13tvqyk.svelte-13tvqyk{flex:0 1 80%;overflow:scroll}.bottom-row.svelte-13tvqyk.svelte-13tvqyk{flex:0 1 20%}.root.svelte-13tvqyk.svelte-13tvqyk{font-size:24px;text-align:right}.word.svelte-13tvqyk.svelte-13tvqyk{font-size:42px}.def.svelte-13tvqyk.svelte-13tvqyk{font-size:32px;text-align:center}.word-container.svelte-13tvqyk.svelte-13tvqyk{position:relative;border-top:1px solid #ccc}",
  map: `{"version":3,"file":"Word.svelte","sources":["Word.svelte"],"sourcesContent":["<script>\\n\\timport API from '$lib/api/api';\\n\\timport { gopher } from '$lib/components/QuranFlow/store';\\n\\texport let word;\\n\\tconsole.log({ word });\\n\\t$: base = word.v_word || word.nv_word;\\n\\t$: root = word.nv_root || word.v_root;\\n\\t$: translation = word.nv_translation || word.v_translation;\\n\\tlet rootWords = [];\\n\\n\\tlet deeperWord = null;\\n\\n\\tasync function findMoreRoot() {\\n\\t\\trootWords = await API.post(\`/qf/find_root_words.json\`, {\\n\\t\\t\\troot: root\\n\\t\\t});\\n\\t\\tconsole.log({ rootWords });\\n\\t}\\n\\n\\tasync function findWord(category, id) {\\n\\t\\tdeeperWord = await API.get('/' + category + '/' + id + '.json');\\n\\t}\\n<\/script>\\n\\n<article>\\n\\t{#if rootWords && (rootWords.non_verbs || rootWords.verbs)}\\n\\t\\t<div class=\\"rootWords top-row\\">\\n\\t\\t\\t<div class=\\"flex\\">\\n\\t\\t\\t\\t<div class=\\"left-col\\">\\n\\t\\t\\t\\t\\t<small>NonVerbs:</small>\\n\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t{#each rootWords.non_verbs || [] as non_verb}\\n\\t\\t\\t\\t\\t\\t\\t<li on:click={() => findWord('non_verbs', non_verb.id)}>\\n\\t\\t\\t\\t\\t\\t\\t\\t{non_verb.nv_word} <br /><small>{non_verb.nv_translation}</small>\\n\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t</ul>\\n\\n\\t\\t\\t\\t\\t<small>Verbs:</small>\\n\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t{#each rootWords.verbs || [] as verb}\\n\\t\\t\\t\\t\\t\\t\\t<li on:click={() => findWord('verbs', verb.id)}>\\n\\t\\t\\t\\t\\t\\t\\t\\t{verb.v_word} <br /><small>{verb.v_translation}</small>\\n\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\"right-col\\">\\n\\t\\t\\t\\t\\t{#if deeperWord}\\n\\t\\t\\t\\t\\t\\t<div class=\\"deeper\\">\\n\\t\\t\\t\\t\\t\\t\\t<h1>{deeperWord.nv_word || deeperWord.v_word}</h1>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t{/if}\\n\\n\\t<div class=\\"word-container bottom-row\\">\\n\\t\\t{#if root}\\n\\t\\t\\t<h1 class=\\"root\\" on:click={() => findMoreRoot()}>{root}</h1>\\n\\t\\t{/if}\\n\\t\\t<h1 class=\\"def\\">\\n\\t\\t\\t<div class=\\"word\\">{base}</div>\\n\\t\\t\\t<br />{translation}\\n\\t\\t</h1>\\n\\t\\t<div\\n\\t\\t\\tclass=\\"close\\"\\n\\t\\t\\ton:click={() =>\\n\\t\\t\\t\\tgopher.set({\\n\\t\\t\\t\\t\\tkind: null,\\n\\t\\t\\t\\t\\titem: null\\n\\t\\t\\t\\t})}\\n\\t\\t>\\n\\t\\t\\t<i class=\\"fa fa-times\\" />\\n\\t\\t</div>\\n\\t</div>\\n</article>\\n\\n<style>\\n\\t.rootWords li {\\n\\t\\tdisplay: inline-block;\\n\\t\\tfont-size: 26px;\\n\\t\\tpadding: 10px;\\n\\t\\tbackground-color: #eee;\\n\\t\\tborder: 1px solid #ccc;\\n\\t\\tmargin: 10px;\\n\\t\\tborder-radius: 8px;\\n\\t\\ttext-align: center;\\n\\t}\\n\\n\\t.rootWords ul {\\n\\t\\toverflow-x: scroll;\\n\\t\\tmargin: 20px;\\n\\t\\tmargin-top: -22px;\\n\\t\\theight: -moz-max-content;\\n\\t\\theight: max-content;\\n\\t\\tpadding: 20px 0;\\n\\t\\ttext-wrap: nowrap;\\n\\t}\\n\\t.close {\\n\\t\\tposition: absolute;\\n\\t\\ttop: 2px;\\n\\t\\tleft: 2px;\\n\\t\\tfont-size: 24px;\\n\\t\\tcolor: #ccc;\\n\\t}\\n\\tarticle {\\n\\t\\tbackground-color: #fff1de;\\n\\t\\t/* width: 100%;\\n\\t\\tdisplay: block;\\n\\t\\tposition: relative;\\n\\t\\tpadding-bottom: 32px; */\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\theight: 100%;\\n\\t\\tz-index: 999999999;\\n\\t}\\n\\n\\t.top-row {\\n\\t\\tflex: 0 1 80%;\\n\\t\\toverflow: scroll;\\n\\t\\t/* background-color: lightblue; */\\n\\t}\\n\\t.bottom-row {\\n\\t\\tflex: 0 1 20%;\\n\\t\\t/* background-color: lightcoral; */\\n\\t}\\n\\t/* article > div {\\n\\t\\tpadding: 10px;\\n\\t} */\\n\\n\\t.root {\\n\\t\\tfont-size: 24px;\\n\\t\\ttext-align: right;\\n\\t}\\n\\t.word {\\n\\t\\tfont-size: 42px;\\n\\t}\\n\\t.def {\\n\\t\\tfont-size: 32px;\\n\\t\\ttext-align: center;\\n\\t}\\n\\t.word-container {\\n\\t\\tposition: relative;\\n\\t\\tborder-top: 1px solid #ccc;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAgFC,yBAAU,CAAC,iBAAG,CACb,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,IAAI,CACtB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,MACb,CAEA,yBAAU,CAAC,iBAAG,CACb,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,gBAAgB,CACxB,MAAM,CAAE,WAAW,CACnB,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,SAAS,CAAE,MACZ,CACA,oCAAO,CACN,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IACR,CACA,qCAAQ,CACP,gBAAgB,CAAE,OAAO,CAKzB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,SACV,CAEA,sCAAS,CACR,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,QAAQ,CAAE,MAEX,CACA,yCAAY,CACX,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAEX,CAKA,mCAAM,CACL,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,KACb,CACA,mCAAM,CACL,SAAS,CAAE,IACZ,CACA,kCAAK,CACJ,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MACb,CACA,6CAAgB,CACf,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IACvB"}`
};
const Word = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let base;
  let root;
  let translation2;
  let { word } = $$props;
  console.log({ word });
  let rootWords = [];
  if ($$props.word === void 0 && $$bindings.word && word !== void 0) $$bindings.word(word);
  $$result.css.add(css$4);
  base = word.v_word || word.nv_word;
  root = word.nv_root || word.v_root;
  translation2 = word.nv_translation || word.v_translation;
  return `<article class="svelte-13tvqyk">${rootWords && (rootWords.non_verbs || rootWords.verbs) ? `<div class="rootWords top-row svelte-13tvqyk"><div class="flex"><div class="left-col"><small data-svelte-h="svelte-zfemsx">NonVerbs:</small> <ul class="svelte-13tvqyk">${each(rootWords.non_verbs || [], (non_verb) => {
    return `<li class="svelte-13tvqyk">${escape(non_verb.nv_word)} <br><small>${escape(non_verb.nv_translation)}</small> </li>`;
  })}</ul> <small data-svelte-h="svelte-e4gzpc">Verbs:</small> <ul class="svelte-13tvqyk">${each(rootWords.verbs || [], (verb) => {
    return `<li class="svelte-13tvqyk">${escape(verb.v_word)} <br><small>${escape(verb.v_translation)}</small> </li>`;
  })}</ul></div> <div class="right-col">${``}</div></div></div>` : ``} <div class="word-container bottom-row svelte-13tvqyk">${root ? `<h1 class="root svelte-13tvqyk">${escape(root)}</h1>` : ``} <h1 class="def svelte-13tvqyk"><div class="word svelte-13tvqyk">${escape(base)}</div> <br>${escape(translation2)}</h1> <div class="close svelte-13tvqyk" data-svelte-h="svelte-1edlogn"><i class="fa fa-times"></i></div></div> </article>`;
});
const css$3 = {
  code: ".select-holder.svelte-4iekv4.svelte-4iekv4{display:flex;margin:0 auto;max-width:740px;font-size:34px;border-left:2px solid #eee}.select-holder.svelte-4iekv4 hr.svelte-4iekv4{margin-top:20px;margin-bottom:20px;border:0;border-top:1px solid #eeeeee;box-sizing:content-box;height:0}.search.svelte-4iekv4 input{width:100%;border:1px solid #eee;padding:10px}.top-nav.svelte-4iekv4.svelte-4iekv4{padding:0;z-index:999;background-color:#fff;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between;background-color:rgb(255, 255, 255);border-bottom:1px solid rgb(231, 232, 234);border-top-color:rgb(231, 232, 234);border-right-color:rgb(231, 232, 234);border-left-color:rgb(231, 232, 234);width:100%}.top-nav.svelte-4iekv4 .head.svelte-4iekv4{background-color:#fff;height:48px;display:flex;-webkit-box-align:center;align-items:center;font-weight:700;font-size:1.5rem;line-height:1.4;font-family:'Avenir Next', sans-serif;margin-right:16px;cursor:pointer}.hori-divider.svelte-4iekv4.svelte-4iekv4{padding-left:16px;margin-top:-16px;margin-bottom:-16px;height:74px;border-right:1px solid rgb(231, 232, 234);border-top-color:rgb(231, 232, 234);border-bottom-color:rgb(231, 232, 234);border-left-color:rgb(231, 232, 234)}.select-holder.svelte-4iekv4.svelte-4iekv4{display:inline-flex;height:100%;margin:0 auto;max-width:740px;font-size:34px;padding-left:20px;border-left:2px solid #eee;z-index:999999}.gray.svelte-4iekv4.svelte-4iekv4{color:#ccc}.flow.gray.svelte-4iekv4.svelte-4iekv4{color:#000}",
  map: `{"version":3,"file":"Nav.svelte","sources":["Nav.svelte"],"sourcesContent":["<script>\\n\\timport { goto } from '$app/navigation';\\n\\texport let listMode = false;\\n\\n\\texport let surah;\\n\\texport let fetchSurah;\\n\\timport { page } from '$app/stores';\\n\\timport { onMount } from 'svelte';\\n\\timport Search from '../../Main/Search/Search.svelte';\\n\\timport { segments, editMode, flow, selectedSurah } from '$lib/components/QuranFlow/store';\\n\\timport { user } from '$lib/stores/user';\\n\\n\\tlet searchInput = '';\\n\\n\\tlet searchQuery = '';\\n\\n\\tonMount(() => {\\n\\t\\tif ($page.params.verses) {\\n\\t\\t\\tconst ref_verses = $page.params.verses;\\n\\t\\t\\tconst ref_surah = ref_verses.split(':')[0];\\n\\t\\t\\tsurah = ref_surah;\\n\\t\\t\\tfetchSurah(surah);\\n\\t\\t\\tselectedSurah.set(surah);\\n\\t\\t} else {\\n\\t\\t\\tfetchSurah('1');\\n\\t\\t\\tselectedSurah.set('1');\\n\\t\\t}\\n\\t});\\n\\n\\tfunction visitSurah(s) {\\n\\t\\tlet path = '/';\\n\\t\\tlet ladder = ['quranflow', s];\\n\\t\\tif ($page.params.language) ladder.push($page.params.language);\\n\\t\\tpath += ladder.join('/');\\n\\t\\tgoto(path);\\n\\t\\tfetchSurah(s);\\n\\t\\tselectedSurah.set(s);\\n\\t}\\n\\n\\tfunction expandRange(rangeString) {\\n\\t\\tconst [start, end] = rangeString.split('-').map(Number);\\n\\t\\tconst [startLine, startColumn] = start.split(':').map(Number);\\n\\t\\tconst [endLine, endColumn] = end.split(':').map(Number);\\n\\n\\t\\tconst result = [];\\n\\n\\t\\tfor (let line = startLine; line <= endLine; line++) {\\n\\t\\t\\tfor (\\n\\t\\t\\t\\tlet column = line === startLine ? startColumn : 1;\\n\\t\\t\\t\\tcolumn <= (line === endLine ? endColumn : Infinity);\\n\\t\\t\\t\\tcolumn++\\n\\t\\t\\t) {\\n\\t\\t\\t\\tresult.push(\`\${line}:\${column}\`);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\n\\tasync function deliver(payload) {\\n\\t\\tswitch (payload.action) {\\n\\t\\t\\tcase 'verse':\\n\\t\\t\\t\\t// If pressed up\\n\\t\\t\\t\\tconst verse = payload.query;\\n\\t\\t\\t\\tconst s = verse.split(':')[0];\\n\\t\\t\\t\\tsurah = s;\\n\\t\\t\\t\\tawait visitSurah(verse);\\n\\n\\t\\t\\t\\treturn;\\n\\t\\t\\tcase 40:\\n\\t\\t\\t\\t// If pressed down\\n\\n\\t\\t\\t\\treturn;\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\treturn;\\n\\t\\t}\\n\\t}\\n<\/script>\\n\\n<div class=\\"top-nav\\">\\n\\t<div class=\\"head\\">\\n\\t\\t<!-- <img class=\\"mini-header\\" src=\\"/quranflow.png\\"> -->\\n\\t\\t<span style=\\"padding:12px;\\" on:click={() => flow.set(!$flow)}\\n\\t\\t\\t>Qur'an<span class=\\"gray\\" class:flow={$flow}>Flow</span></span\\n\\t\\t>\\n\\t\\t<div class=\\"select-holder\\">\\n\\t\\t\\t<select\\n\\t\\t\\t\\tclass=\\"surah-select\\"\\n\\t\\t\\t\\tbind:value={surah}\\n\\t\\t\\t\\ton:change={() => {\\n\\t\\t\\t\\t\\tvisitSurah(surah);\\n\\t\\t\\t\\t}}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<option value=\\"1\\">1. الفاتحة</option>\\n\\t\\t\\t\\t<option value=\\"2\\">2. البقرة</option>\\n\\t\\t\\t\\t<option value=\\"3\\">3. آل عمران</option>\\n\\t\\t\\t\\t<option value=\\"4\\">4. النساء</option>\\n\\t\\t\\t\\t<option value=\\"5\\">5. المائدة</option>\\n\\t\\t\\t\\t<option value=\\"6\\">6. الأنعام</option>\\n\\t\\t\\t\\t<option value=\\"7\\">7. الأعراف</option>\\n\\t\\t\\t\\t<option value=\\"8\\">8. الأنفال</option>\\n\\t\\t\\t\\t<option value=\\"9\\">9. التوبة</option>\\n\\t\\t\\t\\t<option value=\\"10\\">10. يونس</option>\\n\\t\\t\\t\\t<option value=\\"11\\">11. هود</option>\\n\\t\\t\\t\\t<option value=\\"12\\">12. يوسف</option>\\n\\t\\t\\t\\t<option value=\\"13\\">13. الرّعد</option>\\n\\t\\t\\t\\t<option value=\\"14\\">14. إبراهيم</option>\\n\\t\\t\\t\\t<option value=\\"15\\">15. الحجر</option>\\n\\t\\t\\t\\t<option value=\\"16\\">16. النحل</option>\\n\\t\\t\\t\\t<option value=\\"17\\">17. الإسراء</option>\\n\\t\\t\\t\\t<option value=\\"18\\">18. الكهف</option>\\n\\t\\t\\t\\t<option value=\\"19\\">19. مريم</option>\\n\\t\\t\\t\\t<option value=\\"20\\">20. طه</option>\\n\\t\\t\\t\\t<option value=\\"21\\">21. الأنبياء</option>\\n\\t\\t\\t\\t<option value=\\"22\\">22. الحج</option>\\n\\t\\t\\t\\t<option value=\\"23\\">23. المؤمنون</option>\\n\\t\\t\\t\\t<option value=\\"24\\">24. النّور</option>\\n\\t\\t\\t\\t<option value=\\"25\\">25. الفرقان</option>\\n\\t\\t\\t\\t<option value=\\"26\\">26. الشعراء</option>\\n\\t\\t\\t\\t<option value=\\"27\\">27. النمل</option>\\n\\t\\t\\t\\t<option value=\\"28\\">28. القصص</option>\\n\\t\\t\\t\\t<option value=\\"29\\">29. العنكبوت</option>\\n\\t\\t\\t\\t<option value=\\"30\\">30. الروم</option>\\n\\t\\t\\t\\t<option value=\\"31\\">31. لقمان</option>\\n\\t\\t\\t\\t<option value=\\"32\\">32. السجدة</option>\\n\\t\\t\\t\\t<option value=\\"33\\">33. الأحزاب</option>\\n\\t\\t\\t\\t<option value=\\"34\\">34. سبإ</option>\\n\\t\\t\\t\\t<option value=\\"35\\">35. فاطر</option>\\n\\t\\t\\t\\t<option value=\\"36\\">36. يس</option>\\n\\t\\t\\t\\t<option value=\\"37\\">37. الصّافّات</option>\\n\\t\\t\\t\\t<option value=\\"38\\">38. ص</option>\\n\\t\\t\\t\\t<option value=\\"39\\">39. الزمر</option>\\n\\t\\t\\t\\t<option value=\\"40\\">40. غافر</option>\\n\\t\\t\\t\\t<option value=\\"41\\">41. فصّلت</option>\\n\\t\\t\\t\\t<option value=\\"42\\">42. الشورى</option>\\n\\t\\t\\t\\t<option value=\\"43\\">43. الزخرف</option>\\n\\t\\t\\t\\t<option value=\\"44\\">44. الدخان</option>\\n\\t\\t\\t\\t<option value=\\"45\\">45. الجاثية</option>\\n\\t\\t\\t\\t<option value=\\"46\\">46. الأحقاف</option>\\n\\t\\t\\t\\t<option value=\\"47\\">47. محمد</option>\\n\\t\\t\\t\\t<option value=\\"48\\">48. الفتح</option>\\n\\t\\t\\t\\t<option value=\\"49\\">49. الحجرات</option>\\n\\t\\t\\t\\t<option value=\\"50\\">50. ق</option>\\n\\t\\t\\t\\t<option value=\\"51\\">51. الذاريات</option>\\n\\t\\t\\t\\t<option value=\\"52\\">52. الطور</option>\\n\\t\\t\\t\\t<option value=\\"53\\">53. النجم</option>\\n\\t\\t\\t\\t<option value=\\"54\\">54. القمر</option>\\n\\t\\t\\t\\t<option value=\\"55\\">55. الرحمن</option>\\n\\t\\t\\t\\t<option value=\\"56\\">56. الواقعة</option>\\n\\t\\t\\t\\t<option value=\\"57\\">57. الحديد</option>\\n\\t\\t\\t\\t<option value=\\"58\\">58. المجادلة</option>\\n\\t\\t\\t\\t<option value=\\"59\\">59. الحشر</option>\\n\\t\\t\\t\\t<option value=\\"60\\">60. الممتحنة</option>\\n\\t\\t\\t\\t<option value=\\"61\\">61. الصف</option>\\n\\t\\t\\t\\t<option value=\\"62\\">62. الجمعة</option>\\n\\t\\t\\t\\t<option value=\\"63\\">63. المنافقون</option>\\n\\t\\t\\t\\t<option value=\\"64\\">64. التغابن</option>\\n\\t\\t\\t\\t<option value=\\"65\\">65. الطلاق</option>\\n\\t\\t\\t\\t<option value=\\"66\\">66. التحريم</option>\\n\\t\\t\\t\\t<option value=\\"67\\">67. الملك</option>\\n\\t\\t\\t\\t<option value=\\"68\\">68. القلم</option>\\n\\t\\t\\t\\t<option value=\\"69\\">69. الحاقة</option>\\n\\t\\t\\t\\t<option value=\\"70\\">70. المعارج</option>\\n\\t\\t\\t\\t<option value=\\"71\\">71. نوح</option>\\n\\t\\t\\t\\t<option value=\\"72\\">72. الجن</option>\\n\\t\\t\\t\\t<option value=\\"73\\">73. المزمل</option>\\n\\t\\t\\t\\t<option value=\\"74\\">74. المدثر</option>\\n\\t\\t\\t\\t<option value=\\"75\\">75. القيامة</option>\\n\\t\\t\\t\\t<option value=\\"76\\">76. الإنسان</option>\\n\\t\\t\\t\\t<option value=\\"77\\">77. المرسلات</option>\\n\\t\\t\\t\\t<option value=\\"78\\">78. النبأ</option>\\n\\t\\t\\t\\t<option value=\\"79\\">79. النازعات</option>\\n\\t\\t\\t\\t<option value=\\"80\\">80. عبس</option>\\n\\t\\t\\t\\t<option value=\\"81\\">81. التكوير</option>\\n\\t\\t\\t\\t<option value=\\"82\\">82. الانفطار</option>\\n\\t\\t\\t\\t<option value=\\"83\\">83. المطففين</option>\\n\\t\\t\\t\\t<option value=\\"84\\">84. الانشقاق</option>\\n\\t\\t\\t\\t<option value=\\"85\\">85. البروج</option>\\n\\t\\t\\t\\t<option value=\\"86\\">86. الطارق</option>\\n\\t\\t\\t\\t<option value=\\"87\\">87. الأعلى</option>\\n\\t\\t\\t\\t<option value=\\"88\\">88. الغاشية</option>\\n\\t\\t\\t\\t<option value=\\"89\\">89. الفجر</option>\\n\\t\\t\\t\\t<option value=\\"90\\">90. البلد</option>\\n\\t\\t\\t\\t<option value=\\"91\\">91. الشمس</option>\\n\\t\\t\\t\\t<option value=\\"92\\">92. الليل</option>\\n\\t\\t\\t\\t<option value=\\"93\\">93. الضحى</option>\\n\\t\\t\\t\\t<option value=\\"94\\">94. الإنشراح</option>\\n\\t\\t\\t\\t<option value=\\"95\\">95. التين</option>\\n\\t\\t\\t\\t<option value=\\"96\\">96. العلق</option>\\n\\t\\t\\t\\t<option value=\\"97\\">97. القدر</option>\\n\\t\\t\\t\\t<option value=\\"98\\">98. البينة</option>\\n\\t\\t\\t\\t<option value=\\"99\\">99. الزلزلة</option>\\n\\t\\t\\t\\t<option value=\\"100\\">100. العاديات</option>\\n\\t\\t\\t\\t<option value=\\"101\\">101. القارعة</option>\\n\\t\\t\\t\\t<option value=\\"102\\">102. التكاثر</option>\\n\\t\\t\\t\\t<option value=\\"103\\">103. العصر</option>\\n\\t\\t\\t\\t<option value=\\"104\\">104. الهمزة</option>\\n\\t\\t\\t\\t<option value=\\"105\\">105. الفيل</option>\\n\\t\\t\\t\\t<option value=\\"106\\">106. قريش</option>\\n\\t\\t\\t\\t<option value=\\"107\\">107. الماعون</option>\\n\\t\\t\\t\\t<option value=\\"108\\">108. الكوثر</option>\\n\\t\\t\\t\\t<option value=\\"109\\">109. الكافرون</option>\\n\\t\\t\\t\\t<option value=\\"110\\">110. النصر</option>\\n\\t\\t\\t\\t<option value=\\"111\\">111. المسد</option>\\n\\t\\t\\t\\t<option value=\\"112\\">112. الإخلاص</option>\\n\\t\\t\\t\\t<option value=\\"113\\">113. الفلق</option>\\n\\t\\t\\t\\t<option value=\\"114\\">114. الناس</option>\\n\\t\\t\\t</select>\\n\\n\\t\\t\\t{#if $user && $user.admin}\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\tclass=\\"btn\\"\\n\\t\\t\\t\\t\\tclass:btn-info={$editMode}\\n\\t\\t\\t\\t\\tclass:btn-outline-info={!$editMode}\\n\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\teditMode.set(!$editMode);\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<i class=\\"fa fa-pen\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\tclass=\\"btn\\"\\n\\t\\t\\t\\t\\tclass:btn-warning={listMode}\\n\\t\\t\\t\\t\\tclass:btn-outline-warning={!listMode}\\n\\t\\t\\t\\t\\ton:click={() => {}}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<i class=\\"fa fa-list\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t\\t<hr />\\n\\t\\t</div>\\n\\t\\t<!-- <div class=\\"arrow-space\\"></div>\\n            <div class=\\"left-arrow arrow\\"><div class=\\"\\"><svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"20px\\" height=\\"20px\\" fill=\\"#626872\\" viewBox=\\"0 0 256 256\\"><path d=\\"M165.66,202.34a8,8,0,0,1-11.32,11.32l-80-80a8,8,0,0,1,0-11.32l80-80a8,8,0,0,1,11.32,11.32L91.31,128Z\\"></path></svg></div></div>\\n            <div class=\\"arrow-space\\"></div>\\n            <div class=\\"right-arrow arrow\\"><div class=\\"\\"><svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"20px\\" height=\\"20px\\" fill=\\"#626872\\" viewBox=\\"0 0 256 256\\"><path d=\\"M181.66,133.66l-80,80a8,8,0,0,1-11.32-11.32L164.69,128,90.34,53.66a8,8,0,0,1,11.32-11.32l80,80A8,8,0,0,1,181.66,133.66Z\\"></path></svg></div></div> -->\\n\\t</div>\\n\\n\\t<div class=\\"hori-divider\\" />\\n</div>\\n<div class=\\"search\\">\\n\\t<!-- <input type=\\"text\\" class=\\"form-control\\" bind:value={searchQuery} />\\n\\t\\t\\t\\t{#if searchQuery.length > 0}\\n\\t\\t\\t\\t\\t<div class=\\"btn btn-outline-info\\" on:change={search}><i class=\\"fa fa-search\\" /></div>\\n\\t\\t\\t\\t{/if} -->\\n\\t<Search {deliver} {searchInput} padding={10} />\\n</div>\\n\\n<style>\\n\\t.select-holder {\\n\\t\\tdisplay: flex;\\n\\t\\tmargin: 0 auto;\\n\\t\\tmax-width: 740px;\\n\\t\\tfont-size: 34px;\\n\\t\\t/* padding-left: 20px; */\\n\\t\\tborder-left: 2px solid #eee;\\n\\t\\t/* margin-left: 20px; */\\n\\t}\\n\\n\\t.select-holder hr {\\n\\t\\tmargin-top: 20px;\\n\\t\\tmargin-bottom: 20px;\\n\\t\\tborder: 0;\\n\\t\\tborder-top: 1px solid #eeeeee;\\n\\t\\tbox-sizing: content-box;\\n\\t\\theight: 0;\\n\\t}\\n\\t.search :global(input) {\\n\\t\\twidth: 100%;\\n\\t\\tborder: 1px solid #eee;\\n\\t\\tpadding: 10px;\\n\\t}\\n\\t.mini-header {\\n\\t\\tmax-width: 180px;\\n\\t}\\n\\t.top-nav {\\n\\t\\tpadding: 0;\\n\\t\\tz-index: 999;\\n\\t\\tbackground-color: #fff;\\n\\t\\tdisplay: flex;\\n\\t\\t-webkit-box-align: center;\\n\\t\\talign-items: center;\\n\\t\\t-webkit-box-pack: justify;\\n\\t\\tjustify-content: space-between;\\n\\t\\tbackground-color: rgb(255, 255, 255);\\n\\t\\tborder-bottom: 1px solid rgb(231, 232, 234);\\n\\t\\tborder-top-color: rgb(231, 232, 234);\\n\\t\\tborder-right-color: rgb(231, 232, 234);\\n\\t\\tborder-left-color: rgb(231, 232, 234);\\n\\t\\twidth: 100%;\\n\\t}\\n\\n\\t.top-nav .head {\\n\\t\\tbackground-color: #fff;\\n\\t\\theight: 48px;\\n\\t\\tdisplay: flex;\\n\\t\\t-webkit-box-align: center;\\n\\t\\talign-items: center;\\n\\t\\tfont-weight: 700;\\n\\t\\tfont-size: 1.5rem;\\n\\t\\tline-height: 1.4;\\n\\t\\tfont-family: 'Avenir Next', sans-serif;\\n\\t\\tmargin-right: 16px;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\n\\t.left-arrow {\\n\\t\\tcursor: pointer;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tborder: 1px solid transparent;\\n\\t\\tborder-radius: 4px;\\n\\t\\tpadding: 4px;\\n\\t}\\n\\n\\t.left-arrow > div {\\n\\t\\tline-height: 0;\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t}\\n\\n\\t.arrow-space {\\n\\t\\tpadding-left: 4px;\\n\\t\\tpadding-right: 4px;\\n\\t}\\n\\n\\t.right-arrow {\\n\\t\\tcursor: pointer;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tborder: 1px solid transparent;\\n\\t\\tborder-radius: 4px;\\n\\t\\tpadding: 4px;\\n\\t}\\n\\n\\t.right-arrow > div {\\n\\t\\tline-height: 0;\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t}\\n\\n\\t.hori-divider {\\n\\t\\tpadding-left: 16px;\\n\\t\\tmargin-top: -16px;\\n\\t\\tmargin-bottom: -16px;\\n\\t\\theight: 74px;\\n\\t\\tborder-right: 1px solid rgb(231, 232, 234);\\n\\t\\tborder-top-color: rgb(231, 232, 234);\\n\\t\\tborder-bottom-color: rgb(231, 232, 234);\\n\\t\\tborder-left-color: rgb(231, 232, 234);\\n\\t}\\n\\n\\t.arrow:hover {\\n\\t\\tbackground-color: rgb(250, 250, 250);\\n\\t\\tborder-color: rgb(231, 232, 234);\\n\\t}\\n\\n\\t.select-holder {\\n\\t\\tdisplay: inline-flex;\\n\\t\\theight: 100%;\\n\\t\\tmargin: 0 auto;\\n\\t\\tmax-width: 740px;\\n\\t\\tfont-size: 34px;\\n\\t\\tpadding-left: 20px;\\n\\t\\tborder-left: 2px solid #eee;\\n\\t\\t/* margin-left: 20px; */\\n\\t\\tz-index: 999999;\\n\\t}\\n\\n\\t.gray {\\n\\t\\tcolor: #ccc;\\n\\t}\\n\\n\\t.flow.gray {\\n\\t\\tcolor: #000;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAyPC,0CAAe,CACd,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,IAAI,CAEf,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,IAExB,CAEA,4BAAc,CAAC,gBAAG,CACjB,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,UAAU,CAAE,WAAW,CACvB,MAAM,CAAE,CACT,CACA,qBAAO,CAAS,KAAO,CACtB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,OAAO,CAAE,IACV,CAIA,oCAAS,CACR,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,GAAG,CACZ,gBAAgB,CAAE,IAAI,CACtB,OAAO,CAAE,IAAI,CACb,iBAAiB,CAAE,MAAM,CACzB,WAAW,CAAE,MAAM,CACnB,gBAAgB,CAAE,OAAO,CACzB,eAAe,CAAE,aAAa,CAC9B,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC3C,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,kBAAkB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACtC,iBAAiB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACrC,KAAK,CAAE,IACR,CAEA,sBAAQ,CAAC,mBAAM,CACd,gBAAgB,CAAE,IAAI,CACtB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,iBAAiB,CAAE,MAAM,CACzB,WAAW,CAAE,MAAM,CACnB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,aAAa,CAAC,CAAC,UAAU,CACtC,YAAY,CAAE,IAAI,CAClB,MAAM,CAAE,OACT,CAmCA,yCAAc,CACb,YAAY,CAAE,IAAI,CAClB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,KAAK,CACpB,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,mBAAmB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACvC,iBAAiB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACrC,CAOA,0CAAe,CACd,OAAO,CAAE,WAAW,CACpB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,IAAI,CACf,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAE3B,OAAO,CAAE,MACV,CAEA,iCAAM,CACL,KAAK,CAAE,IACR,CAEA,KAAK,iCAAM,CACV,KAAK,CAAE,IACR"}`
};
let searchInput = "";
const Nav = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  let $flow, $$unsubscribe_flow;
  let $user, $$unsubscribe_user;
  let $editMode, $$unsubscribe_editMode;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  $$unsubscribe_flow = subscribe(flow, (value) => $flow = value);
  $$unsubscribe_user = subscribe(user, (value) => $user = value);
  $$unsubscribe_editMode = subscribe(editMode, (value) => $editMode = value);
  let { listMode = false } = $$props;
  let { surah } = $$props;
  let { fetchSurah } = $$props;
  function visitSurah(s) {
    let ladder = ["quranflow", s];
    if ($page.params.language) ladder.push($page.params.language);
    goto();
    fetchSurah(s);
    selectedSurah.set(s);
  }
  async function deliver(payload) {
    switch (payload.action) {
      case "verse":
        const verse = payload.query;
        const s = verse.split(":")[0];
        surah = s;
        await visitSurah(verse);
        return;
      case 40:
        return;
      default:
        return;
    }
  }
  if ($$props.listMode === void 0 && $$bindings.listMode && listMode !== void 0) $$bindings.listMode(listMode);
  if ($$props.surah === void 0 && $$bindings.surah && surah !== void 0) $$bindings.surah(surah);
  if ($$props.fetchSurah === void 0 && $$bindings.fetchSurah && fetchSurah !== void 0) $$bindings.fetchSurah(fetchSurah);
  $$result.css.add(css$3);
  $$unsubscribe_page();
  $$unsubscribe_flow();
  $$unsubscribe_user();
  $$unsubscribe_editMode();
  return `<div class="top-nav svelte-4iekv4"><div class="head svelte-4iekv4"> <span style="padding:12px;">Qur&#39;an<span class="${["gray svelte-4iekv4", $flow ? "flow" : ""].join(" ").trim()}" data-svelte-h="svelte-1f4gu37">Flow</span></span> <div class="select-holder svelte-4iekv4"><select class="surah-select"><option value="1" data-svelte-h="svelte-2xzsep">1. الفاتحة</option><option value="2" data-svelte-h="svelte-1mnizvh">2. البقرة</option><option value="3" data-svelte-h="svelte-4bfb94">3. آل عمران</option><option value="4" data-svelte-h="svelte-1d4pte8">4. النساء</option><option value="5" data-svelte-h="svelte-128elr7">5. المائدة</option><option value="6" data-svelte-h="svelte-2x10ur">6. الأنعام</option><option value="7" data-svelte-h="svelte-14txkv2">7. الأعراف</option><option value="8" data-svelte-h="svelte-63sqj8">8. الأنفال</option><option value="9" data-svelte-h="svelte-1lho3ig">9. التوبة</option><option value="10" data-svelte-h="svelte-1e6zdsf">10. يونس</option><option value="11" data-svelte-h="svelte-vkxttm">11. هود</option><option value="12" data-svelte-h="svelte-a7e8a">12. يوسف</option><option value="13" data-svelte-h="svelte-m8fqhv">13. الرّعد</option><option value="14" data-svelte-h="svelte-lui0f9">14. إبراهيم</option><option value="15" data-svelte-h="svelte-wd5gmb">15. الحجر</option><option value="16" data-svelte-h="svelte-mw8nao">16. النحل</option><option value="17" data-svelte-h="svelte-1nnwrt4">17. الإسراء</option><option value="18" data-svelte-h="svelte-18ucj2">18. الكهف</option><option value="19" data-svelte-h="svelte-7zjuqh">19. مريم</option><option value="20" data-svelte-h="svelte-1rec3q">20. طه</option><option value="21" data-svelte-h="svelte-1a304ks">21. الأنبياء</option><option value="22" data-svelte-h="svelte-jrz8hm">22. الحج</option><option value="23" data-svelte-h="svelte-13kut31">23. المؤمنون</option><option value="24" data-svelte-h="svelte-14a92zz">24. النّور</option><option value="25" data-svelte-h="svelte-1rox3aq">25. الفرقان</option><option value="26" data-svelte-h="svelte-1jnfw25">26. الشعراء</option><option value="27" data-svelte-h="svelte-1036xoo">27. النمل</option><option value="28" data-svelte-h="svelte-xn5xfj">28. القصص</option><option value="29" data-svelte-h="svelte-pclh4z">29. العنكبوت</option><option value="30" data-svelte-h="svelte-1psxa6v">30. الروم</option><option value="31" data-svelte-h="svelte-wezize">31. لقمان</option><option value="32" data-svelte-h="svelte-19o61j0">32. السجدة</option><option value="33" data-svelte-h="svelte-4y508m">33. الأحزاب</option><option value="34" data-svelte-h="svelte-1e23220">34. سبإ</option><option value="35" data-svelte-h="svelte-vmhh9s">35. فاطر</option><option value="36" data-svelte-h="svelte-1v7aap9">36. يس</option><option value="37" data-svelte-h="svelte-1wr94gj">37. الصّافّات</option><option value="38" data-svelte-h="svelte-1o7afjp">38. ص</option><option value="39" data-svelte-h="svelte-1jskejv">39. الزمر</option><option value="40" data-svelte-h="svelte-1g8xepj">40. غافر</option><option value="41" data-svelte-h="svelte-1dmgb3h">41. فصّلت</option><option value="42" data-svelte-h="svelte-1qjnhyn">42. الشورى</option><option value="43" data-svelte-h="svelte-55rkxv">43. الزخرف</option><option value="44" data-svelte-h="svelte-f5sphp">44. الدخان</option><option value="45" data-svelte-h="svelte-qw0hhc">45. الجاثية</option><option value="46" data-svelte-h="svelte-2m3rh">46. الأحقاف</option><option value="47" data-svelte-h="svelte-l2kpg2">47. محمد</option><option value="48" data-svelte-h="svelte-1np4vtx">48. الفتح</option><option value="49" data-svelte-h="svelte-iv77m2">49. الحجرات</option><option value="50" data-svelte-h="svelte-1e7bmbg">50. ق</option><option value="51" data-svelte-h="svelte-y2hc8c">51. الذاريات</option><option value="52" data-svelte-h="svelte-1gpdiih">52. الطور</option><option value="53" data-svelte-h="svelte-1jovfle">53. النجم</option><option value="54" data-svelte-h="svelte-1dc48y7">54. القمر</option><option value="55" data-svelte-h="svelte-1kjgvbu">55. الرحمن</option><option value="56" data-svelte-h="svelte-znu3qk">56. الواقعة</option><option value="57" data-svelte-h="svelte-ek310s">57. الحديد</option><option value="58" data-svelte-h="svelte-c9un1d">58. المجادلة</option><option value="59" data-svelte-h="svelte-1ibf35n">59. الحشر</option><option value="60" data-svelte-h="svelte-hp8bpr">60. الممتحنة</option><option value="61" data-svelte-h="svelte-y2cii7">61. الصف</option><option value="62" data-svelte-h="svelte-q7rtva">62. الجمعة</option><option value="63" data-svelte-h="svelte-ea9ud6">63. المنافقون</option><option value="64" data-svelte-h="svelte-1n7sq18">64. التغابن</option><option value="65" data-svelte-h="svelte-1l0c07b">65. الطلاق</option><option value="66" data-svelte-h="svelte-4i9i5e">66. التحريم</option><option value="67" data-svelte-h="svelte-1dwiuzx">67. الملك</option><option value="68" data-svelte-h="svelte-j4cfo6">68. القلم</option><option value="69" data-svelte-h="svelte-1isg9la">69. الحاقة</option><option value="70" data-svelte-h="svelte-46555h">70. المعارج</option><option value="71" data-svelte-h="svelte-8pudvr">71. نوح</option><option value="72" data-svelte-h="svelte-ysf7z7">72. الجن</option><option value="73" data-svelte-h="svelte-mw65lz">73. المزمل</option><option value="74" data-svelte-h="svelte-1g37iy1">74. المدثر</option><option value="75" data-svelte-h="svelte-3o6x5g">75. القيامة</option><option value="76" data-svelte-h="svelte-1bg1bjm">76. الإنسان</option><option value="77" data-svelte-h="svelte-20oe31">77. المرسلات</option><option value="78" data-svelte-h="svelte-18pwaao">78. النبأ</option><option value="79" data-svelte-h="svelte-1k8wwj4">79. النازعات</option><option value="80" data-svelte-h="svelte-8djvnc">80. عبس</option><option value="81" data-svelte-h="svelte-19r97mz">81. التكوير</option><option value="82" data-svelte-h="svelte-7d8hli">82. الانفطار</option><option value="83" data-svelte-h="svelte-18ftnhv">83. المطففين</option><option value="84" data-svelte-h="svelte-1r816bf">84. الانشقاق</option><option value="85" data-svelte-h="svelte-156ed4k">85. البروج</option><option value="86" data-svelte-h="svelte-93u5oa">86. الطارق</option><option value="87" data-svelte-h="svelte-w6i2r8">87. الأعلى</option><option value="88" data-svelte-h="svelte-r18u33">88. الغاشية</option><option value="89" data-svelte-h="svelte-3iamgn">89. الفجر</option><option value="90" data-svelte-h="svelte-1vpzlsa">90. البلد</option><option value="91" data-svelte-h="svelte-jnruk7">91. الشمس</option><option value="92" data-svelte-h="svelte-1nqu6pp">92. الليل</option><option value="93" data-svelte-h="svelte-euk833">93. الضحى</option><option value="94" data-svelte-h="svelte-5dv1p1">94. الإنشراح</option><option value="95" data-svelte-h="svelte-iev6r9">95. التين</option><option value="96" data-svelte-h="svelte-2hnba2">96. العلق</option><option value="97" data-svelte-h="svelte-1f3o6bt">97. القدر</option><option value="98" data-svelte-h="svelte-1vefvq0">98. البينة</option><option value="99" data-svelte-h="svelte-178hdd8">99. الزلزلة</option><option value="100" data-svelte-h="svelte-1usdyxz">100. العاديات</option><option value="101" data-svelte-h="svelte-1q6bf7z">101. القارعة</option><option value="102" data-svelte-h="svelte-1oq60u1">102. التكاثر</option><option value="103" data-svelte-h="svelte-19p9ray">103. العصر</option><option value="104" data-svelte-h="svelte-1cfw27g">104. الهمزة</option><option value="105" data-svelte-h="svelte-1g8w79m">105. الفيل</option><option value="106" data-svelte-h="svelte-1qlnsob">106. قريش</option><option value="107" data-svelte-h="svelte-1upczvq">107. الماعون</option><option value="108" data-svelte-h="svelte-k2g6gy">108. الكوثر</option><option value="109" data-svelte-h="svelte-1byxgwj">109. الكافرون</option><option value="110" data-svelte-h="svelte-1bmysqf">110. النصر</option><option value="111" data-svelte-h="svelte-njt644">111. المسد</option><option value="112" data-svelte-h="svelte-14ug29y">112. الإخلاص</option><option value="113" data-svelte-h="svelte-9gyowk">113. الفلق</option><option value="114" data-svelte-h="svelte-j02rq3">114. الناس</option></select> ${$user && $user.admin ? `<div class="${[
    "btn",
    ($editMode ? "btn-info" : "") + " " + (!$editMode ? "btn-outline-info" : "")
  ].join(" ").trim()}" data-svelte-h="svelte-1185u2b"><i class="fa fa-pen"></i></div> <div class="${[
    "btn",
    (listMode ? "btn-warning" : "") + " " + (!listMode ? "btn-outline-warning" : "")
  ].join(" ").trim()}" data-svelte-h="svelte-wo77cy"><i class="fa fa-list"></i></div>` : ``} <hr class="svelte-4iekv4"></div> </div> <div class="hori-divider svelte-4iekv4"></div></div> <div class="search svelte-4iekv4"> ${validate_component(Search, "Search").$$render($$result, { deliver, searchInput, padding: 10 }, {}, {})} </div>`;
});
const css$2 = {
  code: ".ref.svelte-1vdegfe.svelte-1vdegfe{padding:10px;color:rgb(40, 117, 91);display:block;width:max-content;margin-bottom:10px;border-radius:10px}.verses.selected.svelte-1vdegfe.svelte-1vdegfe{background-color:#defff6;display:block}.panel.svelte-1vdegfe.svelte-1vdegfe{background-color:#ccc;padding:1em;border-radius:0.3em;margin-bottom:10px}.panel.svelte-1vdegfe .ref.svelte-1vdegfe{background-color:rgb(240, 255, 218)}.panel.unsaved.svelte-1vdegfe.svelte-1vdegfe{background-color:rgb(249, 55, 55)}.springs.svelte-1vdegfe .spring.svelte-1vdegfe{display:inline-block;padding:10px;border:1px solid;margin:3px;border-radius:6px;background:#c5f0ff}.gifs.svelte-1vdegfe.svelte-1vdegfe{background:#d08300;padding:10px}.urdu.svelte-1vdegfe.svelte-1vdegfe{direction:rtl;display:block;font-size:18px;font-family:'Noto Nastaliq Urdu', serif;font-optical-sizing:auto;font-weight:lighter;font-style:normal;line-height:40px;border-bottom:1px solid #eee;padding:10px 0}",
  map: `{"version":3,"file":"Segment.svelte","sources":["Segment.svelte"],"sourcesContent":["<script>\\n\\timport { page } from '$app/stores';\\n\\timport API from '$lib/api/api';\\n\\timport VerseSliced from '$lib/components/Quran/Verses/Verse/VerseSliced.svelte';\\n\\timport Spinner from '$lib/components/Spinner/Spinner.svelte';\\n\\timport { selectedSegment, editMode } from '$lib/components/QuranFlow/store';\\n\\timport Gif from '../Gif.svelte';\\n\\timport Verse from '../Verse/Verse.svelte';\\n\\n\\texport let segment;\\n\\n\\texport let selected = false;\\n\\tlet verses;\\n\\n\\timport { inview } from 'svelte-inview';\\n\\n\\tlet shownVerseIndex = 0;\\n\\n\\tlet isInView;\\n\\tconst options = {};\\n\\n\\tlet unsaved = false;\\n\\tlet springs = null;\\n\\n\\tlet loadingSegment = false;\\n\\n\\t$: {\\n\\t\\tsegment;\\n\\t\\tunsaved = false;\\n\\t}\\n\\n\\t$: {\\n\\t\\tif (isInView && !springs) {\\n\\t\\t\\tgetSprings();\\n\\t\\t}\\n\\t}\\n\\n\\t$: getSegment(selected);\\n\\n\\tfunction select() {\\n\\t\\tselected = !selected;\\n\\t}\\n\\n\\tasync function getSegment(selected) {\\n\\t\\tif (!selected) return;\\n\\t\\tloadingSegment = true;\\n\\t\\tsegment.versesList = await API.get('/quran/verses/' + segment.verses + '.json');\\n\\t\\tconsole.log({ segment });\\n\\t\\tloadingSegment = false;\\n\\t}\\n\\n\\tasync function getSprings() {\\n\\t\\tsprings = await API.get(\`/segments/\${segment.id}/springs.json\`);\\n\\t\\tconsole.log({ springs });\\n\\t}\\n\\n\\tfunction changed() {\\n\\t\\tunsaved = true;\\n\\t}\\n\\n\\tasync function saveSegment() {\\n\\t\\tsprings = await API.put(\`/segments/\${segment.id}.json\`, {\\n\\t\\t\\tgifs: segment.gifs\\n\\t\\t});\\n\\t\\tconsole.log({ springs });\\n\\t\\tunsaved = false;\\n\\t}\\n\\t$: lang = $page.params.language;\\n\\t$: langd = lang ? segment.translations[lang] : segment.summary;\\n<\/script>\\n\\n<div class=\\"segment\\">\\n\\t{#if $editMode}\\n\\t\\t<div\\n\\t\\t\\tuse:inview={options}\\n\\t\\t\\ton:inview_change={(event) => {\\n\\t\\t\\t\\tconst { inView, entry, scrollDirection, observer, node } = event.detail;\\n\\t\\t\\t\\tisInView = inView;\\n\\t\\t\\t}}\\n\\t\\t>\\n\\t\\t\\t<div class=\\"panel\\" class:unsaved>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\ttype=\\"text\\"\\n\\t\\t\\t\\t\\tclass=\\"ref form-control\\"\\n\\t\\t\\t\\t\\tbind:value={segment.verses}\\n\\t\\t\\t\\t\\ton:keyup={changed}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t\\t<div class=\\"btn btn-outline-info\\" on:click={() => {}}>\\n\\t\\t\\t\\t\\t<i class=\\"fa fa-book\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<textarea\\n\\t\\t\\t\\t\\tname=\\"\\"\\n\\t\\t\\t\\t\\tclass=\\"form-control\\"\\n\\t\\t\\t\\t\\tid=\\"\\"\\n\\t\\t\\t\\t\\tcols=\\"30\\"\\n\\t\\t\\t\\t\\trows=\\"5\\"\\n\\t\\t\\t\\t\\tbind:value={segment.summary}\\n\\t\\t\\t\\t\\ton:keyup={changed}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t\\t<div class=\\"gifs\\">\\n\\t\\t\\t\\t\\t<ul class=\\"clean-list\\">\\n\\t\\t\\t\\t\\t\\t{#each segment.gifs as gif, index}\\n\\t\\t\\t\\t\\t\\t\\t<Gif\\n\\t\\t\\t\\t\\t\\t\\t\\t{gif}\\n\\t\\t\\t\\t\\t\\t\\t\\tupdate={(payload) => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsegment.gifs[index] = payload;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tunsaved = true;\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t\\tremove={() => (segment.gifs = segment.gifs.filter((g) => g !== gif))}\\n\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t<div class=\\"btn btn-info\\" on:click={() => (segment.gifs = [...segment.gifs, 'gif'])}>\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\"fa fa-plus\\" />\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\"btn btn-warning\\" on:click={() => saveSegment()}>\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\"fa fa-save\\" />\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{#if springs}\\n\\t\\t\\t\\t\\t<div class=\\"springs\\">\\n\\t\\t\\t\\t\\t\\t<ul class=\\"clean-list\\">\\n\\t\\t\\t\\t\\t\\t\\t{#each springs as item}\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\"spring\\">{item.spring.title}</li>\\n\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"btn btn-outline-info\\"><i class=\\"fa fa-plus\\" /></div>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t{:else}\\n\\t\\t<span class={\`verses \${lang}\`} on:click={select} class:selected>\\n\\t\\t\\t{#if langd.indexOf('-') === 0}\\n\\t\\t\\t\\t{@html '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'}{langd.substring(1)}\\n\\t\\t\\t{:else}\\n\\t\\t\\t\\t{langd}\\n\\t\\t\\t{/if}\\n\\t\\t</span>\\n\\t{/if}\\n</div>\\n{#if selected}\\n\\t{#if segment.versesList}\\n\\t\\t<ul class=\\"verses\\">\\n\\t\\t\\t<div class=\\"ref\\">- {segment.verses}</div>\\n\\n\\t\\t\\t<input\\n\\t\\t\\t\\ttype=\\"range\\"\\n\\t\\t\\t\\tbind:value={shownVerseIndex}\\n\\t\\t\\t\\tmin=\\"0\\"\\n\\t\\t\\t\\tmax={segment.versesList.length - 1}\\n\\t\\t\\t\\tstyle={'padding: 10; width: 90%; margin: 20px; direction: rtl'}\\n\\t\\t\\t/>\\n\\t\\t\\t{#each segment.versesList as verse, index}\\n\\t\\t\\t\\t{#if index === shownVerseIndex}\\n\\t\\t\\t\\t\\t<Verse {verse} />\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t{/each}\\n\\t\\t</ul>\\n\\t{/if}\\n\\n\\t{#if loadingSegment}\\n\\t\\t<Spinner>Loading Verses...</Spinner>\\n\\t{/if}\\n{/if}\\n\\n<style>\\n\\t.ref {\\n\\t\\tpadding: 10px;\\n\\t\\tcolor: rgb(40, 117, 91);\\n\\t\\tdisplay: block;\\n\\t\\twidth: max-content;\\n\\t\\tmargin-bottom: 10px;\\n\\t\\tborder-radius: 10px;\\n\\t}\\n\\t.verses.selected {\\n\\t\\tbackground-color: #defff6;\\n\\t\\tdisplay: block;\\n\\t}\\n\\n\\t.panel {\\n\\t\\tbackground-color: #ccc;\\n\\t\\tpadding: 1em;\\n\\t\\tborder-radius: 0.3em;\\n\\t\\tmargin-bottom: 10px;\\n\\t}\\n\\n\\t.panel .ref {\\n\\t\\tbackground-color: rgb(240, 255, 218);\\n\\t}\\n\\n\\t.panel.unsaved {\\n\\t\\tbackground-color: rgb(249, 55, 55);\\n\\t}\\n\\n\\t.springs .spring {\\n\\t\\tdisplay: inline-block;\\n\\t\\tpadding: 10px;\\n\\t\\tborder: 1px solid;\\n\\t\\tmargin: 3px;\\n\\t\\tborder-radius: 6px;\\n\\t\\tbackground: #c5f0ff;\\n\\t}\\n\\n\\t.gifs {\\n\\t\\tbackground: #d08300;\\n\\t\\tpadding: 10px;\\n\\t}\\n\\n\\t.gif img {\\n\\t\\tmax-width: 100%;\\n\\t}\\n\\n\\t.urdu {\\n\\t\\tdirection: rtl;\\n\\t\\tdisplay: block;\\n\\t\\tfont-size: 18px;\\n\\t\\tfont-family: 'Noto Nastaliq Urdu', serif;\\n\\t\\tfont-optical-sizing: auto;\\n\\t\\tfont-weight: lighter;\\n\\t\\tfont-style: normal;\\n\\t\\tline-height: 40px;\\n\\t\\tborder-bottom: 1px solid #eee;\\n\\t\\tpadding: 10px 0;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAuKC,kCAAK,CACJ,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CACvB,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,WAAW,CAClB,aAAa,CAAE,IAAI,CACnB,aAAa,CAAE,IAChB,CACA,OAAO,uCAAU,CAChB,gBAAgB,CAAE,OAAO,CACzB,OAAO,CAAE,KACV,CAEA,oCAAO,CACN,gBAAgB,CAAE,IAAI,CACtB,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,KAAK,CACpB,aAAa,CAAE,IAChB,CAEA,qBAAM,CAAC,mBAAK,CACX,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACpC,CAEA,MAAM,sCAAS,CACd,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAClC,CAEA,uBAAQ,CAAC,sBAAQ,CAChB,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CACjB,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,OACb,CAEA,mCAAM,CACL,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IACV,CAMA,mCAAM,CACL,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,oBAAoB,CAAC,CAAC,KAAK,CACxC,mBAAmB,CAAE,IAAI,CACzB,WAAW,CAAE,OAAO,CACpB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,OAAO,CAAE,IAAI,CAAC,CACf"}`
};
const Segment = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let lang;
  let langd;
  let $page, $$unsubscribe_page;
  let $editMode, $$unsubscribe_editMode;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  $$unsubscribe_editMode = subscribe(editMode, (value) => $editMode = value);
  let { segment } = $$props;
  let { selected = false } = $$props;
  let shownVerseIndex = 0;
  let unsaved = false;
  let loadingSegment = false;
  async function getSegment(selected2) {
    if (!selected2) return;
    loadingSegment = true;
    segment.versesList = await API.get("/quran/verses/" + segment.verses + ".json");
    console.log({ segment });
    loadingSegment = false;
  }
  if ($$props.segment === void 0 && $$bindings.segment && segment !== void 0) $$bindings.segment(segment);
  if ($$props.selected === void 0 && $$bindings.selected && selected !== void 0) $$bindings.selected(selected);
  $$result.css.add(css$2);
  {
    {
      unsaved = false;
    }
  }
  {
    getSegment(selected);
  }
  lang = $page.params.language;
  langd = lang ? segment.translations[lang] : segment.summary;
  $$unsubscribe_page();
  $$unsubscribe_editMode();
  return `<div class="segment">${$editMode ? `<div><div class="${["panel svelte-1vdegfe", unsaved ? "unsaved" : ""].join(" ").trim()}"><input type="text" class="ref form-control svelte-1vdegfe"${add_attribute("value", segment.verses, 0)}> <div class="btn btn-outline-info" data-svelte-h="svelte-v6fwjr"><i class="fa fa-book"></i></div> <textarea name="" class="form-control" id="" cols="30" rows="5">${escape(segment.summary || "")}</textarea> <div class="gifs svelte-1vdegfe"><ul class="clean-list">${each(segment.gifs, (gif, index) => {
    return `${validate_component(Gif, "Gif").$$render(
      $$result,
      {
        gif,
        update: (payload) => {
          segment.gifs[index] = payload;
          unsaved = true;
        },
        remove: () => segment.gifs = segment.gifs.filter((g) => g !== gif)
      },
      {},
      {}
    )}`;
  })} <div class="btn btn-info" data-svelte-h="svelte-kda315"><i class="fa fa-plus"></i></div> <div class="btn btn-warning" data-svelte-h="svelte-1rhut1d"><i class="fa fa-save"></i></div></ul></div> ${``}</div></div>` : `<span class="${[
    escape(null_to_empty(`verses ${lang}`), true) + " svelte-1vdegfe",
    selected ? "selected" : ""
  ].join(" ").trim()}">${langd.indexOf("-") === 0 ? `<!-- HTML_TAG_START -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!-- HTML_TAG_END -->${escape(langd.substring(1))}` : `${escape(langd)}`}</span>`}</div> ${selected ? `${segment.versesList ? `<ul class="verses"><div class="ref svelte-1vdegfe">- ${escape(segment.verses)}</div> <input type="range" min="0"${add_attribute("max", segment.versesList.length - 1, 0)}${add_attribute("style", "padding: 10; width: 90%; margin: 20px; direction: rtl", 0)}${add_attribute("value", shownVerseIndex, 0)}> ${each(segment.versesList, (verse, index) => {
    return `${index === shownVerseIndex ? `${validate_component(Verse, "Verse").$$render($$result, { verse }, {}, {})}` : ``}`;
  })}</ul>` : ``} ${loadingSegment ? `${validate_component(Spinner, "Spinner").$$render($$result, {}, {}, {
    default: () => {
      return `Loading Verses...`;
    }
  })}` : ``}` : ``}`;
});
const NonFlow = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $selectedSurah, $$unsubscribe_selectedSurah;
  $$unsubscribe_selectedSurah = subscribe(selectedSurah, (value) => $selectedSurah = value);
  let verses;
  async function fetchVerses() {
    verses = await API.get(`quranflow/surah/${$selectedSurah}/verses`);
    console.log(verses);
  }
  $selectedSurah && fetchVerses();
  $$unsubscribe_selectedSurah();
  return `${verses ? `<ul class="verses">${each(verses, (verse) => {
    return `${validate_component(Verse, "Verse").$$render($$result, { verse }, {}, {})}`;
  })}</ul>` : ``}`;
});
const css$1 = {
  code: ".gopher.svelte-1bw9skx{position:fixed;bottom:0;width:100%}.up.svelte-1bw9skx{position:fixed;top:0;width:100%;background:#fff;z-index:9999}.summary.svelte-1bw9skx{margin-top:10px;padding:32px}.wrapper.svelte-1bw9skx{max-width:100%;overflow-x:hidden;margin-top:8em}",
  map: `{"version":3,"file":"Index.svelte","sources":["Index.svelte"],"sourcesContent":["<script>\\n\\timport { onMount } from 'svelte';\\n\\timport Api from '$lib/api/api.js';\\n\\timport Nav from './Nav.svelte';\\n\\timport Segment from './Segment.svelte';\\n\\timport API from '$lib/api/api.js';\\n\\timport Spinner from '../../Spinner/Spinner.svelte';\\n\\n\\timport Playlist from '../Dig/Playlist.svelte';\\n\\timport {\\n\\t\\tgrid,\\n\\t\\tplaylists,\\n\\t\\tselectedSegment,\\n\\t\\trightNavTab,\\n\\t\\tsegments,\\n\\t\\teditMode,\\n\\t\\tflow\\n\\t} from '$lib/components/QuranFlow/store';\\n\\timport { page } from '$app/stores';\\n\\timport { user } from '$lib/stores/user';\\n\\timport { gopher } from '$lib/components/QuranFlow/store';\\n\\n\\timport Notes from '../Dig/Notes.svelte';\\n\\timport Word from './Gopher/Word.svelte';\\n\\timport NonFlow from './NonFlow.svelte';\\n\\n\\t// Call the function to fetch JSON data when the component is mounted\\n\\texport let findSegmentByVerse;\\n\\n\\tlet loadingSurah = false;\\n\\tlet loadingSegment = false;\\n\\n\\tlet listMode = false;\\n\\tlet verses;\\n\\tlet content_playlists;\\n\\n\\tonMount(() => {\\n\\t\\tfetchPlaylists();\\n\\t});\\n\\n\\tasync function fetchPlaylists() {\\n\\t\\tplaylists.set(await API.get('/content_playlists.json'));\\n\\t}\\n\\n\\tfunction expandRange(rangeString) {\\n\\t\\tif (!rangeString.includes('-')) return [rangeString];\\n\\t\\tconst [start, end] = rangeString.split('-');\\n\\n\\t\\tconst [startLine, startColumn] = start.split(':').map(Number);\\n\\t\\tconst [endLine, endColumn] = end.split(':').map(Number);\\n\\n\\t\\tconst result = [];\\n\\n\\t\\tfor (let line = startLine; line <= endLine; line++) {\\n\\t\\t\\tfor (\\n\\t\\t\\t\\tlet column = line === startLine ? startColumn : 1;\\n\\t\\t\\t\\tcolumn <= (line === endLine ? endColumn : Infinity);\\n\\t\\t\\t\\tcolumn++\\n\\t\\t\\t) {\\n\\t\\t\\t\\tresult.push(\`\${line}:\${column}\`);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\tasync function fetchSurah(surah) {\\n\\t\\tloadingSurah = true;\\n\\t\\tsegments.set([]);\\n\\t\\tselectedSegment.set(null);\\n\\t\\tverses = false;\\n\\t\\tlet verse = surah;\\n\\t\\tconst s = surah.split(':')[0];\\n\\t\\tsurah = s;\\n\\n\\t\\tsegments.set(await Api.get(\`/quranflow/surah/\${surah}.json\`));\\n\\t\\tconsole.log('segments', $segments);\\n\\t\\tloadingSurah = false;\\n\\n\\t\\tfindSegmentByVerse(verse.split('-')[0]);\\n\\t}\\n\\n\\tfunction selectSegment(segment) {\\n\\t\\tverses = false;\\n\\t\\tif ($selectedSegment && $selectedSegment.id === segment.id) {\\n\\t\\t\\tselectedSegment.set(null);\\n\\t\\t\\treturn;\\n\\t\\t} else {\\n\\t\\t\\tselectedSegment.set(segment);\\n\\t\\t\\tloadingSegment = true;\\n\\t\\t}\\n\\t}\\n<\/script>\\n\\n<div class=\\"up\\">\\n\\t<Nav {fetchSurah} />\\n</div>\\n<div class=\\"wrapper\\">\\n\\t{#if $flow}\\n\\t\\t{#if $segments && !loadingSurah}\\n\\t\\t\\t<div class=\\"summary\\">\\n\\t\\t\\t\\t{#each $segments as segment}\\n\\t\\t\\t\\t\\t<Segment {segment} select={() => selectSegment(segment)} />\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t{:else if loadingSurah}\\n\\t\\t\\t<Spinner>Loading Surah...</Spinner>\\n\\t\\t{/if}\\n\\t{:else}\\n\\t\\t<NonFlow />\\n\\t{/if}\\n</div>\\n\\n{#if $gopher.kind && $gopher.item}\\n\\t<div class=\\"gopher\\">\\n\\t\\t{#if $gopher.kind === 'word'}\\n\\t\\t\\t<Word word={$gopher.item} />\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>\\n\\t.gopher {\\n\\t\\tposition: fixed;\\n\\t\\tbottom: 0;\\n\\t\\twidth: 100%;\\n\\t}\\n\\t.up {\\n\\t\\tposition: fixed;\\n\\t\\ttop: 0;\\n\\t\\twidth: 100%;\\n\\n\\t\\tbackground: #fff;\\n\\t\\tz-index: 9999;\\n\\t}\\n\\t.summary {\\n\\t\\tmargin-top: 10px;\\n\\t\\tpadding: 32px;\\n\\t}\\n\\t.wrapper {\\n\\t\\tmax-width: 100%;\\n\\t\\toverflow-x: hidden;\\n\\t\\tmargin-top: 8em;\\n\\t}\\n\\t.nav li {\\n\\t\\tpadding: 10px;\\n\\t}\\n\\n\\t.nav .active {\\n\\t\\tbackground-color: #000;\\n\\t\\tcolor: #fff;\\n\\t}\\n\\t.wrapper {\\n\\t\\t/* display: flex; */\\n\\t}\\n\\n\\t.mini-header {\\n\\t\\tmax-width: 350px;\\n\\t\\tdisplay: block;\\n\\t\\tmargin: 0 auto;\\n\\t}\\n\\n\\timg {\\n\\t\\tvertical-align: middle;\\n\\t}\\n\\n\\t.left-col {\\n\\t\\tflex: 1 1 100%;\\n\\t\\tmax-width: 100%;\\n\\t\\tpadding: 3em;\\n\\t\\theight: 90vh;\\n\\t\\toverflow-y: scroll;\\n\\t}\\n\\n\\t.right-col {\\n\\t\\tflex: 1 1 33%;\\n\\t\\tmax-width: 33%;\\n\\t\\tpadding: 0.5em;\\n\\t\\tbackground-color: rgb(241, 255, 241);\\n\\t}\\n\\n\\t.extra-right-col {\\n\\t\\t/* padding: 0.5em; */\\n\\t}\\n\\n\\t.tri-view .left-col {\\n\\t\\tflex: 1 1 40%;\\n\\t\\tmax-width: 40%;\\n\\t}\\n\\n\\t.tri-view .right-col {\\n\\t\\tflex: 1 1 40%;\\n\\t\\tmax-width: 40%;\\n\\t}\\n\\n\\t.tri-view .extra-right-col {\\n\\t\\tflex: 1 1 20%;\\n\\t\\tmax-width: 20%;\\n\\t}\\n\\n\\t/*  */\\n\\t.large-right .left-col {\\n\\t\\tflex: 1 1 20%;\\n\\t\\tmax-width: 30%;\\n\\t}\\n\\n\\t.large-right .right-col {\\n\\t\\tflex: 1 1 40%;\\n\\t\\tmax-width: 40%;\\n\\t}\\n\\n\\t.large-right .extra-right-col {\\n\\t\\tflex: 1 1 40%;\\n\\t\\tmax-width: 40%;\\n\\t}\\n\\n\\t.verses {\\n\\t\\toverflow-x: hidden;\\n\\t}\\n\\n\\t.extra-right-col .menu li {\\n\\t\\tpadding: 1em;\\n\\t\\tmargin: 1em;\\n\\t\\ttext-align: center;\\n\\t\\tborder: 1px solid #eee;\\n\\t\\tborder-radius: 6px;\\n\\t}\\n\\n\\t.cta-right {\\n\\t\\tpadding: 12px;\\n\\t\\tfont-size: 24px;\\n\\n\\t\\tcolor: #7a9a7a;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAyHC,sBAAQ,CACP,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IACR,CACA,kBAAI,CACH,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,IAAI,CAEX,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IACV,CACA,uBAAS,CACR,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IACV,CACA,uBAAS,CACR,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,GACb"}`
};
const Index$2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $selectedSegment, $$unsubscribe_selectedSegment;
  let $segments, $$unsubscribe_segments;
  let $flow, $$unsubscribe_flow;
  let $gopher, $$unsubscribe_gopher;
  $$unsubscribe_selectedSegment = subscribe(selectedSegment, (value) => $selectedSegment = value);
  $$unsubscribe_segments = subscribe(segments, (value) => $segments = value);
  $$unsubscribe_flow = subscribe(flow, (value) => $flow = value);
  $$unsubscribe_gopher = subscribe(gopher, (value) => $gopher = value);
  let { findSegmentByVerse } = $$props;
  let loadingSurah = false;
  async function fetchSurah(surah) {
    loadingSurah = true;
    segments.set([]);
    selectedSegment.set(null);
    let verse = surah;
    const s = surah.split(":")[0];
    surah = s;
    segments.set(await API.get(`/quranflow/surah/${surah}.json`));
    console.log("segments", $segments);
    loadingSurah = false;
    findSegmentByVerse(verse.split("-")[0]);
  }
  function selectSegment(segment) {
    if ($selectedSegment && $selectedSegment.id === segment.id) {
      selectedSegment.set(null);
      return;
    } else {
      selectedSegment.set(segment);
    }
  }
  if ($$props.findSegmentByVerse === void 0 && $$bindings.findSegmentByVerse && findSegmentByVerse !== void 0) $$bindings.findSegmentByVerse(findSegmentByVerse);
  $$result.css.add(css$1);
  $$unsubscribe_selectedSegment();
  $$unsubscribe_segments();
  $$unsubscribe_flow();
  $$unsubscribe_gopher();
  return `<div class="up svelte-1bw9skx">${validate_component(Nav, "Nav").$$render($$result, { fetchSurah }, {}, {})}</div> <div class="wrapper svelte-1bw9skx">${$flow ? `${$segments && !loadingSurah ? `<div class="summary svelte-1bw9skx">${each($segments, (segment) => {
    return `${validate_component(Segment, "Segment").$$render(
      $$result,
      {
        segment,
        select: () => selectSegment(segment)
      },
      {},
      {}
    )}`;
  })}</div>` : `${loadingSurah ? `${validate_component(Spinner, "Spinner").$$render($$result, {}, {}, {
    default: () => {
      return `Loading Surah...`;
    }
  })}` : ``}`}` : `${validate_component(NonFlow, "NonFlow").$$render($$result, {}, {}, {})}`}</div> ${$gopher.kind && $gopher.item ? `<div class="gopher svelte-1bw9skx">${$gopher.kind === "word" ? `${validate_component(Word, "Word").$$render($$result, { word: $gopher.item }, {}, {})}` : ``}</div>` : ``}`;
});
const css = {
  code: ".nav.svelte-detptg li.svelte-detptg{padding:10px}.wrapper.svelte-detptg.svelte-detptg{display:flex}.mini-header.svelte-detptg.svelte-detptg{max-width:350px;display:block;margin:0 auto}.left-col.svelte-detptg.svelte-detptg{flex:1 1 66%;max-width:66%;padding:3em;height:90vh;overflow-y:scroll}.right-col.svelte-detptg.svelte-detptg{flex:1 1 33%;max-width:33%;padding:0.5em;background-color:rgb(241, 255, 241)}.tri-view.svelte-detptg .left-col.svelte-detptg{flex:1 1 40%;max-width:40%}.tri-view.svelte-detptg .right-col.svelte-detptg{flex:1 1 40%;max-width:40%}.tri-view.svelte-detptg .extra-right-col.svelte-detptg{flex:1 1 20%;max-width:20%}.large-right.svelte-detptg .left-col.svelte-detptg{flex:1 1 20%;max-width:30%}.large-right.svelte-detptg .right-col.svelte-detptg{flex:1 1 40%;max-width:40%}.large-right.svelte-detptg .extra-right-col.svelte-detptg{flex:1 1 40%;max-width:40%}.verses.svelte-detptg.svelte-detptg{height:85vh;overflow-y:scroll}.extra-right-col.svelte-detptg .menu li.svelte-detptg{padding:1em;margin:1em;text-align:center;border:1px solid #eee;border-radius:6px}.cta-right.svelte-detptg.svelte-detptg{padding:12px;font-size:24px;color:#7a9a7a}.gopher.svelte-detptg.svelte-detptg{position:fixed;bottom:0;width:95vw;z-index:9999}",
  map: `{"version":3,"file":"Index.svelte","sources":["Index.svelte"],"sourcesContent":["<script>\\n\\timport { onMount } from 'svelte';\\n\\timport Api from '$lib/api/api.js';\\n\\timport Nav from '../Nav.svelte';\\n\\timport Segment from '../Segment.svelte';\\n\\timport API from '$lib/api/api.js';\\n\\timport Spinner from '../../Spinner/Spinner.svelte';\\n\\timport Playlist from '../Dig/Playlist.svelte';\\n\\timport NonFlow from './NonFlow.svelte';\\n\\timport Word from '../Mobile/Gopher/Word.svelte';\\n\\timport { gopher } from '../store';\\n\\n\\timport {\\n\\t\\tgrid,\\n\\t\\tplaylists,\\n\\t\\tselectedSegment,\\n\\t\\trightNavTab,\\n\\t\\tsegments,\\n\\t\\teditMode,\\n\\t\\tflow\\n\\t} from '$lib/components/QuranFlow/store';\\n\\timport { page } from '$app/stores';\\n\\timport { user } from '$lib/stores/user';\\n\\timport Verse from '../Verse/Verse.svelte';\\n\\timport Notes from '../Dig/Notes.svelte';\\n\\n\\tlet selectedSurah = 1;\\n\\t// Function to fetch and parse JSON from a local file\\n\\n\\t// Call the function to fetch JSON data when the component is mounted\\n\\n\\tlet loadingSurah = false;\\n\\tlet loadingSegment = false;\\n\\n\\tlet listMode = false;\\n\\tlet verses;\\n\\tlet content_playlists;\\n\\texport let findSegmentByVerse;\\n\\n\\tonMount(() => {\\n\\t\\tfetchPlaylists();\\n\\t});\\n\\n\\tasync function fetchPlaylists() {\\n\\t\\tplaylists.set(await API.get('/content_playlists.json'));\\n\\t}\\n\\n\\tfunction expandRange(rangeString) {\\n\\t\\tif (!rangeString.includes('-')) return [rangeString];\\n\\t\\tconst [start, end] = rangeString.split('-');\\n\\n\\t\\tconst [startLine, startColumn] = start.split(':').map(Number);\\n\\t\\tconst [endLine, endColumn] = end.split(':').map(Number);\\n\\n\\t\\tconst result = [];\\n\\n\\t\\tfor (let line = startLine; line <= endLine; line++) {\\n\\t\\t\\tfor (\\n\\t\\t\\t\\tlet column = line === startLine ? startColumn : 1;\\n\\t\\t\\t\\tcolumn <= (line === endLine ? endColumn : Infinity);\\n\\t\\t\\t\\tcolumn++\\n\\t\\t\\t) {\\n\\t\\t\\t\\tresult.push(\`\${line}:\${column}\`);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\tasync function fetchSurah(surah) {\\n\\t\\tloadingSurah = true;\\n\\t\\tsegments.set([]);\\n\\t\\tselectedSegment.set(null);\\n\\t\\tverses = false;\\n\\t\\tlet verse = surah;\\n\\t\\tconst s = surah.split(':')[0];\\n\\t\\tsurah = s;\\n\\t\\tselectedSurah = s;\\n\\n\\t\\tif ($flow) {\\n\\t\\t\\tsegments.set(await Api.get(\`/quranflow/surah/\${surah}.json\`));\\n\\t\\t\\tconsole.log('segments', $segments);\\n\\t\\t\\tloadingSurah = false;\\n\\n\\t\\t\\tfindSegmentByVerse(verse.split('-')[0]);\\n\\t\\t} else {\\n\\t\\t\\tloadingSurah = false;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction selectSegment(segment) {\\n\\t\\tselectedSegment.set(null);\\n\\t\\tverses = false;\\n\\t\\tif (selectedSegment.id === segment.id) {\\n\\t\\t\\treturn;\\n\\t\\t} else {\\n\\t\\t\\tselectedSegment.set(segment);\\n\\t\\t\\tloadingSegment = true;\\n\\t\\t\\tgetSegment(segment);\\n\\t\\t}\\n\\t}\\n\\n\\tselectedSegment.subscribe((s) => {\\n\\t\\tgetSegment(s);\\n\\t});\\n\\n\\tasync function getSegment(segment) {\\n\\t\\tverses = await API.get('/quran/verses/' + segment.verses + '.json');\\n\\t\\tconsole.log({ verses });\\n\\t\\tloadingSegment = false;\\n\\t}\\n\\n\\t$: displayView = $page.url.searchParams.get('view');\\n\\n\\timport { device } from '$lib/utils/device.js';\\n\\timport Desktop from '$lib/components/QuranFlow/Desktop/Index.svelte';\\n\\timport Mobile from '$lib/components/QuranFlow/Mobile/Index.svelte';\\n<\/script>\\n\\n<svelte:head>\\n\\t<link rel=\\"preconnect\\" href=\\"https://fonts.googleapis.com\\" />\\n\\t<link rel=\\"preconnect\\" href=\\"https://fonts.gstatic.com\\" crossorigin />\\n\\t<link\\n\\t\\thref=\\"https://fonts.googleapis.com/css2?family=Noto+Nastaliq+Urdu:wght@400..700&display=swap\\"\\n\\t\\trel=\\"stylesheet\\"\\n\\t/>\\n</svelte:head>\\n\\n<Nav {fetchSurah} />\\n\\n{#if $gopher.kind && $gopher.item}\\n\\t<div class=\\"gopher\\">\\n\\t\\t{#if $gopher.kind === 'word'}\\n\\t\\t\\t<Word word={$gopher.item} />\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n{#if $flow}\\n\\t<div class={'wrapper ' + $grid}>\\n\\t\\t<div class=\\"left-col\\">\\n\\t\\t\\t{#if $segments && !loadingSurah}\\n\\t\\t\\t\\t<div class=\\"summary\\">\\n\\t\\t\\t\\t\\t{#each $segments as segment}\\n\\t\\t\\t\\t\\t\\t<Segment {segment} select={() => selectSegment(segment)} />\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{:else if loadingSurah}\\n\\t\\t\\t\\t<Spinner>Loading Surah...</Spinner>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t\\t<div class=\\"right-col\\">\\n\\t\\t\\t{#if $selectedSegment}\\n\\t\\t\\t\\t{#if verses}\\n\\t\\t\\t\\t\\t<ul class=\\"verses\\">\\n\\t\\t\\t\\t\\t\\t{#each verses as verse}\\n\\t\\t\\t\\t\\t\\t\\t<Verse {verse} />\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t{/if}\\n\\n\\t\\t\\t\\t{#if loadingSegment}\\n\\t\\t\\t\\t\\t<Spinner>Loading Verses...</Spinner>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t{:else}\\n\\t\\t\\t\\t<div class=\\"cta-right\\">\\n\\t\\t\\t\\t\\tNo Selected Passage yet. Click one of the sentences on the left to show it's corresponding\\n\\t\\t\\t\\t\\tverses.\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t\\t{#if $selectedSegment && $user && $user.admin}\\n\\t\\t\\t<div class=\\"extra-right-col\\">\\n\\t\\t\\t\\t{#if $rightNavTab > 0}\\n\\t\\t\\t\\t\\t{#if $rightNavTab === 1}\\n\\t\\t\\t\\t\\t\\t<Playlist bg={'aliceblue'} />\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t{#if $rightNavTab === 2}\\n\\t\\t\\t\\t\\t\\t<Playlist bg={'aliceblue'} />\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t{#if $rightNavTab === 3}\\n\\t\\t\\t\\t\\t\\t<Playlist bg={'aliceblue'} />\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t{#if $rightNavTab === 4}\\n\\t\\t\\t\\t\\t\\t<Notes bg={'aliceblue'} />\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t<div class=\\"menu\\">\\n\\t\\t\\t\\t\\t\\t<ul class=\\"clean-list\\">\\n\\t\\t\\t\\t\\t\\t\\t<li on:click={() => rightNavTab.set(1)}>Playlists</li>\\n\\t\\t\\t\\t\\t\\t\\t<li on:click={() => rightNavTab.set(2)}>Tags</li>\\n\\t\\t\\t\\t\\t\\t\\t<li on:click={() => rightNavTab.set(3)}>Gifs</li>\\n\\t\\t\\t\\t\\t\\t\\t<li on:click={() => rightNavTab.set(4)}>Notes</li>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t</div>\\n{:else}\\n\\t<NonFlow />\\n{/if}\\n\\n<style>\\n\\t.nav li {\\n\\t\\tpadding: 10px;\\n\\t}\\n\\n\\t.nav .active {\\n\\t\\tbackground-color: #000;\\n\\t\\tcolor: #fff;\\n\\t}\\n\\t.wrapper {\\n\\t\\tdisplay: flex;\\n\\t}\\n\\n\\t.mini-header {\\n\\t\\tmax-width: 350px;\\n\\t\\tdisplay: block;\\n\\t\\tmargin: 0 auto;\\n\\t}\\n\\n\\timg {\\n\\t\\tvertical-align: middle;\\n\\t}\\n\\n\\t.left-col {\\n\\t\\tflex: 1 1 66%;\\n\\t\\tmax-width: 66%;\\n\\t\\tpadding: 3em;\\n\\t\\theight: 90vh;\\n\\t\\toverflow-y: scroll;\\n\\t}\\n\\n\\t.right-col {\\n\\t\\tflex: 1 1 33%;\\n\\t\\tmax-width: 33%;\\n\\t\\tpadding: 0.5em;\\n\\t\\tbackground-color: rgb(241, 255, 241);\\n\\t}\\n\\n\\t.extra-right-col {\\n\\t\\t/* padding: 0.5em; */\\n\\t}\\n\\n\\t.tri-view .left-col {\\n\\t\\tflex: 1 1 40%;\\n\\t\\tmax-width: 40%;\\n\\t}\\n\\n\\t.tri-view .right-col {\\n\\t\\tflex: 1 1 40%;\\n\\t\\tmax-width: 40%;\\n\\t}\\n\\n\\t.tri-view .extra-right-col {\\n\\t\\tflex: 1 1 20%;\\n\\t\\tmax-width: 20%;\\n\\t}\\n\\n\\t/*  */\\n\\t.large-right .left-col {\\n\\t\\tflex: 1 1 20%;\\n\\t\\tmax-width: 30%;\\n\\t}\\n\\n\\t.large-right .right-col {\\n\\t\\tflex: 1 1 40%;\\n\\t\\tmax-width: 40%;\\n\\t}\\n\\n\\t.large-right .extra-right-col {\\n\\t\\tflex: 1 1 40%;\\n\\t\\tmax-width: 40%;\\n\\t}\\n\\n\\t.verses {\\n\\t\\theight: 85vh;\\n\\t\\toverflow-y: scroll;\\n\\t}\\n\\n\\t.extra-right-col .menu li {\\n\\t\\tpadding: 1em;\\n\\t\\tmargin: 1em;\\n\\t\\ttext-align: center;\\n\\t\\tborder: 1px solid #eee;\\n\\t\\tborder-radius: 6px;\\n\\t}\\n\\n\\t.cta-right {\\n\\t\\tpadding: 12px;\\n\\t\\tfont-size: 24px;\\n\\n\\t\\tcolor: #7a9a7a;\\n\\t}\\n\\n\\t.gopher {\\n\\t\\tposition: fixed;\\n\\t\\tbottom: 0;\\n\\t\\twidth: 95vw;\\n\\t\\tz-index: 9999;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AA2MC,kBAAI,CAAC,gBAAG,CACP,OAAO,CAAE,IACV,CAMA,oCAAS,CACR,OAAO,CAAE,IACV,CAEA,wCAAa,CACZ,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,CAAC,CAAC,IACX,CAMA,qCAAU,CACT,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MACb,CAEA,sCAAW,CACV,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,KAAK,CACd,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACpC,CAMA,uBAAS,CAAC,uBAAU,CACnB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GACZ,CAEA,uBAAS,CAAC,wBAAW,CACpB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GACZ,CAEA,uBAAS,CAAC,8BAAiB,CAC1B,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GACZ,CAGA,0BAAY,CAAC,uBAAU,CACtB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GACZ,CAEA,0BAAY,CAAC,wBAAW,CACvB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GACZ,CAEA,0BAAY,CAAC,8BAAiB,CAC7B,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,GACZ,CAEA,mCAAQ,CACP,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MACb,CAEA,8BAAgB,CAAC,KAAK,CAAC,gBAAG,CACzB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAChB,CAEA,sCAAW,CACV,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CAEf,KAAK,CAAE,OACR,CAEA,mCAAQ,CACP,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IACV"}`
};
const Index$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  let $segments, $$unsubscribe_segments;
  let $flow, $$unsubscribe_flow;
  let $gopher, $$unsubscribe_gopher;
  let $grid, $$unsubscribe_grid;
  let $selectedSegment, $$unsubscribe_selectedSegment;
  let $user, $$unsubscribe_user;
  let $rightNavTab, $$unsubscribe_rightNavTab;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  $$unsubscribe_segments = subscribe(segments, (value) => $segments = value);
  $$unsubscribe_flow = subscribe(flow, (value) => $flow = value);
  $$unsubscribe_gopher = subscribe(gopher, (value) => $gopher = value);
  $$unsubscribe_grid = subscribe(grid, (value) => $grid = value);
  $$unsubscribe_selectedSegment = subscribe(selectedSegment, (value) => $selectedSegment = value);
  $$unsubscribe_user = subscribe(user, (value) => $user = value);
  $$unsubscribe_rightNavTab = subscribe(rightNavTab, (value) => $rightNavTab = value);
  let loadingSurah = false;
  let loadingSegment = false;
  let verses;
  let { findSegmentByVerse } = $$props;
  async function fetchSurah(surah) {
    loadingSurah = true;
    segments.set([]);
    selectedSegment.set(null);
    verses = false;
    let verse = surah;
    const s = surah.split(":")[0];
    surah = s;
    if ($flow) {
      segments.set(await API.get(`/quranflow/surah/${surah}.json`));
      console.log("segments", $segments);
      loadingSurah = false;
      findSegmentByVerse(verse.split("-")[0]);
    } else {
      loadingSurah = false;
    }
  }
  function selectSegment(segment) {
    selectedSegment.set(null);
    verses = false;
    if (selectedSegment.id === segment.id) {
      return;
    } else {
      selectedSegment.set(segment);
      loadingSegment = true;
      getSegment(segment);
    }
  }
  selectedSegment.subscribe((s) => {
    getSegment(s);
  });
  async function getSegment(segment) {
    verses = await API.get("/quran/verses/" + segment.verses + ".json");
    console.log({ verses });
    loadingSegment = false;
  }
  if ($$props.findSegmentByVerse === void 0 && $$bindings.findSegmentByVerse && findSegmentByVerse !== void 0) $$bindings.findSegmentByVerse(findSegmentByVerse);
  $$result.css.add(css);
  $page.url.searchParams.get("view");
  $$unsubscribe_page();
  $$unsubscribe_segments();
  $$unsubscribe_flow();
  $$unsubscribe_gopher();
  $$unsubscribe_grid();
  $$unsubscribe_selectedSegment();
  $$unsubscribe_user();
  $$unsubscribe_rightNavTab();
  return `${$$result.head += `<!-- HEAD_svelte-uomsi_START --><link rel="preconnect" href="https://fonts.googleapis.com"><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link href="https://fonts.googleapis.com/css2?family=Noto+Nastaliq+Urdu:wght@400..700&amp;display=swap" rel="stylesheet"><!-- HEAD_svelte-uomsi_END -->`, ""} ${validate_component(Nav$1, "Nav").$$render($$result, { fetchSurah }, {}, {})} ${$gopher.kind && $gopher.item ? `<div class="gopher svelte-detptg">${$gopher.kind === "word" ? `${validate_component(Word, "Word").$$render($$result, { word: $gopher.item }, {}, {})}` : ``}</div>` : ``} ${$flow ? `<div class="${escape(null_to_empty("wrapper " + $grid), true) + " svelte-detptg"}"><div class="left-col svelte-detptg">${$segments && !loadingSurah ? `<div class="summary">${each($segments, (segment) => {
    return `${validate_component(Segment$1, "Segment").$$render(
      $$result,
      {
        segment,
        select: () => selectSegment(segment)
      },
      {},
      {}
    )}`;
  })}</div>` : `${loadingSurah ? `${validate_component(Spinner, "Spinner").$$render($$result, {}, {}, {
    default: () => {
      return `Loading Surah...`;
    }
  })}` : ``}`}</div> <div class="right-col svelte-detptg">${$selectedSegment ? `${verses ? `<ul class="verses svelte-detptg">${each(verses, (verse) => {
    return `${validate_component(Verse, "Verse").$$render($$result, { verse }, {}, {})}`;
  })}</ul>` : ``} ${loadingSegment ? `${validate_component(Spinner, "Spinner").$$render($$result, {}, {}, {
    default: () => {
      return `Loading Verses...`;
    }
  })}` : ``}` : `<div class="cta-right svelte-detptg" data-svelte-h="svelte-1ngoqjh">No Selected Passage yet. Click one of the sentences on the left to show it&#39;s corresponding
					verses.</div>`}</div> ${$selectedSegment && $user && $user.admin ? `<div class="extra-right-col svelte-detptg">${$rightNavTab > 0 ? `${$rightNavTab === 1 ? `${validate_component(Playlist, "Playlist").$$render($$result, { bg: "aliceblue" }, {}, {})}` : ``} ${$rightNavTab === 2 ? `${validate_component(Playlist, "Playlist").$$render($$result, { bg: "aliceblue" }, {}, {})}` : ``} ${$rightNavTab === 3 ? `${validate_component(Playlist, "Playlist").$$render($$result, { bg: "aliceblue" }, {}, {})}` : ``} ${$rightNavTab === 4 ? `${validate_component(Notes, "Notes").$$render($$result, { bg: "aliceblue" }, {}, {})}` : ``}` : `<div class="menu"><ul class="clean-list"><li class="svelte-detptg" data-svelte-h="svelte-7ed24x">Playlists</li> <li class="svelte-detptg" data-svelte-h="svelte-8w1dmc">Tags</li> <li class="svelte-detptg" data-svelte-h="svelte-dojtrf">Gifs</li> <li class="svelte-detptg" data-svelte-h="svelte-13irj9i">Notes</li></ul></div>`}</div>` : ``}</div>` : `${validate_component(NonFlow$1, "NonFlow").$$render($$result, {}, {}, {})}`}`;
});
function expandRange(rangeString) {
  if (!rangeString.includes("-")) return [rangeString];
  const [start, end] = rangeString.split("-");
  const [startLine, startColumn] = start.split(":").map(Number);
  const [endLine, endColumn] = end.split(":").map(Number);
  const result = [];
  for (let line = startLine; line <= endLine; line++) {
    for (let column = line === startLine ? startColumn : 1; column <= (line === endLine ? endColumn : Infinity); column++) {
      result.push(`${line}:${column}`);
    }
  }
  return result;
}
const Index = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $selectedSegment, $$unsubscribe_selectedSegment;
  let $segments, $$unsubscribe_segments;
  let $$unsubscribe_translation;
  let $device, $$unsubscribe_device;
  $$unsubscribe_selectedSegment = subscribe(selectedSegment, (value) => $selectedSegment = value);
  $$unsubscribe_segments = subscribe(segments, (value) => $segments = value);
  $$unsubscribe_translation = subscribe(translation, (value) => value);
  $$unsubscribe_device = subscribe(device, (value) => $device = value);
  let verses;
  function findSegmentByVerse(verse) {
    const list = $segments.map((s) => {
      return { id: s.id, verses: expandRange(s.verses) };
    });
    const found = list.find((s) => s.verses.includes(verse));
    console.log({ found });
    console.log($segments);
    try {
      selectedSegment.set($segments.find((s) => s.id === found.id));
      selectSegment($selectedSegment);
    } catch (error) {
    }
  }
  function selectSegment(segment) {
    selectedSegment.set(null);
    verses = false;
    if (selectedSegment.id === segment.id) {
      return;
    } else {
      selectedSegment.set(segment);
      getSegment(segment);
    }
  }
  async function getSegment(segment) {
    if (!segment && !segment.verses) return;
    verses = await API.get("/quran/verses/" + segment.verses + ".json");
    console.log({ verses });
  }
  $$unsubscribe_selectedSegment();
  $$unsubscribe_segments();
  $$unsubscribe_translation();
  $$unsubscribe_device();
  return `${$$result.head += `<!-- HEAD_svelte-uomsi_START --><link rel="preconnect" href="https://fonts.googleapis.com"><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link href="https://fonts.googleapis.com/css2?family=Noto+Nastaliq+Urdu:wght@400..700&amp;display=swap" rel="stylesheet"><!-- HEAD_svelte-uomsi_END -->`, ""} ${$device === "mobile" ? `${validate_component(Index$2, "Mobile").$$render($$result, { findSegmentByVerse }, {}, {})}` : `${validate_component(Index$1, "Desktop").$$render($$result, { findSegmentByVerse }, {}, {})}`}`;
});
export {
  Index as I
};
