import { c as create_ssr_component, a as subscribe } from "./ssr.js";
import "./api.js";
/* empty css                                     */
/* empty css                                          */
import { p as page } from "./stores.js";
const css = {
  code: ".wrapper.svelte-12j73fo.svelte-12j73fo{padding:2em;max-width:550px;margin:0 auto}.guideSelected.svelte-12j73fo.svelte-12j73fo{color:#ca56ff;border-bottom:1px dashed;padding:0}.oneByOne.svelte-12j73fo.svelte-12j73fo{max-width:350px;margin:0 auto;display:block}.oneByOne.svelte-12j73fo li.svelte-12j73fo{list-style:none}.verse.svelte-12j73fo.svelte-12j73fo{font-family:'me_quran2' !important;line-height:3.5em;font-size:32px;direction:rtl;text-align:center}.verse.svelte-12j73fo .wordBlock{display:inline-block;margin:0;padding:0;font-family:'me_quran2' !important}.verse.svelte-12j73fo .sliced{display:inline-block;margin:0;padding:0;cursor:pointer;font-size:inherit;line-height:inherit;font-family:'me_quran2' !important}.verse.svelte-12j73fo .selected.sliced{color:#ca56ff;border-bottom:1px dashed;height:87px;padding:0}.verse.svelte-12j73fo .sliced span{display:initial}.verse.svelte-12j73fo .sliced span[id='char_614']{display:inherit}.verse.svelte-12j73fo .sliced.graded{padding:0px 10px !important;border-radius:10px;margin:0 -5px}.verse.svelte-12j73fo .sliced.incorrect{background:#ffdcdc}.verse.svelte-12j73fo .sliced.correct{background:#daffa2}.verse.svelte-12j73fo .sliced.graded + span{z-index:999999;position:relative;right:-4px}.verse.svelte-12j73fo .selectedGradedBlock{border-bottom:6px dashed purple !important}@media only screen and (max-width: 600px){.wrapper.svelte-12j73fo.svelte-12j73fo{padding:2em;max-width:90%;margin:0 auto}.verse.svelte-12j73fo.svelte-12j73fo{font-family:'me_quran2' !important;line-height:2.4em;font-size:45px;direction:rtl;text-align:right}.oneByOne.svelte-12j73fo.svelte-12j73fo{max-width:90%;margin:0 auto;display:block;font-size:26px}.oneByOne.svelte-12j73fo button,.oneByOne.svelte-12j73fo button.svelte-12j73fo{font-size:26px}.ref-header.svelte-12j73fo.svelte-12j73fo{font-size:44px}.progress.svelte-12j73fo.svelte-12j73fo{height:2rem}.percentage.svelte-12j73fo.svelte-12j73fo{font-size:44px}.next-random.svelte-12j73fo.svelte-12j73fo{font-size:24px}}",
  map: `{"version":3,"file":"Index.svelte","sources":["Index.svelte"],"sourcesContent":["<script>\\n\\timport API from '$lib/api/api';\\n\\timport { afterUpdate, onMount } from 'svelte';\\n\\timport Question from './Question.svelte';\\n\\timport VerseSliced from '$lib/components/Quran/Verses/Verse/VerseSliced.svelte';\\n\\n\\timport { page } from '$app/stores';\\n\\n\\t// Access the query object from the $page store\\n\\n\\t// Access specific query parameters\\n\\tconst verbs = $page.url.searchParams.get('verbs');\\n\\n\\tlet blocks = null;\\n\\texport let verseRef = null;\\n\\tlet verse = null;\\n\\tlet selectedSlice = null;\\n\\tlet verseHTML;\\n\\tlet refreshed = 0;\\n\\n\\tlet showNextButton = false;\\n\\tlet showSubmitButton = false;\\n\\tlet fakeLoad = false;\\n\\n\\tlet questionIndex = 0;\\n\\tlet oneByOne = true;\\n\\n\\tlet progressBarPercentage = 0;\\n\\tlet loadingVerse = false;\\n\\n\\tonMount(async () => {\\n\\t\\tnextVerse();\\n\\t});\\n\\n\\tasync function nextVerse(randomize = false) {\\n\\t\\ttry {\\n\\t\\t\\tloadingVerse = true;\\n\\t\\t\\tlet res;\\n\\n\\t\\t\\tif (randomize || !verseRef) {\\n\\t\\t\\t\\tres = await API.get(\`/quran/test.json\`);\\n\\t\\t\\t} else if (verseRef) {\\n\\t\\t\\t\\tlet query = '?';\\n\\t\\t\\t\\tif (verbs) {\\n\\t\\t\\t\\t\\tquery += 'verbs=' + verbs;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tres = await API.get(\`/quran/test/\${verseRef + query}.json\`);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tloadingVerse = false;\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tblocks = res.blocks;\\n\\t\\t\\tconsole.log({ blocks });\\n\\t\\t\\tverse = res.verse;\\n\\n\\t\\t\\trefreshed = refreshed + 1;\\n\\t\\t\\tshowingGraded = false;\\n\\t\\t\\tloadingVerse = false;\\n\\t\\t\\tselectedSlice = null;\\n\\t\\t\\tquestionIndex = 0;\\n\\n\\t\\t\\twhile (blocks[questionIndex] && blocks[questionIndex].questions.length === 0) {\\n\\t\\t\\t\\tquestionIndex += 1;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!blocks[questionIndex] || !blocks[questionIndex].questions) {\\n\\t\\t\\t\\tnextVerse(randomize);\\n\\t\\t\\t}\\n\\t\\t} catch (error) {\\n\\t\\t\\t// Code to handle the exception\\n\\t\\t\\tconsole.log('An error occurred:', error.message);\\n\\t\\t\\tnextVerse(randomize);\\n\\t\\t}\\n\\t}\\n\\n\\tafterUpdate(() => {\\n\\t\\tsanitizeVerse();\\n\\t});\\n\\n\\tfunction sanitizeVerse() {\\n\\t\\tconst spans = document.querySelectorAll('.verse span');\\n\\t\\tconsole.log('starting', spans);\\n\\t\\tspans.forEach(function (span) {\\n\\t\\t\\tconsole.log({ span });\\n\\t\\t\\t// Check if the content of the span includes a specific text\\n\\t\\t\\tif (span.textContent.includes('ï»´')) {\\n\\t\\t\\t\\t// span.style.color = 'red';\\n\\t\\t\\t\\tspan.style.display = 'inherit';\\n\\t\\t\\t\\t// Add more styles as needed\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\tafterUpdate(() => {\\n\\t\\tupdateSelectedClass();\\n\\t});\\n\\n\\tfunction updateSelectedClass() {\\n\\t\\tif (verseHTML) {\\n\\t\\t\\tconst words = verseHTML.getElementsByClassName('sliced');\\n\\t\\t\\tfor (let i = 0; i < words.length; i++) {\\n\\t\\t\\t\\tconst word = words[i];\\n\\t\\t\\t\\tconst isSliced = word.classList.contains('sliced');\\n\\t\\t\\t\\tconst isSelected = i === selectedSlice;\\n\\t\\t\\t\\tword.classList.toggle('selected', isSelected && isSliced);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t$: selectedSlice = blocks ? (blocks[questionIndex] ? blocks[questionIndex].sliceIndex : -1) : -1;\\n\\t$: console.log({ selectedSlice });\\n\\n\\t$: {\\n\\t\\tif (\\n\\t\\t\\tblocks &&\\n\\t\\t\\tblocks.every((block) => block.questions.every((question) => question.done === true))\\n\\t\\t) {\\n\\t\\t\\tshowGrading();\\n\\t\\t}\\n\\t}\\n\\n\\tlet showingGraded = false;\\n\\tlet selectedGradedBlockIndex = null;\\n\\n\\tfunction showGrading() {\\n\\t\\tselectedSlice = null;\\n\\t\\t// console.log('show grding');\\n\\n\\t\\tif (verseHTML) {\\n\\t\\t\\tconst words = verseHTML.getElementsByClassName('sliced');\\n\\t\\t\\tfor (let i = 0; i < words.length; i++) {\\n\\t\\t\\t\\tconst word = words[i];\\n\\t\\t\\t\\tconst isSliced = word.classList.contains('sliced');\\n\\t\\t\\t\\t// const slice = blocks.find(b => b.question.fin)\\n\\t\\t\\t\\tif (blocks.find((b) => b.sliceIndex === i).questions.length > 0) {\\n\\t\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\t\\tblocks\\n\\t\\t\\t\\t\\t\\t\\t.find((b) => b.sliceIndex === i)\\n\\t\\t\\t\\t\\t\\t\\t.questions.every((question) => question.correct === 1)\\n\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\tword.classList.toggle('correct', isSliced);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tword.classList.toggle('incorrect', isSliced);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tword.classList.toggle('graded', isSliced);\\n\\t\\t\\t\\t// const word = words[i];\\n\\t\\t\\t\\t// const isSliced = word.classList.contains('sliced');\\n\\t\\t\\t\\t// const isSelected = i === selectedSlice;\\n\\t\\t\\t\\t// word.classList.toggle('selected', isSelected && isSliced);\\n\\t\\t\\t\\t// const slice = blocks.find(b => b.question.fin)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tshowingGraded = true;\\n\\n\\t\\t// Count of all questions\\n\\t\\tconst totalQuestions = blocks.reduce((count, block) => count + block.questions.length, 0);\\n\\n\\t\\t// Count of questions where correct === 1\\n\\t\\tconst correctQuestions = blocks.reduce((count, block) => {\\n\\t\\t\\treturn count + block.questions.filter((question) => question.correct === 1).length;\\n\\t\\t}, 0);\\n\\n\\t\\tprogressBarPercentage = parseFloat(\\n\\t\\t\\t(parseFloat(correctQuestions, 10) * 100) / parseFloat(totalQuestions, 10)\\n\\t\\t);\\n\\n\\t\\t// console.log({ progressBarPercentage });\\n\\t\\t// for (let block of blocks) {\\n\\t\\t// }\\n\\t}\\n\\n\\tfunction handleClick(event) {\\n\\t\\tconst gradedElement = event.target.closest('.graded');\\n\\n\\t\\t// gradedElement.classList.toggle('selectedGradedBlock', true);\\n\\t\\tif (showingGraded && gradedElement) {\\n\\t\\t\\t// Log information to the console or perform actions\\n\\t\\t\\t// console.log('Clicked on a graded block:', gradedElement);\\n\\t\\t\\tif (verseHTML) {\\n\\t\\t\\t\\tconst words = verseHTML.getElementsByClassName('sliced');\\n\\t\\t\\t\\tconst index = Array.from(words).indexOf(gradedElement);\\n\\t\\t\\t\\tconsole.log({ index });\\n\\t\\t\\t\\tselectedGradedBlockIndex = index;\\n\\t\\t\\t\\tconsole.log('clicked', blocks[index]);\\n\\n\\t\\t\\t\\tfor (let i = 0; i < words.length; i++) {\\n\\t\\t\\t\\t\\tconst word = words[i];\\n\\t\\t\\t\\t\\tif (i !== selectedGradedBlockIndex) {\\n\\t\\t\\t\\t\\t\\tword.classList.toggle('selectedGradedBlock', false);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tword.classList.toggle('selectedGradedBlock', true);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n<\/script>\\n\\n<!-- svelte-ignore a11y-click-events-have-key-events -->\\n<div class=\\"wrapper\\" on:click={handleClick}>\\n\\t<!-- <h1>{selectedSlice}</h1> -->\\n\\n\\t<!-- svelte-ignore empty-block -->\\n\\t{#if loadingVerse}\\n\\t\\t<div class=\\"jumbotron\\">\\n\\t\\t\\t<h1>Loading Quiz...</h1>\\n\\t\\t</div>\\n\\t{:else}\\n\\t\\t{#if verse && verse.folder}\\n\\t\\t\\t<div class=\\"text-center ref-header\\">\\n\\t\\t\\t\\t{verse.ref}\\n\\t\\t\\t\\t{' '}\\n\\t\\t\\t\\t<span class=\\"btn btn-info\\" on:click={() => nextVerse(true)}\\n\\t\\t\\t\\t\\t><i class=\\"fa fa-refresh\\" /></span\\n\\t\\t\\t\\t>\\n\\t\\t\\t</div>\\n\\t\\t\\t{#if verse.folder.finale}\\n\\t\\t\\t\\t<div class=\\"verse\\" bind:this={verseHTML}>{@html verse.folder.finale}</div>\\n\\t\\t\\t{:else}\\n\\t\\t\\t\\t<div class=\\"verse\\" bind:this={verseHTML}>{@html verse.folder.iraab_v2}</div>\\n\\t\\t\\t{/if}\\n\\t\\t{/if}\\n\\n\\t\\t{#if blocks}\\n\\t\\t\\t<!-- svelte-ignore empty-block -->\\n\\n\\t\\t\\t{#if oneByOne}\\n\\t\\t\\t\\t<div class=\\"oneByOne\\">\\n\\t\\t\\t\\t\\t{#if fakeLoad}\\n\\t\\t\\t\\t\\t\\t<h3>Loading...</h3>\\n\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t{#if showingGraded}\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<br />\\n\\t\\t\\t\\t\\t\\t\\t\\tClick each <span class=\\"selectedGradedBlock\\">word</span> above to see your graded\\n\\t\\t\\t\\t\\t\\t\\t\\tblocks.\\n\\t\\t\\t\\t\\t\\t\\t\\t<br /><br />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tFor the <span class=\\"guideSelected\\">highlighted</span> portion, select each\\n\\t\\t\\t\\t\\t\\t\\t\\tcharacteristic\\n\\t\\t\\t\\t\\t\\t\\t\\t<br /><br />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{/if}\\n\\n\\t\\t\\t\\t\\t\\t{#each selectedGradedBlockIndex !== null ? blocks[selectedGradedBlockIndex].questions : blocks[questionIndex].questions as question}\\n\\t\\t\\t\\t\\t\\t\\t{#key question}\\n\\t\\t\\t\\t\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Question\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{question}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{refreshed}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{showNextButton}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{showingGraded}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdone={(payload, correct, chosenOption) => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tquestion.done = true;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tquestion.correct = correct;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tquestion.chosenOption = chosenOption;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tconsole.log({ question });\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tconsole.log({ blocks });\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// console.log(blocks[questionIndex]);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tblocks[questionIndex].questions.every((question) => question.done === true)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (!blocks[questionIndex + 1]) return;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetTimeout(function () {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tshowSubmitButton = true;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// showNextButton = true;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// questionIndex += 1;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// while (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// \\tblocks[questionIndex] &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// \\tblocks[questionIndex].questions.length === 0\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// \\tquestionIndex += 1;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}, 0);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\n\\t\\t\\t\\t\\t\\t\\t{/key}\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t<br />\\n\\t\\t\\t\\t\\t\\t{#if showSubmitButton}\\n\\t\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"btn btn-primary\\"\\n\\t\\t\\t\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tshowNextButton = true;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tshowSubmitButton = false;\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\tSubmit\\n\\t\\t\\t\\t\\t\\t\\t\\t<br />\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t{#if showNextButton}\\n\\t\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"btn btn-primary\\"\\n\\t\\t\\t\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tshowNextButton = false;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tshowSubmitButton = false;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfakeLoad = true;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tquestionIndex += 1;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\twhile (blocks[questionIndex] && blocks[questionIndex].questions.length === 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tquestionIndex += 1;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsetTimeout(function () {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfakeLoad = false;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}, 400);\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\tNext Question\\n\\t\\t\\t\\t\\t\\t\\t\\t<br />\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{:else}\\n\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t{#each blocks as block}\\n\\t\\t\\t\\t\\t\\t{#each block as question}\\n\\t\\t\\t\\t\\t\\t\\t<li on:mouseenter={() => (selectedSlice = question.sliceIndex)}>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Question\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{question}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{refreshed}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{showingGraded}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdone={(payload) => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tquestion.done = true;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tconsole.log({ question });\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tconsole.log({ blocks });\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t{/if}\\n\\n\\t\\t\\t{#if showingGraded}\\n\\t\\t\\t\\t<div class=\\"progress\\">\\n\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\tclass=\\"progress-bar\\"\\n\\t\\t\\t\\t\\t\\trole=\\"progressbar\\"\\n\\t\\t\\t\\t\\t\\taria-valuemin=\\"0\\"\\n\\t\\t\\t\\t\\t\\taria-valuemax={progressBarPercentage}\\n\\t\\t\\t\\t\\t\\tstyle=\\"width:{progressBarPercentage}%\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<p class=\\"percentage text-center\\">{Math.round(progressBarPercentage)}%</p>\\n\\t\\t\\t\\t<hr />\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\tclass=\\"btn btn-primary btn-lg next-random\\"\\n\\t\\t\\t\\t\\tstyle=\\"display:block;\\"\\n\\t\\t\\t\\t\\ton:click={() => nextVerse(true)}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\tNext Random Verse\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t{/if}\\n\\t{/if}\\n</div>\\n\\n<style>\\n\\t.wrapper {\\n\\t\\tpadding: 2em;\\n\\t\\tmax-width: 550px;\\n\\t\\tmargin: 0 auto;\\n\\t}\\n\\n\\t.guideSelected {\\n\\t\\tcolor: #ca56ff;\\n\\t\\tborder-bottom: 1px dashed;\\n\\t\\tpadding: 0;\\n\\t}\\n\\n\\t.oneByOne {\\n\\t\\tmax-width: 350px;\\n\\t\\tmargin: 0 auto;\\n\\t\\tdisplay: block;\\n\\t}\\n\\n\\t.oneByOne li {\\n\\t\\tlist-style: none;\\n\\t}\\n\\n\\t.verse {\\n\\t\\tfont-family: 'me_quran2' !important;\\n\\t\\tline-height: 3.5em;\\n\\t\\tfont-size: 32px;\\n\\t\\tdirection: rtl;\\n\\t\\ttext-align: center;\\n\\t}\\n\\n\\t.verse :global(.wordBlock) {\\n\\t\\tdisplay: inline-block;\\n\\t\\tmargin: 0;\\n\\t\\tpadding: 0;\\n\\t\\tfont-family: 'me_quran2' !important;\\n\\t}\\n\\n\\t.verse :global(.sliced) {\\n\\t\\tdisplay: inline-block;\\n\\t\\tmargin: 0;\\n\\t\\tpadding: 0;\\n\\t\\tcursor: pointer;\\n\\t\\tfont-size: inherit;\\n\\t\\tline-height: inherit;\\n\\t\\tfont-family: 'me_quran2' !important;\\n\\t}\\n\\n\\t.verse :global(.selected.sliced) {\\n\\t\\tcolor: #ca56ff;\\n\\t\\tborder-bottom: 1px dashed;\\n\\t\\theight: 87px;\\n\\t\\tpadding: 0;\\n\\t}\\n\\t.verse :global(.sliced span) {\\n\\t\\tdisplay: initial;\\n\\t}\\n\\n\\t.verse :global(.sliced span[id='char_614']) {\\n\\t\\tdisplay: inherit;\\n\\t}\\n\\t.verse :global(.sliced.graded) {\\n\\t\\tpadding: 0px 10px !important;\\n\\t\\tborder-radius: 10px;\\n\\t\\tmargin: 0 -5px;\\n\\t}\\n\\n\\t.verse :global(.sliced.incorrect) {\\n\\t\\tbackground: #ffdcdc;\\n\\t}\\n\\n\\t.verse :global(.sliced.correct) {\\n\\t\\tbackground: #daffa2;\\n\\t}\\n\\n\\t.verse :global(.sliced.graded + span) {\\n\\t\\tz-index: 999999;\\n\\t\\tposition: relative;\\n\\t\\tright: -4px;\\n\\t}\\n\\n\\t.verse :global(.selectedGradedBlock) {\\n\\t\\tborder-bottom: 6px dashed purple !important;\\n\\t}\\n\\n\\t/* .verse :global(.harf + span + .graded) {\\n\\t\\tpadding-right: 0 !important;\\n\\t\\tmargin-right: -14px !important;\\n\\t} */\\n\\n\\t@media only screen and (max-width: 600px) {\\n\\t\\t.wrapper {\\n\\t\\t\\tpadding: 2em;\\n\\t\\t\\tmax-width: 90%;\\n\\t\\t\\tmargin: 0 auto;\\n\\t\\t}\\n\\n\\t\\t.verse {\\n\\t\\t\\tfont-family: 'me_quran2' !important;\\n\\t\\t\\tline-height: 2.4em;\\n\\t\\t\\tfont-size: 45px;\\n\\t\\t\\tdirection: rtl;\\n\\t\\t\\ttext-align: right;\\n\\t\\t}\\n\\n\\t\\t.oneByOne {\\n\\t\\t\\tmax-width: 90%;\\n\\t\\t\\tmargin: 0 auto;\\n\\t\\t\\tdisplay: block;\\n\\t\\t\\tfont-size: 26px;\\n\\t\\t}\\n\\n\\t\\t.oneByOne :global(button),\\n\\t\\t.oneByOne button {\\n\\t\\t\\tfont-size: 26px;\\n\\t\\t}\\n\\n\\t\\t.ref-header {\\n\\t\\t\\tfont-size: 44px;\\n\\t\\t}\\n\\n\\t\\t.progress {\\n\\t\\t\\theight: 2rem;\\n\\t\\t}\\n\\n\\t\\t.percentage {\\n\\t\\t\\tfont-size: 44px;\\n\\t\\t}\\n\\n\\t\\t.next-random {\\n\\t\\t\\tfont-size: 24px;\\n\\t\\t}\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AA6WC,sCAAS,CACR,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IACX,CAEA,4CAAe,CACd,KAAK,CAAE,OAAO,CACd,aAAa,CAAE,GAAG,CAAC,MAAM,CACzB,OAAO,CAAE,CACV,CAEA,uCAAU,CACT,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,KACV,CAEA,wBAAS,CAAC,iBAAG,CACZ,UAAU,CAAE,IACb,CAEA,oCAAO,CACN,WAAW,CAAE,WAAW,CAAC,UAAU,CACnC,WAAW,CAAE,KAAK,CAClB,SAAS,CAAE,IAAI,CACf,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,MACb,CAEA,qBAAM,CAAS,UAAY,CAC1B,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,WAAW,CAAE,WAAW,CAAC,UAC1B,CAEA,qBAAM,CAAS,OAAS,CACvB,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,OAAO,CACf,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,OAAO,CACpB,WAAW,CAAE,WAAW,CAAC,UAC1B,CAEA,qBAAM,CAAS,gBAAkB,CAChC,KAAK,CAAE,OAAO,CACd,aAAa,CAAE,GAAG,CAAC,MAAM,CACzB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CACV,CACA,qBAAM,CAAS,YAAc,CAC5B,OAAO,CAAE,OACV,CAEA,qBAAM,CAAS,2BAA6B,CAC3C,OAAO,CAAE,OACV,CACA,qBAAM,CAAS,cAAgB,CAC9B,OAAO,CAAE,GAAG,CAAC,IAAI,CAAC,UAAU,CAC5B,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,CAAC,CAAC,IACX,CAEA,qBAAM,CAAS,iBAAmB,CACjC,UAAU,CAAE,OACb,CAEA,qBAAM,CAAS,eAAiB,CAC/B,UAAU,CAAE,OACb,CAEA,qBAAM,CAAS,qBAAuB,CACrC,OAAO,CAAE,MAAM,CACf,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IACR,CAEA,qBAAM,CAAS,oBAAsB,CACpC,aAAa,CAAE,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,UAClC,CAOA,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACzC,sCAAS,CACR,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,GAAG,CACd,MAAM,CAAE,CAAC,CAAC,IACX,CAEA,oCAAO,CACN,WAAW,CAAE,WAAW,CAAC,UAAU,CACnC,WAAW,CAAE,KAAK,CAClB,SAAS,CAAE,IAAI,CACf,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,KACb,CAEA,uCAAU,CACT,SAAS,CAAE,GAAG,CACd,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,IACZ,CAEA,wBAAS,CAAS,MAAO,CACzB,wBAAS,CAAC,qBAAO,CAChB,SAAS,CAAE,IACZ,CAEA,yCAAY,CACX,SAAS,CAAE,IACZ,CAEA,uCAAU,CACT,MAAM,CAAE,IACT,CAEA,yCAAY,CACX,SAAS,CAAE,IACZ,CAEA,0CAAa,CACZ,SAAS,CAAE,IACZ,CACD"}`
};
const Index = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  $page.url.searchParams.get("verbs");
  let { verseRef = null } = $$props;
  let selectedSlice = null;
  if ($$props.verseRef === void 0 && $$bindings.verseRef && verseRef !== void 0) $$bindings.verseRef(verseRef);
  $$result.css.add(css);
  selectedSlice = -1;
  {
    console.log({ selectedSlice });
  }
  $$unsubscribe_page();
  return ` <div class="wrapper svelte-12j73fo">  ${`${``} ${``}`} </div>`;
});
export {
  Index as I
};
