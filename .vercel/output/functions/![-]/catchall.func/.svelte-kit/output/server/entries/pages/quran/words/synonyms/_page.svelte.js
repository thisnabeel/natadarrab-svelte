import { c as create_ssr_component, a as subscribe, d as escape, v as validate_component, e as each } from "../../../../../chunks/ssr.js";
import "../../../../../chunks/api.js";
import { u as user } from "../../../../../chunks/user.js";
const css$2 = {
  code: ".top-nav.svelte-1epg30x.svelte-1epg30x{padding:16px 16px 16px 40px;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between;background-color:rgb(255, 255, 255);border-bottom:1px solid rgb(231, 232, 234);border-top-color:rgb(231, 232, 234);border-right-color:rgb(231, 232, 234);border-left-color:rgb(231, 232, 234)}.top-nav.svelte-1epg30x .head.svelte-1epg30x{height:48px;display:flex;-webkit-box-align:center;align-items:center;font-weight:700;font-size:1.5rem;line-height:1.4;font-family:'Avenir Next', sans-serif;margin-right:16px;cursor:pointer}.arrow-space.svelte-1epg30x.svelte-1epg30x{padding-left:4px;padding-right:4px}.hori-divider.svelte-1epg30x.svelte-1epg30x{padding-left:16px;margin-top:-16px;margin-bottom:-16px;height:74px;border-right:1px solid rgb(231, 232, 234);border-top-color:rgb(231, 232, 234);border-bottom-color:rgb(231, 232, 234);border-left-color:rgb(231, 232, 234)}",
  map: `{"version":3,"file":"Nav.svelte","sources":["Nav.svelte"],"sourcesContent":["<script>\\n\\texport let toggleView;\\n\\timport { user } from '$lib/stores/user';\\n<\/script>\\n\\n<div class=\\"top-nav\\">\\n\\t<div class=\\"head\\">\\n\\t\\t<span>Synonyms</span>\\n\\t\\t<!-- <div class=\\"arrow-space\\"></div>\\n            <div class=\\"left-arrow arrow\\"><div class=\\"\\"><svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"20px\\" height=\\"20px\\" fill=\\"#626872\\" viewBox=\\"0 0 256 256\\"><path d=\\"M165.66,202.34a8,8,0,0,1-11.32,11.32l-80-80a8,8,0,0,1,0-11.32l80-80a8,8,0,0,1,11.32,11.32L91.31,128Z\\"></path></svg></div></div>\\n            <div class=\\"right-arrow arrow\\"><div class=\\"\\"><svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"20px\\" height=\\"20px\\" fill=\\"#626872\\" viewBox=\\"0 0 256 256\\"><path d=\\"M181.66,133.66l-80,80a8,8,0,0,1-11.32-11.32L164.69,128,90.34,53.66a8,8,0,0,1,11.32-11.32l80,80A8,8,0,0,1,181.66,133.66Z\\"></path></svg></div></div> -->\\n\\t\\t<div class=\\"arrow-space\\" />\\n\\n\\t\\t{#if $user && $user.admin}\\n\\t\\t\\t<div class=\\"btn btn-warning\\" on:click={toggleView}>Segments</div>\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<div class=\\"hori-divider\\" />\\n</div>\\n\\n<style>\\n\\t.top-nav {\\n\\t\\tpadding: 16px 16px 16px 40px;\\n\\t\\tdisplay: flex;\\n\\t\\t-webkit-box-align: center;\\n\\t\\talign-items: center;\\n\\t\\t-webkit-box-pack: justify;\\n\\t\\tjustify-content: space-between;\\n\\t\\tbackground-color: rgb(255, 255, 255);\\n\\t\\tborder-bottom: 1px solid rgb(231, 232, 234);\\n\\t\\tborder-top-color: rgb(231, 232, 234);\\n\\t\\tborder-right-color: rgb(231, 232, 234);\\n\\t\\tborder-left-color: rgb(231, 232, 234);\\n\\t}\\n\\n\\t.top-nav .head {\\n\\t\\theight: 48px;\\n\\t\\tdisplay: flex;\\n\\t\\t-webkit-box-align: center;\\n\\t\\talign-items: center;\\n\\t\\tfont-weight: 700;\\n\\t\\tfont-size: 1.5rem;\\n\\t\\tline-height: 1.4;\\n\\t\\tfont-family: 'Avenir Next', sans-serif;\\n\\t\\tmargin-right: 16px;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\n\\t.left-arrow {\\n\\t\\tcursor: pointer;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tborder: 1px solid transparent;\\n\\t\\tborder-radius: 4px;\\n\\t\\tpadding: 4px;\\n\\t}\\n\\n\\t.left-arrow > div {\\n\\t\\tline-height: 0;\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t}\\n\\n\\t.arrow-space {\\n\\t\\tpadding-left: 4px;\\n\\t\\tpadding-right: 4px;\\n\\t}\\n\\n\\t.right-arrow {\\n\\t\\tcursor: pointer;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tborder: 1px solid transparent;\\n\\t\\tborder-radius: 4px;\\n\\t\\tpadding: 4px;\\n\\t}\\n\\n\\t.right-arrow > div {\\n\\t\\tline-height: 0;\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t}\\n\\n\\t.hori-divider {\\n\\t\\tpadding-left: 16px;\\n\\t\\tmargin-top: -16px;\\n\\t\\tmargin-bottom: -16px;\\n\\t\\theight: 74px;\\n\\t\\tborder-right: 1px solid rgb(231, 232, 234);\\n\\t\\tborder-top-color: rgb(231, 232, 234);\\n\\t\\tborder-bottom-color: rgb(231, 232, 234);\\n\\t\\tborder-left-color: rgb(231, 232, 234);\\n\\t}\\n\\n\\t.arrow:hover {\\n\\t\\tbackground-color: rgb(250, 250, 250);\\n\\t\\tborder-color: rgb(231, 232, 234);\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAsBC,sCAAS,CACR,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC5B,OAAO,CAAE,IAAI,CACb,iBAAiB,CAAE,MAAM,CACzB,WAAW,CAAE,MAAM,CACnB,gBAAgB,CAAE,OAAO,CACzB,eAAe,CAAE,aAAa,CAC9B,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC3C,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,kBAAkB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACtC,iBAAiB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACrC,CAEA,uBAAQ,CAAC,oBAAM,CACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,iBAAiB,CAAE,MAAM,CACzB,WAAW,CAAE,MAAM,CACnB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,aAAa,CAAC,CAAC,UAAU,CACtC,YAAY,CAAE,IAAI,CAClB,MAAM,CAAE,OACT,CAgBA,0CAAa,CACZ,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,GAChB,CAgBA,2CAAc,CACb,YAAY,CAAE,IAAI,CAClB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,KAAK,CACpB,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,mBAAmB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACvC,iBAAiB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACrC"}`
};
const Nav = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $user, $$unsubscribe_user;
  $$unsubscribe_user = subscribe(user, (value) => $user = value);
  let { toggleView } = $$props;
  if ($$props.toggleView === void 0 && $$bindings.toggleView && toggleView !== void 0) $$bindings.toggleView(toggleView);
  $$result.css.add(css$2);
  $$unsubscribe_user();
  return `<div class="top-nav svelte-1epg30x"><div class="head svelte-1epg30x"><span data-svelte-h="svelte-f8rlek">Synonyms</span>  <div class="arrow-space svelte-1epg30x"></div> ${$user && $user.admin ? `<div class="btn btn-warning" data-svelte-h="svelte-19phwo9">Segments</div>` : ``}</div> <div class="hori-divider svelte-1epg30x"></div> </div>`;
});
const css$1 = {
  code: ".synonym.svelte-31lwxl.svelte-31lwxl{font-size:18px;margin:8px}.selected.svelte-31lwxl.svelte-31lwxl{font-weight:bold;font-size:24px}.details.svelte-31lwxl.svelte-31lwxl{background-color:#eee;padding:14px}.adding-word.svelte-31lwxl.svelte-31lwxl{max-width:145px;position:relative}.words.svelte-31lwxl>div.svelte-31lwxl{display:inline-block}.search-results.svelte-31lwxl.svelte-31lwxl{position:absolute;background:#fff;width:100%;list-style:none;overflow-y:scroll;height:200px}.search-results.svelte-31lwxl li.svelte-31lwxl{padding:10px}.search-results.svelte-31lwxl li.svelte-31lwxl:hover{background-color:#eee}",
  map: `{"version":3,"file":"Show.svelte","sources":["Show.svelte"],"sourcesContent":["<script>\\n\\timport API from '$lib/api/api';\\n\\timport convertRomanToArabic from '$lib/functions/eng_roots_to_arabic';\\n\\n\\texport let synonym;\\n\\n\\tlet show = false;\\n\\tlet addingWord = false;\\n\\tlet rootWords = [];\\n\\tlet searchRoots = '';\\n\\n\\tasync function loadSynonym() {\\n\\t\\tshow = !show;\\n\\t\\t// API\\n\\t}\\n\\n\\tfunction addWord() {\\n\\t\\taddingWord = true;\\n\\t}\\n\\n\\tasync function findWords() {\\n\\t\\tlet root = convertRomanToArabic(searchRoots);\\n\\t\\tconsole.log({ root });\\n\\n\\t\\trootWords = await API.post(\`/qf/find_root_words.json\`, {\\n\\t\\t\\troot: root\\n\\t\\t});\\n\\t\\tconsole.log({ rootWords });\\n\\t}\\n\\n\\tasync function stampWord(word, wordType) {\\n\\t\\tconsole.log({ word });\\n\\t\\taddingWord = false;\\n\\t}\\n<\/script>\\n\\n<div class=\\"synonym\\">\\n\\t<!-- svelte-ignore a11y-click-events-have-key-events -->\\n\\t<div\\n\\t\\tclass=\\"title\\"\\n\\t\\tclass:selected={show}\\n\\t\\ton:click={() => {\\n\\t\\t\\tloadSynonym();\\n\\t\\t}}\\n\\t>\\n\\t\\t{synonym.title}\\n\\t</div>\\n\\n\\t{#if show}\\n\\t\\t<div class=\\"details\\">\\n\\t\\t\\t<div class=\\"row\\">\\n\\t\\t\\t\\t<div class=\\"col-lg-6 col-md-6\\">\\n\\t\\t\\t\\t\\t{synonym.overview}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\"col-lg-6 col-md-6\\">\\n\\t\\t\\t\\t\\t{synonym.list}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<!--  -->\\n\\t\\t\\t<br />\\n\\t\\t\\t<hr />\\n\\t\\t\\t<br />\\n\\t\\t\\t<div class=\\"words\\">\\n\\t\\t\\t\\t{#each synonym.words || [] as word}{/each}\\n\\t\\t\\t\\t{#if addingWord}\\n\\t\\t\\t\\t\\t<div class=\\"adding-word\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\"text\\" class=\\"form-control\\" bind:value={searchRoots} on:keyup={findWords} />\\n\\t\\t\\t\\t\\t\\t{#if rootWords}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"search-results\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{#each rootWords.verbs || [] as word}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li on:click={(stampWord(word), 'v')}>{word.v_word}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t\\t\\t{#each rootWords.non_verbs || [] as word}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li on:click={(stampWord(word), 'nv')}>{word.nv_word}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t<div class=\\"add\\">\\n\\t\\t\\t\\t\\t<div class=\\"btn btn-primary\\" on:click={addWord}><i class=\\"fa fa-plus\\" /></div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t{/if}\\n</div>\\n\\n<style>\\n\\t.synonym {\\n\\t\\tfont-size: 18px;\\n\\t\\tmargin: 8px;\\n\\t}\\n\\n\\t.selected {\\n\\t\\tfont-weight: bold;\\n\\t\\tfont-size: 24px;\\n\\t}\\n\\n\\t.details {\\n\\t\\tbackground-color: #eee;\\n\\t\\tpadding: 14px;\\n\\t}\\n\\n\\t.adding-word {\\n\\t\\tmax-width: 145px;\\n\\t\\tposition: relative;\\n\\t}\\n\\n\\t.words > div {\\n\\t\\tdisplay: inline-block;\\n\\t}\\n\\n\\t.search-results {\\n\\t\\tposition: absolute;\\n\\t\\tbackground: #fff;\\n\\t\\twidth: 100%;\\n\\t\\tlist-style: none;\\n\\t\\toverflow-y: scroll;\\n\\t\\theight: 200px;\\n\\t}\\n\\n\\t.search-results li {\\n\\t\\tpadding: 10px;\\n\\t}\\n\\n\\t.search-results li:hover {\\n\\t\\tbackground-color: #eee;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAwFC,oCAAS,CACR,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GACT,CAEA,qCAAU,CACT,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IACZ,CAEA,oCAAS,CACR,gBAAgB,CAAE,IAAI,CACtB,OAAO,CAAE,IACV,CAEA,wCAAa,CACZ,SAAS,CAAE,KAAK,CAChB,QAAQ,CAAE,QACX,CAEA,oBAAM,CAAG,iBAAI,CACZ,OAAO,CAAE,YACV,CAEA,2CAAgB,CACf,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,KACT,CAEA,6BAAe,CAAC,gBAAG,CAClB,OAAO,CAAE,IACV,CAEA,6BAAe,CAAC,gBAAE,MAAO,CACxB,gBAAgB,CAAE,IACnB"}`
};
const Show = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { synonym } = $$props;
  if ($$props.synonym === void 0 && $$bindings.synonym && synonym !== void 0) $$bindings.synonym(synonym);
  $$result.css.add(css$1);
  return `<div class="synonym svelte-31lwxl"> <div class="${["title svelte-31lwxl", ""].join(" ").trim()}">${escape(synonym.title)}</div> ${``} </div>`;
});
const css = {
  code: ".synonyms.svelte-yh3djq{margin:20px}.wrapper.svelte-yh3djq{max-height:80vh;overflow-y:scroll}",
  map: `{"version":3,"file":"Index.svelte","sources":["Index.svelte"],"sourcesContent":["<script>\\n\\timport API from '$lib/api/api';\\n\\timport { onMount } from 'svelte';\\n\\timport Nav from './Nav.svelte';\\n\\timport Synonym from './Synonym/Show.svelte';\\n\\n\\tlet synonyms = [];\\n\\n\\tonMount(async () => {\\n\\t\\tsynonyms = await API.get('/synonyms.json');\\n\\t\\tconsole.log(synonyms);\\n\\t});\\n<\/script>\\n\\n<Nav />\\n\\n<div class=\\"wrapper\\">\\n\\t<div class=\\"synonyms\\">\\n\\t\\t{#each synonyms as synonym}\\n\\t\\t\\t<Synonym {synonym} />\\n\\t\\t{/each}\\n\\t</div>\\n</div>\\n\\n<style>\\n\\t.synonyms {\\n\\t\\tmargin: 20px;\\n\\t}\\n\\n\\t.wrapper {\\n\\t\\tmax-height: 80vh;\\n\\t\\toverflow-y: scroll;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAyBC,uBAAU,CACT,MAAM,CAAE,IACT,CAEA,sBAAS,CACR,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,MACb"}`
};
const Index = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let synonyms = [];
  $$result.css.add(css);
  return `${validate_component(Nav, "Nav").$$render($$result, {}, {}, {})} <div class="wrapper svelte-yh3djq"><div class="synonyms svelte-yh3djq">${each(synonyms, (synonym) => {
    return `${validate_component(Show, "Synonym").$$render($$result, { synonym }, {}, {})}`;
  })}</div> </div>`;
});
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Index, "Synonyms").$$render($$result, {}, {}, {})}`;
});
export {
  Page as default
};
