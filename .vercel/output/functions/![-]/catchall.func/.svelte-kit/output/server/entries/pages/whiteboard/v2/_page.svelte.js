import { c as create_ssr_component, e as each, v as validate_component, d as escape } from "../../../../chunks/ssr.js";
import { E as ExcaliDraw } from "../../../../chunks/ExcaliDraw.js";
const css = {
  code: ".excalidraw-container.svelte-z1m6he{height:calc(100vh - 50px);width:100%}.excalidraw-container > div{height:100%}nav.svelte-z1m6he{position:fixed;bottom:0;left:0;right:0;height:50px;background-color:#f0f0f0;display:flex;align-items:center;padding:0 10px;box-sizing:border-box;justify-content:space-between}button.svelte-z1m6he{margin-right:10px;padding:5px 10px;background-color:#007bff;color:white;border:none;border-radius:4px;cursor:pointer}button.svelte-z1m6he:hover{background-color:#0056b3}.page-button.svelte-z1m6he{background-color:#6c757d}.page-button.active.svelte-z1m6he{background-color:#28a745}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n\\timport { onMount } from 'svelte';\\n\\timport ExcalidrawWrapper from '$lib/components/WhiteBoard/ExcaliDraw.svelte';\\n\\n\\tlet excalidrawAPI;\\n\\tlet pages = [{ id: 1, content: null }];\\n\\tlet currentPageIndex = 0;\\n\\n\\tfunction handleReady(event) {\\n\\t\\texcalidrawAPI = event.detail;\\n\\t\\tloadPageContent();\\n\\t}\\n\\n\\tfunction loadPageContent() {\\n\\t\\tif (pages[currentPageIndex].content) {\\n\\t\\t\\texcalidrawAPI.updateScene(JSON.parse(pages[currentPageIndex].content));\\n\\t\\t} else {\\n\\t\\t\\texcalidrawAPI.updateScene({ elements: [], appState: {} });\\n\\t\\t}\\n\\t}\\n\\n\\tasync function saveCurrentPage() {\\n\\t\\tif (excalidrawAPI) {\\n\\t\\t\\tconst elements = excalidrawAPI.getSceneElements();\\n\\t\\t\\tconst appState = excalidrawAPI.getAppState();\\n\\t\\t\\tconst scene = { elements, appState };\\n\\t\\t\\tpages[currentPageIndex].content = JSON.stringify(scene);\\n\\t\\t\\tpages = pages;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction addNewPage() {\\n\\t\\tsaveCurrentPage();\\n\\t\\tpages = [...pages, { id: pages.length + 1, content: null }];\\n\\t\\tcurrentPageIndex = pages.length - 1;\\n\\t}\\n\\n\\tfunction switchPage(index) {\\n\\t\\tsaveCurrentPage();\\n\\t\\tcurrentPageIndex = index;\\n\\t\\tloadPageContent();\\n\\t}\\n\\n\\tasync function exportToPNG() {\\n\\t\\tif (excalidrawAPI) {\\n\\t\\t\\tconst blob = await excalidrawAPI.exportToBlob({\\n\\t\\t\\t\\telements: excalidrawAPI.getSceneElements(),\\n\\t\\t\\t\\tmimeType: 'image/png',\\n\\t\\t\\t\\tappState: excalidrawAPI.getAppState()\\n\\t\\t\\t});\\n\\t\\t\\tconst url = window.URL.createObjectURL(blob);\\n\\t\\t\\tconst link = document.createElement('a');\\n\\t\\t\\tlink.href = url;\\n\\t\\t\\tlink.download = \`excalidraw-page-\${currentPageIndex + 1}.png\`;\\n\\t\\t\\tlink.click();\\n\\t\\t}\\n\\t}\\n<\/script>\\n\\n{#each pages as page, index}\\n\\t<div class=\\"excalidraw-container\\" class:hidden={currentPageIndex !== index}>\\n\\t\\t<ExcalidrawWrapper on:ready={handleReady} />\\n\\t</div>\\n{/each}\\n\\n<nav>\\n\\t<div class=\\"pages\\">\\n\\t\\t{#each pages as page, index}\\n\\t\\t\\t<button\\n\\t\\t\\t\\tclass=\\"page-button {currentPageIndex === index ? 'active' : ''}\\"\\n\\t\\t\\t\\ton:click={() => switchPage(index)}\\n\\t\\t\\t>\\n\\t\\t\\t\\t{page.id}\\n\\t\\t\\t</button>\\n\\t\\t{/each}\\n\\t\\t<button on:click={addNewPage}>+</button>\\n\\t</div>\\n\\t<div class=\\"controls\\">\\n\\t\\t<button on:click={exportToPNG}>Export to PNG</button>\\n\\t</div>\\n</nav>\\n\\n<style>\\n\\t.excalidraw-container {\\n\\t\\theight: calc(100vh - 50px);\\n\\t\\twidth: 100%;\\n\\t}\\n\\n\\t:global(.excalidraw-container > div) {\\n\\t\\theight: 100%;\\n\\t}\\n\\n\\tnav {\\n\\t\\tposition: fixed;\\n\\t\\tbottom: 0;\\n\\t\\tleft: 0;\\n\\t\\tright: 0;\\n\\t\\theight: 50px;\\n\\t\\tbackground-color: #f0f0f0;\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tpadding: 0 10px;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tjustify-content: space-between;\\n\\t}\\n\\n\\tbutton {\\n\\t\\tmargin-right: 10px;\\n\\t\\tpadding: 5px 10px;\\n\\t\\tbackground-color: #007bff;\\n\\t\\tcolor: white;\\n\\t\\tborder: none;\\n\\t\\tborder-radius: 4px;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\n\\tbutton:hover {\\n\\t\\tbackground-color: #0056b3;\\n\\t}\\n\\n\\t.page-button {\\n\\t\\tbackground-color: #6c757d;\\n\\t}\\n\\n\\t.page-button.active {\\n\\t\\tbackground-color: #28a745;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAmFC,mCAAsB,CACrB,MAAM,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAC1B,KAAK,CAAE,IACR,CAEQ,2BAA6B,CACpC,MAAM,CAAE,IACT,CAEA,iBAAI,CACH,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,CACzB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,UAAU,CAAE,UAAU,CACtB,eAAe,CAAE,aAClB,CAEA,oBAAO,CACN,YAAY,CAAE,IAAI,CAClB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,OACT,CAEA,oBAAM,MAAO,CACZ,gBAAgB,CAAE,OACnB,CAEA,0BAAa,CACZ,gBAAgB,CAAE,OACnB,CAEA,YAAY,qBAAQ,CACnB,gBAAgB,CAAE,OACnB"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let pages = [{ id: 1, content: null }];
  let currentPageIndex = 0;
  $$result.css.add(css);
  return `${each(pages, (page, index) => {
    return `<div class="${[
      "excalidraw-container svelte-z1m6he",
      currentPageIndex !== index ? "hidden" : ""
    ].join(" ").trim()}">${validate_component(ExcaliDraw, "ExcalidrawWrapper").$$render($$result, {}, {}, {})} </div>`;
  })} <nav class="svelte-z1m6he"><div class="pages">${each(pages, (page, index) => {
    return `<button class="${"page-button " + escape(currentPageIndex === index ? "active" : "", true) + " svelte-z1m6he"}">${escape(page.id)} </button>`;
  })} <button class="svelte-z1m6he" data-svelte-h="svelte-1dl0ud7">+</button></div> <div class="controls"><button class="svelte-z1m6he" data-svelte-h="svelte-1vig5ao">Export to PNG</button></div> </nav>`;
});
export {
  Page as default
};
